

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Oct 25 02:04:37 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    99                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   100                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   101                           	dabs	1,0x400,48,_BDT
   102                           	dabs	1,0x500,64,_cdc_data_tx
   103                           	dabs	1,0x438,8,_CtrlTrfData
   104                           	dabs	1,0x430,8,_SetupPkt
   105                           	dabs	1,0x540,64,_cdc_data_rx
   106  0000                     
   107                           	psect	idataBANK1
   108  003770                     __pidataBANK1:
   109                           	opt stack 0
   110                           
   111                           ;initializer for _algo_Name
   112  003770  4C                 	db	76
   113  003771  49                 	db	73
   114  003772  50                 	db	80
   115  003773  4F                 	db	79
   116  003774  00                 	db	0
   117  003775  4E                 	db	78
   118  003776  49                 	db	73
   119  003777  4D                 	db	77
   120  003778  48                 	db	72
   121  003779  00                 	db	0
   122  00377A  50                 	db	80
   123  00377B  42                 	db	66
   124  00377C  00                 	db	0
   125  00377D  00                 	db	0
   126  00377E  00                 	db	0
   127                           
   128                           	psect	mediumconst
   129  007D58                     __pmediumconst:
   130                           	opt stack 0
   131  007D58  00                 	db	0
   132  007D59                     _hexpowers:
   133                           	opt stack 0
   134  007D59  0001               	dw	1
   135  007D5B  0010               	dw	16
   136  007D5D  0100               	dw	256
   137  007D5F  1000               	dw	4096
   138  007D61                     __end_of_hexpowers:
   139                           	opt stack 0
   140  007D61                     _USB_SD_Ptr:
   141                           	opt stack 0
   142  007D61  44                 	db	low _sd000
   143  007D62  7E                 	db	high _sd000
   144  007D63  FA                 	db	low _sd001
   145  007D64  7D                 	db	high _sd001
   146  007D65  69                 	db	low _sd002
   147  007D66  7D                 	db	high _sd002
   148  007D67                     __end_of_USB_SD_Ptr:
   149                           	opt stack 0
   150  007D67                     _USB_CD_Ptr:
   151                           	opt stack 0
   152  007D67  B7                 	db	low _configDescriptor1
   153  007D68  7D                 	db	high _configDescriptor1
   154  007D69                     __end_of_USB_CD_Ptr:
   155                           	opt stack 0
   156  007D69                     _sd002:
   157                           	opt stack 0
   158  007D69  4E                 	db	78
   159  007D6A  03                 	db	3
   160  007D6B  0043               	dw	67
   161  007D6D  0044               	dw	68
   162  007D6F  0043               	dw	67
   163  007D71  0020               	dw	32
   164  007D73  0052               	dw	82
   165  007D75  0053               	dw	83
   166  007D77  002D               	dw	45
   167  007D79  0032               	dw	50
   168  007D7B  0033               	dw	51
   169  007D7D  0032               	dw	50
   170  007D7F  0020               	dw	32
   171  007D81  0045               	dw	69
   172  007D83  006D               	dw	109
   173  007D85  0075               	dw	117
   174  007D87  006C               	dw	108
   175  007D89  0061               	dw	97
   176  007D8B  0074               	dw	116
   177  007D8D  0069               	dw	105
   178  007D8F  006F               	dw	111
   179  007D91  006E               	dw	110
   180  007D93  0020               	dw	32
   181  007D95  0044               	dw	68
   182  007D97  0065               	dw	101
   183  007D99  006D               	dw	109
   184  007D9B  006F               	dw	111
   185  007D9D  0020               	dw	32
   186  007D9F  0028               	dw	40
   187  007DA1  002D               	dw	45
   188  007DA3  003E               	dw	62
   189  007DA5  0020               	dw	32
   190  007DA7  0031               	dw	49
   191  007DA9  0038               	dw	56
   192  007DAB  0046               	dw	70
   193  007DAD  0032               	dw	50
   194  007DAF  0035               	dw	53
   195  007DB1  0035               	dw	53
   196  007DB3  0030               	dw	48
   197  007DB5  0029               	dw	41
   198  007DB7                     __end_of_sd002:
   199                           	opt stack 0
   200  007DB7                     _configDescriptor1:
   201                           	opt stack 0
   202  007DB7  09                 	db	9
   203  007DB8  02                 	db	2
   204  007DB9  43                 	db	67
   205  007DBA  00                 	db	0
   206  007DBB  02                 	db	2
   207  007DBC  01                 	db	1
   208  007DBD  00                 	db	0
   209  007DBE  C0                 	db	192
   210  007DBF  32                 	db	50
   211  007DC0  09                 	db	9
   212  007DC1  04                 	db	4
   213  007DC2  00                 	db	0
   214  007DC3  00                 	db	0
   215  007DC4  01                 	db	1
   216  007DC5  02                 	db	2
   217  007DC6  02                 	db	2
   218  007DC7  01                 	db	1
   219  007DC8  00                 	db	0
   220  007DC9  05                 	db	5
   221  007DCA  24                 	db	36
   222  007DCB  00                 	db	0
   223  007DCC  10                 	db	16
   224  007DCD  01                 	db	1
   225  007DCE  04                 	db	4
   226  007DCF  24                 	db	36
   227  007DD0  02                 	db	2
   228  007DD1  02                 	db	2
   229  007DD2  05                 	db	5
   230  007DD3  24                 	db	36
   231  007DD4  06                 	db	6
   232  007DD5  00                 	db	0
   233  007DD6  01                 	db	1
   234  007DD7  05                 	db	5
   235  007DD8  24                 	db	36
   236  007DD9  01                 	db	1
   237  007DDA  00                 	db	0
   238  007DDB  01                 	db	1
   239  007DDC  07                 	db	7
   240  007DDD  05                 	db	5
   241  007DDE  81                 	db	129
   242  007DDF  03                 	db	3
   243  007DE0  08                 	db	8
   244  007DE1  00                 	db	0
   245  007DE2  02                 	db	2
   246  007DE3  09                 	db	9
   247  007DE4  04                 	db	4
   248  007DE5  01                 	db	1
   249  007DE6  00                 	db	0
   250  007DE7  02                 	db	2
   251  007DE8  0A                 	db	10
   252  007DE9  00                 	db	0
   253  007DEA  00                 	db	0
   254  007DEB  00                 	db	0
   255  007DEC  07                 	db	7
   256  007DED  05                 	db	5
   257  007DEE  02                 	db	2
   258  007DEF  02                 	db	2
   259  007DF0  40                 	db	64
   260  007DF1  00                 	db	0
   261  007DF2  00                 	db	0
   262  007DF3  07                 	db	7
   263  007DF4  05                 	db	5
   264  007DF5  82                 	db	130
   265  007DF6  02                 	db	2
   266  007DF7  40                 	db	64
   267  007DF8  00                 	db	0
   268  007DF9  00                 	db	0
   269  007DFA                     __end_of_configDescriptor1:
   270                           	opt stack 0
   271  007DFA                     _sd001:
   272                           	opt stack 0
   273  007DFA  38                 	db	56
   274  007DFB  03                 	db	3
   275  007DFC  0041               	dw	65
   276  007DFE  0020               	dw	32
   277  007E00  004D               	dw	77
   278  007E02  0069               	dw	105
   279  007E04  0063               	dw	99
   280  007E06  0072               	dw	114
   281  007E08  006F               	dw	111
   282  007E0A  0063               	dw	99
   283  007E0C  0068               	dw	104
   284  007E0E  0069               	dw	105
   285  007E10  0070               	dw	112
   286  007E12  0020               	dw	32
   287  007E14  0054               	dw	84
   288  007E16  0065               	dw	101
   289  007E18  0063               	dw	99
   290  007E1A  0068               	dw	104
   291  007E1C  006E               	dw	110
   292  007E1E  006F               	dw	111
   293  007E20  006C               	dw	108
   294  007E22  006F               	dw	111
   295  007E24  0067               	dw	103
   296  007E26  0079               	dw	121
   297  007E28  0020               	dw	32
   298  007E2A  0049               	dw	73
   299  007E2C  006E               	dw	110
   300  007E2E  0063               	dw	99
   301  007E30  002E               	dw	46
   302  007E32                     __end_of_sd001:
   303                           	opt stack 0
   304  007E32                     _device_dsc:
   305                           	opt stack 0
   306  007E32  12                 	db	18
   307  007E33  01                 	db	1
   308  007E34  0200               	dw	512
   309  007E36  02                 	db	2
   310  007E37  00                 	db	0
   311  007E38  00                 	db	0
   312  007E39  08                 	db	8
   313  007E3A  04D8               	dw	1240
   314  007E3C  000A               	dw	10
   315  007E3E  0001               	dw	1
   316  007E40  01                 	db	1
   317  007E41  02                 	db	2
   318  007E42  00                 	db	0
   319  007E43  01                 	db	1
   320  007E44                     __end_of_device_dsc:
   321                           	opt stack 0
   322  007E44                     _sd000:
   323                           	opt stack 0
   324  007E44  04                 	db	4
   325  007E45  03                 	db	3
   326  007E46  0409               	dw	1033
   327  007E48                     __end_of_sd000:
   328                           	opt stack 0
   329  007E48                     STR_9:
   330                           
   331                           ; BSR set to: 0
   332  007E48  70                 	db	112	;'p'
   333  007E49  72                 	db	114	;'r'
   334  007E4A  65                 	db	101	;'e'
   335  007E4B  63                 	db	99	;'c'
   336  007E4C  6F                 	db	111	;'o'
   337  007E4D  6E                 	db	110	;'n'
   338  007E4E  64                 	db	100	;'d'
   339  007E4F  69                 	db	105	;'i'
   340  007E50  74                 	db	116	;'t'
   341  007E51  69                 	db	105	;'i'
   342  007E52  6F                 	db	111	;'o'
   343  007E53  6E                 	db	110	;'n'
   344  007E54  20                 	db	32
   345  007E55  76                 	db	118	;'v'
   346  007E56  65                 	db	101	;'e'
   347  007E57  72                 	db	114	;'r'
   348  007E58  69                 	db	105	;'i'
   349  007E59  66                 	db	102	;'f'
   350  007E5A  69                 	db	105	;'i'
   351  007E5B  63                 	db	99	;'c'
   352  007E5C  61                 	db	97	;'a'
   353  007E5D  74                 	db	116	;'t'
   354  007E5E  69                 	db	105	;'i'
   355  007E5F  6F                 	db	111	;'o'
   356  007E60  6E                 	db	110	;'n'
   357  007E61  20                 	db	32
   358  007E62  66                 	db	102	;'f'
   359  007E63  61                 	db	97	;'a'
   360  007E64  69                 	db	105	;'i'
   361  007E65  6C                 	db	108	;'l'
   362  007E66  75                 	db	117	;'u'
   363  007E67  72                 	db	114	;'r'
   364  007E68  65                 	db	101	;'e'
   365  007E69  00                 	db	0
   366  007E6A                     STR_28:
   367                           
   368                           ; BSR set to: 0
   369  007E6A  76                 	db	118	;'v'
   370  007E6B  6F                 	db	111	;'o'
   371  007E6C  6C                 	db	108	;'l'
   372  007E6D  74                 	db	116	;'t'
   373  007E6E  61                 	db	97	;'a'
   374  007E6F  67                 	db	103	;'g'
   375  007E70  65                 	db	101	;'e'
   376  007E71  20                 	db	32
   377  007E72  3A                 	db	58	;':'
   378  007E73  20                 	db	32
   379  007E74  25                 	db	37
   380  007E75  66                 	db	102	;'f'
   381  007E76  2C                 	db	44
   382  007E77  20                 	db	32
   383  007E78  70                 	db	112	;'p'
   384  007E79  72                 	db	114	;'r'
   385  007E7A  65                 	db	101	;'e'
   386  007E7B  63                 	db	99	;'c'
   387  007E7C  6F                 	db	111	;'o'
   388  007E7D  6E                 	db	110	;'n'
   389  007E7E  64                 	db	100	;'d'
   390  007E7F  69                 	db	105	;'i'
   391  007E80  74                 	db	116	;'t'
   392  007E81  69                 	db	105	;'i'
   393  007E82  6F                 	db	111	;'o'
   394  007E83  6E                 	db	110	;'n'
   395  007E84  20                 	db	32
   396  007E85  3A                 	db	58	;':'
   397  007E86  20                 	db	32
   398  007E87  25                 	db	37
   399  007E88  68                 	db	104	;'h'
   400  007E89  64                 	db	100	;'d'
   401  007E8A  00                 	db	0
   402  007E8B                     STR_12:
   403                           
   404                           ; BSR set to: 0
   405  007E8B  50                 	db	80	;'P'
   406  007E8C  72                 	db	114	;'r'
   407  007E8D  65                 	db	101	;'e'
   408  007E8E  63                 	db	99	;'c'
   409  007E8F  6F                 	db	111	;'o'
   410  007E90  6E                 	db	110	;'n'
   411  007E91  64                 	db	100	;'d'
   412  007E92  69                 	db	105	;'i'
   413  007E93  74                 	db	116	;'t'
   414  007E94  69                 	db	105	;'i'
   415  007E95  6F                 	db	111	;'o'
   416  007E96  6E                 	db	110	;'n'
   417  007E97  20                 	db	32
   418  007E98  73                 	db	115	;'s'
   419  007E99  61                 	db	97	;'a'
   420  007E9A  66                 	db	102	;'f'
   421  007E9B  65                 	db	101	;'e'
   422  007E9C  74                 	db	116	;'t'
   423  007E9D  79                 	db	121	;'y'
   424  007E9E  20                 	db	32
   425  007E9F  74                 	db	116	;'t'
   426  007EA0  69                 	db	105	;'i'
   427  007EA1  6D                 	db	109	;'m'
   428  007EA2  65                 	db	101	;'e'
   429  007EA3  72                 	db	114	;'r'
   430  007EA4  20                 	db	32
   431  007EA5  65                 	db	101	;'e'
   432  007EA6  6E                 	db	110	;'n'
   433  007EA7  64                 	db	100	;'d'
   434  007EA8  65                 	db	101	;'e'
   435  007EA9  64                 	db	100	;'d'
   436  007EAA  00                 	db	0
   437  007EAB                     STR_7:
   438                           
   439                           ; BSR set to: 0
   440  007EAB  50                 	db	80	;'P'
   441  007EAC  72                 	db	114	;'r'
   442  007EAD  65                 	db	101	;'e'
   443  007EAE  63                 	db	99	;'c'
   444  007EAF  6F                 	db	111	;'o'
   445  007EB0  6E                 	db	110	;'n'
   446  007EB1  64                 	db	100	;'d'
   447  007EB2  69                 	db	105	;'i'
   448  007EB3  74                 	db	116	;'t'
   449  007EB4  69                 	db	105	;'i'
   450  007EB5  6F                 	db	111	;'o'
   451  007EB6  6E                 	db	110	;'n'
   452  007EB7  20                 	db	32
   453  007EB8  73                 	db	115	;'s'
   454  007EB9  74                 	db	116	;'t'
   455  007EBA  61                 	db	97	;'a'
   456  007EBB  72                 	db	114	;'r'
   457  007EBC  74                 	db	116	;'t'
   458  007EBD  69                 	db	105	;'i'
   459  007EBE  6E                 	db	110	;'n'
   460  007EBF  67                 	db	103	;'g'
   461  007EC0  20                 	db	32
   462  007EC1  66                 	db	102	;'f'
   463  007EC2  61                 	db	97	;'a'
   464  007EC3  69                 	db	105	;'i'
   465  007EC4  6C                 	db	108	;'l'
   466  007EC5  75                 	db	117	;'u'
   467  007EC6  72                 	db	114	;'r'
   468  007EC7  65                 	db	101	;'e'
   469  007EC8  00                 	db	0
   470  007EC9                     STR_6:
   471                           
   472                           ; BSR set to: 0
   473  007EC9  50                 	db	80	;'P'
   474  007ECA  72                 	db	114	;'r'
   475  007ECB  65                 	db	101	;'e'
   476  007ECC  63                 	db	99	;'c'
   477  007ECD  6F                 	db	111	;'o'
   478  007ECE  6E                 	db	110	;'n'
   479  007ECF  64                 	db	100	;'d'
   480  007ED0  69                 	db	105	;'i'
   481  007ED1  74                 	db	116	;'t'
   482  007ED2  69                 	db	105	;'i'
   483  007ED3  6F                 	db	111	;'o'
   484  007ED4  6E                 	db	110	;'n'
   485  007ED5  20                 	db	32
   486  007ED6  63                 	db	99	;'c'
   487  007ED7  68                 	db	104	;'h'
   488  007ED8  65                 	db	101	;'e'
   489  007ED9  63                 	db	99	;'c'
   490  007EDA  6B                 	db	107	;'k'
   491  007EDB  20                 	db	32
   492  007EDC  66                 	db	102	;'f'
   493  007EDD  61                 	db	97	;'a'
   494  007EDE  69                 	db	105	;'i'
   495  007EDF  6C                 	db	108	;'l'
   496  007EE0  75                 	db	117	;'u'
   497  007EE1  72                 	db	114	;'r'
   498  007EE2  65                 	db	101	;'e'
   499  007EE3  00                 	db	0
   500  007EE4                     STR_15:
   501                           
   502                           ; BSR set to: 0
   503  007EE4  43                 	db	67	;'C'
   504  007EE5  43                 	db	67	;'C'
   505  007EE6  20                 	db	32
   506  007EE7  76                 	db	118	;'v'
   507  007EE8  65                 	db	101	;'e'
   508  007EE9  72                 	db	114	;'r'
   509  007EEA  69                 	db	105	;'i'
   510  007EEB  66                 	db	102	;'f'
   511  007EEC  69                 	db	105	;'i'
   512  007EED  63                 	db	99	;'c'
   513  007EEE  61                 	db	97	;'a'
   514  007EEF  74                 	db	116	;'t'
   515  007EF0  69                 	db	105	;'i'
   516  007EF1  6F                 	db	111	;'o'
   517  007EF2  6E                 	db	110	;'n'
   518  007EF3  20                 	db	32
   519  007EF4  66                 	db	102	;'f'
   520  007EF5  61                 	db	97	;'a'
   521  007EF6  69                 	db	105	;'i'
   522  007EF7  6C                 	db	108	;'l'
   523  007EF8  75                 	db	117	;'u'
   524  007EF9  72                 	db	114	;'r'
   525  007EFA  65                 	db	101	;'e'
   526  007EFB  00                 	db	0
   527  007EFC                     STR_21:
   528                           
   529                           ; BSR set to: 0
   530  007EFC  43                 	db	67	;'C'
   531  007EFD  56                 	db	86	;'V'
   532  007EFE  20                 	db	32
   533  007EFF  76                 	db	118	;'v'
   534  007F00  65                 	db	101	;'e'
   535  007F01  72                 	db	114	;'r'
   536  007F02  69                 	db	105	;'i'
   537  007F03  66                 	db	102	;'f'
   538  007F04  69                 	db	105	;'i'
   539  007F05  63                 	db	99	;'c'
   540  007F06  61                 	db	97	;'a'
   541  007F07  74                 	db	116	;'t'
   542  007F08  69                 	db	105	;'i'
   543  007F09  6F                 	db	111	;'o'
   544  007F0A  6E                 	db	110	;'n'
   545  007F0B  20                 	db	32
   546  007F0C  66                 	db	102	;'f'
   547  007F0D  61                 	db	97	;'a'
   548  007F0E  69                 	db	105	;'i'
   549  007F0F  6C                 	db	108	;'l'
   550  007F10  75                 	db	117	;'u'
   551  007F11  72                 	db	114	;'r'
   552  007F12  65                 	db	101	;'e'
   553  007F13  00                 	db	0
   554  007F14                     STR_18:
   555                           
   556                           ; BSR set to: 0
   557  007F14  43                 	db	67	;'C'
   558  007F15  43                 	db	67	;'C'
   559  007F16  20                 	db	32
   560  007F17  73                 	db	115	;'s'
   561  007F18  61                 	db	97	;'a'
   562  007F19  66                 	db	102	;'f'
   563  007F1A  65                 	db	101	;'e'
   564  007F1B  74                 	db	116	;'t'
   565  007F1C  79                 	db	121	;'y'
   566  007F1D  20                 	db	32
   567  007F1E  74                 	db	116	;'t'
   568  007F1F  69                 	db	105	;'i'
   569  007F20  6D                 	db	109	;'m'
   570  007F21  65                 	db	101	;'e'
   571  007F22  72                 	db	114	;'r'
   572  007F23  20                 	db	32
   573  007F24  65                 	db	101	;'e'
   574  007F25  6E                 	db	110	;'n'
   575  007F26  64                 	db	100	;'d'
   576  007F27  65                 	db	101	;'e'
   577  007F28  64                 	db	100	;'d'
   578  007F29  00                 	db	0
   579  007F2A                     STR_24:
   580                           
   581                           ; BSR set to: 0
   582  007F2A  43                 	db	67	;'C'
   583  007F2B  56                 	db	86	;'V'
   584  007F2C  20                 	db	32
   585  007F2D  73                 	db	115	;'s'
   586  007F2E  61                 	db	97	;'a'
   587  007F2F  66                 	db	102	;'f'
   588  007F30  65                 	db	101	;'e'
   589  007F31  74                 	db	116	;'t'
   590  007F32  79                 	db	121	;'y'
   591  007F33  20                 	db	32
   592  007F34  74                 	db	116	;'t'
   593  007F35  69                 	db	105	;'i'
   594  007F36  6D                 	db	109	;'m'
   595  007F37  65                 	db	101	;'e'
   596  007F38  72                 	db	114	;'r'
   597  007F39  20                 	db	32
   598  007F3A  65                 	db	101	;'e'
   599  007F3B  6E                 	db	110	;'n'
   600  007F3C  64                 	db	100	;'d'
   601  007F3D  65                 	db	101	;'e'
   602  007F3E  64                 	db	100	;'d'
   603  007F3F  00                 	db	0
   604  007F40                     STR_8:
   605                           
   606                           ; BSR set to: 0
   607  007F40  43                 	db	67	;'C'
   608  007F41  43                 	db	67	;'C'
   609  007F42  20                 	db	32
   610  007F43  73                 	db	115	;'s'
   611  007F44  74                 	db	116	;'t'
   612  007F45  61                 	db	97	;'a'
   613  007F46  72                 	db	114	;'r'
   614  007F47  74                 	db	116	;'t'
   615  007F48  69                 	db	105	;'i'
   616  007F49  6E                 	db	110	;'n'
   617  007F4A  67                 	db	103	;'g'
   618  007F4B  20                 	db	32
   619  007F4C  66                 	db	102	;'f'
   620  007F4D  61                 	db	97	;'a'
   621  007F4E  69                 	db	105	;'i'
   622  007F4F  6C                 	db	108	;'l'
   623  007F50  75                 	db	117	;'u'
   624  007F51  72                 	db	114	;'r'
   625  007F52  65                 	db	101	;'e'
   626  007F53  00                 	db	0
   627  007F54                     STR_20:
   628                           
   629                           ; BSR set to: 0
   630  007F54  43                 	db	67	;'C'
   631  007F55  56                 	db	86	;'V'
   632  007F56  20                 	db	32
   633  007F57  73                 	db	115	;'s'
   634  007F58  74                 	db	116	;'t'
   635  007F59  61                 	db	97	;'a'
   636  007F5A  72                 	db	114	;'r'
   637  007F5B  74                 	db	116	;'t'
   638  007F5C  69                 	db	105	;'i'
   639  007F5D  6E                 	db	110	;'n'
   640  007F5E  67                 	db	103	;'g'
   641  007F5F  20                 	db	32
   642  007F60  66                 	db	102	;'f'
   643  007F61  61                 	db	97	;'a'
   644  007F62  69                 	db	105	;'i'
   645  007F63  6C                 	db	108	;'l'
   646  007F64  75                 	db	117	;'u'
   647  007F65  72                 	db	114	;'r'
   648  007F66  65                 	db	101	;'e'
   649  007F67  00                 	db	0
   650  007F68                     STR_26:
   651                           
   652                           ; BSR set to: 0
   653  007F68  43                 	db	67	;'C'
   654  007F69  56                 	db	86	;'V'
   655  007F6A  20                 	db	32
   656  007F6B  73                 	db	115	;'s'
   657  007F6C  74                 	db	116	;'t'
   658  007F6D  6F                 	db	111	;'o'
   659  007F6E  70                 	db	112	;'p'
   660  007F6F  69                 	db	105	;'i'
   661  007F70  6E                 	db	110	;'n'
   662  007F71  67                 	db	103	;'g'
   663  007F72  20                 	db	32
   664  007F73  66                 	db	102	;'f'
   665  007F74  61                 	db	97	;'a'
   666  007F75  69                 	db	105	;'i'
   667  007F76  6C                 	db	108	;'l'
   668  007F77  75                 	db	117	;'u'
   669  007F78  72                 	db	114	;'r'
   670  007F79  65                 	db	101	;'e'
   671  007F7A  00                 	db	0
   672  007F7B                     STR_5:
   673                           
   674                           ; BSR set to: 0
   675  007F7B  4C                 	db	76	;'L'
   676  007F7C  69                 	db	105	;'i'
   677  007F7D  6F                 	db	111	;'o'
   678  007F7E  70                 	db	112	;'p'
   679  007F7F  20                 	db	32
   680  007F80  63                 	db	99	;'c'
   681  007F81  68                 	db	104	;'h'
   682  007F82  65                 	db	101	;'e'
   683  007F83  63                 	db	99	;'c'
   684  007F84  6B                 	db	107	;'k'
   685  007F85  20                 	db	32
   686  007F86  66                 	db	102	;'f'
   687  007F87  61                 	db	97	;'a'
   688  007F88  69                 	db	105	;'i'
   689  007F89  6C                 	db	108	;'l'
   690  007F8A  75                 	db	117	;'u'
   691  007F8B  72                 	db	114	;'r'
   692  007F8C  65                 	db	101	;'e'
   693  007F8D  00                 	db	0
   694  007F8E                     STR_4:
   695                           
   696                           ; BSR set to: 0
   697  007F8E  50                 	db	80	;'P'
   698  007F8F  72                 	db	114	;'r'
   699  007F90  6F                 	db	111	;'o'
   700  007F91  67                 	db	103	;'g'
   701  007F92  72                 	db	114	;'r'
   702  007F93  61                 	db	97	;'a'
   703  007F94  6D                 	db	109	;'m'
   704  007F95  20                 	db	32
   705  007F96  6C                 	db	108	;'l'
   706  007F97  69                 	db	105	;'i'
   707  007F98  73                 	db	115	;'s'
   708  007F99  74                 	db	116	;'t'
   709  007F9A  20                 	db	32
   710  007F9B  45                 	db	69	;'E'
   711  007F9C  72                 	db	114	;'r'
   712  007F9D  72                 	db	114	;'r'
   713  007F9E  6F                 	db	111	;'o'
   714  007F9F  72                 	db	114	;'r'
   715  007FA0  00                 	db	0
   716  007FA1                     STR_2:
   717                           
   718                           ; BSR set to: 0
   719  007FA1  42                 	db	66	;'B'
   720  007FA2  61                 	db	97	;'a'
   721  007FA3  74                 	db	116	;'t'
   722  007FA4  74                 	db	116	;'t'
   723  007FA5  65                 	db	101	;'e'
   724  007FA6  72                 	db	114	;'r'
   725  007FA7  79                 	db	121	;'y'
   726  007FA8  20                 	db	32
   727  007FA9  6C                 	db	108	;'l'
   728  007FAA  69                 	db	105	;'i'
   729  007FAB  73                 	db	115	;'s'
   730  007FAC  74                 	db	116	;'t'
   731  007FAD  20                 	db	32
   732  007FAE  45                 	db	69	;'E'
   733  007FAF  72                 	db	114	;'r'
   734  007FB0  72                 	db	114	;'r'
   735  007FB1  6F                 	db	111	;'o'
   736  007FB2  72                 	db	114	;'r'
   737  007FB3  00                 	db	0
   738  007FB4                     STR_3:
   739                           
   740                           ; BSR set to: 0
   741  007FB4  41                 	db	65	;'A'
   742  007FB5  63                 	db	99	;'c'
   743  007FB6  74                 	db	116	;'t'
   744  007FB7  69                 	db	105	;'i'
   745  007FB8  6F                 	db	111	;'o'
   746  007FB9  6E                 	db	110	;'n'
   747  007FBA  20                 	db	32
   748  007FBB  6C                 	db	108	;'l'
   749  007FBC  69                 	db	105	;'i'
   750  007FBD  73                 	db	115	;'s'
   751  007FBE  74                 	db	116	;'t'
   752  007FBF  20                 	db	32
   753  007FC0  45                 	db	69	;'E'
   754  007FC1  72                 	db	114	;'r'
   755  007FC2  72                 	db	114	;'r'
   756  007FC3  6F                 	db	111	;'o'
   757  007FC4  72                 	db	114	;'r'
   758  007FC5  00                 	db	0
   759  007FC6                     STR_38:
   760                           
   761                           ; BSR set to: 0
   762  007FC6  30                 	db	48	;'0'
   763  007FC7  31                 	db	49	;'1'
   764  007FC8  32                 	db	50	;'2'
   765  007FC9  33                 	db	51	;'3'
   766  007FCA  34                 	db	52	;'4'
   767  007FCB  35                 	db	53	;'5'
   768  007FCC  36                 	db	54	;'6'
   769  007FCD  37                 	db	55	;'7'
   770  007FCE  38                 	db	56	;'8'
   771  007FCF  39                 	db	57	;'9'
   772  007FD0  61                 	db	97	;'a'
   773  007FD1  62                 	db	98	;'b'
   774  007FD2  63                 	db	99	;'c'
   775  007FD3  64                 	db	100	;'d'
   776  007FD4  65                 	db	101	;'e'
   777  007FD5  66                 	db	102	;'f'
   778  007FD6  00                 	db	0
   779  007FD7                     STR_1:
   780                           
   781                           ; BSR set to: 0
   782  007FD7  43                 	db	67	;'C'
   783  007FD8  68                 	db	104	;'h'
   784  007FD9  61                 	db	97	;'a'
   785  007FDA  72                 	db	114	;'r'
   786  007FDB  67                 	db	103	;'g'
   787  007FDC  65                 	db	101	;'e'
   788  007FDD  72                 	db	114	;'r'
   789  007FDE  20                 	db	32
   790  007FDF  45                 	db	69	;'E'
   791  007FE0  72                 	db	114	;'r'
   792  007FE1  72                 	db	114	;'r'
   793  007FE2  6F                 	db	111	;'o'
   794  007FE3  72                 	db	114	;'r'
   795  007FE4  00                 	db	0
   796  007FE5                     STR_13:
   797                           
   798                           ; BSR set to: 0
   799  007FE5  50                 	db	80	;'P'
   800  007FE6  52                 	db	82	;'R'
   801  007FE7  4F                 	db	79	;'O'
   802  007FE8  47                 	db	71	;'G'
   803  007FE9  52                 	db	82	;'R'
   804  007FEA  45                 	db	69	;'E'
   805  007FEB  53                 	db	83	;'S'
   806  007FEC  53                 	db	83	;'S'
   807  007FED  00                 	db	0
   808  007FEE                     STR_27:
   809                           
   810                           ; BSR set to: 0
   811  007FEE  4C                 	db	76	;'L'
   812  007FEF  49                 	db	73	;'I'
   813  007FF0  50                 	db	80	;'P'
   814  007FF1  4F                 	db	79	;'O'
   815  007FF2  00                 	db	0
   816  007FF3  00                 	db	0
   817  007FF4                     STR_11:
   818                           
   819                           ; BSR set to: 0
   820  007FF4  54                 	db	84	;'T'
   821  007FF5  49                 	db	73	;'I'
   822  007FF6  4D                 	db	77	;'M'
   823  007FF7  45                 	db	69	;'E'
   824  007FF8  52                 	db	82	;'R'
   825  007FF9  00                 	db	0
   826  007FFA                     STR_10:
   827                           
   828                           ; BSR set to: 0
   829  007FFA  45                 	db	69	;'E'
   830  007FFB  4E                 	db	78	;'N'
   831  007FFC  44                 	db	68	;'D'
   832  007FFD  00                 	db	0
   833  0000                     
   834                           ; #config settings
   835  007FFE  00                 	db	0	; dummy byte at the end
   836  0000                     
   837                           	psect	nvBANK1
   838  0001E2                     __pnvBANK1:
   839                           	opt stack 0
   840  0001E2                     _cur_State:
   841                           	opt stack 0
   842  0001E2                     	ds	1
   843  0000                     _ADCON0	set	4034
   844  0000                     _ADCON0bits	set	4034
   845  0000                     _ADCON1	set	4033
   846  0000                     _ADCON2	set	4032
   847  0000                     _ADRESH	set	4036
   848  0000                     _ADRESL	set	4035
   849  0000                     _INTCONbits	set	4082
   850  0000                     _IPR2bits	set	4002
   851  0000                     _PIE1bits	set	3997
   852  0000                     _PIE2bits	set	4000
   853  0000                     _PIR1bits	set	3998
   854  0000                     _PIR2bits	set	4001
   855  0000                     _RCONbits	set	4048
   856  0000                     _T1CON	set	4045
   857  0000                     _T1CONbits	set	4045
   858  0000                     _TMR1H	set	4047
   859  0000                     _TMR1L	set	4046
   860  0000                     _UADDR	set	3950
   861  0000                     _UCFG	set	3951
   862  0000                     _UCON	set	3949
   863  0000                     _UCONbits	set	3949
   864  0000                     _UEIE	set	3947
   865  0000                     _UEIR	set	3946
   866  0000                     _UEP0bits	set	3952
   867  0000                     _UIE	set	3945
   868  0000                     _UIEbits	set	3945
   869  0000                     _UIR	set	3944
   870  0000                     _UIRbits	set	3944
   871  0000                     _USTAT	set	3948
   872  0000                     _UEP0	set	3952
   873  0000                     _UEP1	set	3953
   874                           
   875                           	psect	cinit
   876  00323E                     __pcinit:
   877                           	opt stack 0
   878  00323E                     start_initialization:
   879                           	opt stack 0
   880  00323E                     __initialization:
   881                           	opt stack 0
   882                           
   883                           ; Clear objects allocated to BANK2 (64 bytes)
   884  00323E  EE02  F000         	lfsr	0,__pbssBANK2
   885  003242  0E40               	movlw	64
   886  003244                     clear_0:
   887  003244  6AEE               	clrf	postinc0,c
   888  003246  06E8               	decf	wreg,f,c
   889  003248  E1FD               	bnz	clear_0
   890                           
   891                           ; Clear objects allocated to BANK1 (92 bytes)
   892  00324A  EE01  F077         	lfsr	0,__pbssBANK1
   893  00324E  0E5C               	movlw	92
   894  003250                     clear_1:
   895  003250  6AEE               	clrf	postinc0,c
   896  003252  06E8               	decf	wreg,f,c
   897  003254  E1FD               	bnz	clear_1
   898                           
   899                           ; Clear objects allocated to BANK0 (90 bytes)
   900  003256  EE00  F060         	lfsr	0,__pbssBANK0
   901  00325A  0E5A               	movlw	90
   902  00325C                     clear_2:
   903  00325C  6AEE               	clrf	postinc0,c
   904  00325E  06E8               	decf	wreg,f,c
   905  003260  E1FD               	bnz	clear_2
   906                           
   907                           ; Clear objects allocated to COMRAM (44 bytes)
   908  003262  EE00  F001         	lfsr	0,__pbssCOMRAM
   909  003266  0E2C               	movlw	44
   910  003268                     clear_3:
   911  003268  6AEE               	clrf	postinc0,c
   912  00326A  06E8               	decf	wreg,f,c
   913  00326C  E1FD               	bnz	clear_3
   914                           
   915                           ; Initialize objects allocated to BANK1 (15 bytes)
   916                           ; load TBLPTR registers with __pidataBANK1
   917  00326E  0E70               	movlw	low __pidataBANK1
   918  003270  6EF6               	movwf	tblptrl,c
   919  003272  0E37               	movlw	high __pidataBANK1
   920  003274  6EF7               	movwf	tblptrh,c
   921  003276  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   922  003278  6EF8               	movwf	tblptru,c
   923  00327A  EE01  F0D3         	lfsr	0,__pdataBANK1
   924  00327E  EE10 F00F          	lfsr	1,15
   925  003282                     copy_data0:
   926  003282  0009               	tblrd		*+
   927  003284  CFF5 FFEE          	movff	tablat,postinc0
   928  003288  50E5               	movf	postdec1,w,c
   929  00328A  50E1               	movf	fsr1l,w,c
   930  00328C  E1FA               	bnz	copy_data0
   931  00328E                     end_of_initialization:
   932                           	opt stack 0
   933  00328E                     __end_of__initialization:
   934                           	opt stack 0
   935  00328E  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   936  003290  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   937  003292  0E00               	movlw	low (__Lmediumconst shr (0+16))
   938  003294  6EF8               	movwf	tblptru,c
   939  003296  0100               	movlb	0
   940  003298  EFE4  F01B         	goto	_main	;jump to C main() function
   941                           tblptru	equ	0xFF8
   942                           tblptrh	equ	0xFF7
   943                           tblptrl	equ	0xFF6
   944                           tablat	equ	0xFF5
   945                           postinc0	equ	0xFEE
   946                           wreg	equ	0xFE8
   947                           postdec1	equ	0xFE5
   948                           fsr1l	equ	0xFE1
   949                           
   950                           	psect	bssCOMRAM
   951  000001                     __pbssCOMRAM:
   952                           	opt stack 0
   953  000001                     _BaudRateGen:
   954                           	opt stack 0
   955  000001                     	ds	4
   956  000005                     _CDCDataOutHandle:
   957                           	opt stack 0
   958  000005                     	ds	2
   959  000007                     _pBDTEntryEP0OutCurrent:
   960                           	opt stack 0
   961  000007                     	ds	2
   962  000009                     _pBDTEntryEP0OutNext:
   963                           	opt stack 0
   964  000009                     	ds	2
   965  00000B                     _pDst:
   966                           	opt stack 0
   967  00000B                     	ds	2
   968  00000D                     _BothEP0OutUOWNsSet:
   969                           	opt stack 0
   970  00000D                     	ds	1
   971  00000E                     _RemoteWakeup:
   972                           	opt stack 0
   973  00000E                     	ds	1
   974  00000F                     _USBDeferINDataStagePackets:
   975                           	opt stack 0
   976  00000F                     	ds	1
   977  000010                     _USBDeferOUTDataStagePackets:
   978                           	opt stack 0
   979  000010                     	ds	1
   980  000011                     _USBDeferStatusStagePacket:
   981                           	opt stack 0
   982  000011                     	ds	1
   983  000012                     _USBStatusStageEnabledFlag1:
   984                           	opt stack 0
   985  000012                     	ds	1
   986  000013                     _USBStatusStageEnabledFlag2:
   987                           	opt stack 0
   988  000013                     	ds	1
   989  000014                     _USBStatusStageTimeoutCounter:
   990                           	opt stack 0
   991  000014                     	ds	1
   992  000015                     _cdc_rx_len:
   993                           	opt stack 0
   994  000015                     	ds	1
   995  000016                     _controlTransferState:
   996                           	opt stack 0
   997  000016                     	ds	1
   998  000017                     _control_signal_bitmap:
   999                           	opt stack 0
  1000  000017                     	ds	1
  1001  000018                     _endpoint_number:
  1002                           	opt stack 0
  1003  000018                     	ds	1
  1004  000019                     _shortPacketStatus:
  1005                           	opt stack 0
  1006  000019                     	ds	1
  1007  00001A                     _dummy_encapsulated_cmd_response:
  1008                           	opt stack 0
  1009  00001A                     	ds	8
  1010  000022                     _line_coding:
  1011                           	opt stack 0
  1012  000022                     	ds	7
  1013  000029                     _USBAlternateInterface:
  1014                           	opt stack 0
  1015  000029                     	ds	2
  1016  00002B                     _USBActiveConfiguration:
  1017                           	opt stack 0
  1018  00002B                     	ds	1
  1019  00002C                     _USTATcopy:
  1020                           	opt stack 0
  1021  00002C                     	ds	1
  1022                           tblptru	equ	0xFF8
  1023                           tblptrh	equ	0xFF7
  1024                           tblptrl	equ	0xFF6
  1025                           tablat	equ	0xFF5
  1026                           postinc0	equ	0xFEE
  1027                           wreg	equ	0xFE8
  1028                           postdec1	equ	0xFE5
  1029                           fsr1l	equ	0xFE1
  1030                           
  1031                           	psect	bssBANK0
  1032  000060                     __pbssBANK0:
  1033                           	opt stack 0
  1034  000060                     _cdc_notice:
  1035                           	opt stack 0
  1036  000060                     	ds	10
  1037  00006A                     _outPipes:
  1038                           	opt stack 0
  1039  00006A                     	ds	8
  1040  000072                     _inPipes:
  1041                           	opt stack 0
  1042  000072                     	ds	6
  1043  000078                     _pBDTEntryIn:
  1044                           	opt stack 0
  1045  000078                     	ds	6
  1046  00007E                     _pBDTEntryOut:
  1047                           	opt stack 0
  1048  00007E                     	ds	6
  1049  000084                     _seconds:
  1050                           	opt stack 0
  1051  000084                     	ds	4
  1052  000088                     _charge_Time:
  1053                           	opt stack 0
  1054  000088                     	ds	3
  1055  00008B                     _ep_data_in:
  1056                           	opt stack 0
  1057  00008B                     	ds	3
  1058  00008E                     _ep_data_out:
  1059                           	opt stack 0
  1060  00008E                     	ds	3
  1061  000091                     _pCDCDst:
  1062                           	opt stack 0
  1063  000091                     	ds	3
  1064  000094                     _pCDCSrc:
  1065                           	opt stack 0
  1066  000094                     	ds	3
  1067  000097                     _precondition_Time:
  1068                           	opt stack 0
  1069  000097                     	ds	3
  1070  00009A                     _CDCDataInHandle:
  1071                           	opt stack 0
  1072  00009A                     	ds	2
  1073  00009C                     _timeout:
  1074                           	opt stack 0
  1075  00009C                     	ds	2
  1076  00009E                     _USBBusIsSuspended:
  1077                           	opt stack 0
  1078  00009E                     	ds	1
  1079  00009F                     _USBDeviceState:
  1080                           	opt stack 0
  1081  00009F                     	ds	1
  1082  0000A0                     _cdc_mem_type:
  1083                           	opt stack 0
  1084  0000A0                     	ds	1
  1085  0000A1                     _cdc_trf_state:
  1086                           	opt stack 0
  1087  0000A1                     	ds	1
  1088  0000A2                     _cdc_tx_len:
  1089                           	opt stack 0
  1090  0000A2                     	ds	1
  1091  0000A3                     _PI:
  1092                           	opt stack 0
  1093  0000A3                     	ds	23
  1094                           tblptru	equ	0xFF8
  1095                           tblptrh	equ	0xFF7
  1096                           tblptrl	equ	0xFF6
  1097                           tablat	equ	0xFF5
  1098                           postinc0	equ	0xFEE
  1099                           wreg	equ	0xFE8
  1100                           postdec1	equ	0xFE5
  1101                           fsr1l	equ	0xFE1
  1102                           
  1103                           	psect	bssBANK1
  1104  000177                     __pbssBANK1:
  1105                           	opt stack 0
  1106  000177                     _cur_Action:
  1107                           	opt stack 0
  1108  000177                     	ds	1
  1109  000178                     _cur_Program:
  1110                           	opt stack 0
  1111  000178                     	ds	1
  1112  000179                     _battery:
  1113                           	opt stack 0
  1114  000179                     	ds	90
  1115                           tblptru	equ	0xFF8
  1116                           tblptrh	equ	0xFF7
  1117                           tblptrl	equ	0xFF6
  1118                           tablat	equ	0xFF5
  1119                           postinc0	equ	0xFEE
  1120                           wreg	equ	0xFE8
  1121                           postdec1	equ	0xFE5
  1122                           fsr1l	equ	0xFE1
  1123                           
  1124                           	psect	dataBANK1
  1125  0001D3                     __pdataBANK1:
  1126                           	opt stack 0
  1127  0001D3                     _algo_Name:
  1128                           	opt stack 0
  1129  0001D3                     	ds	15
  1130                           tblptru	equ	0xFF8
  1131                           tblptrh	equ	0xFF7
  1132                           tblptrl	equ	0xFF6
  1133                           tablat	equ	0xFF5
  1134                           postinc0	equ	0xFEE
  1135                           wreg	equ	0xFE8
  1136                           postdec1	equ	0xFE5
  1137                           fsr1l	equ	0xFE1
  1138                           
  1139                           	psect	bssBANK2
  1140  000200                     __pbssBANK2:
  1141                           	opt stack 0
  1142  000200                     usb_send@usb_msg:
  1143                           	opt stack 0
  1144  000200                     	ds	64
  1145                           tblptru	equ	0xFF8
  1146                           tblptrh	equ	0xFF7
  1147                           tblptrl	equ	0xFF6
  1148                           tablat	equ	0xFF5
  1149                           postinc0	equ	0xFEE
  1150                           wreg	equ	0xFE8
  1151                           postdec1	equ	0xFE5
  1152                           fsr1l	equ	0xFE1
  1153                           
  1154                           	psect	cstackBANK1
  1155  000100                     __pcstackBANK1:
  1156                           	opt stack 0
  1157  000100                     start_Precondition@res:
  1158                           	opt stack 0
  1159  000100                     start_CC@res:
  1160                           	opt stack 0
  1161  000100                     start_CV@res:
  1162                           	opt stack 0
  1163  000100                     verifie_Precondition@voltage:
  1164                           	opt stack 0
  1165  000100                     verifie_Vbat@voltage:
  1166                           	opt stack 0
  1167  000100                     verifie_Ibat@current:
  1168                           	opt stack 0
  1169                           
  1170                           ; 3 bytes @ 0x0
  1171  000100                     	ds	3
  1172  000103                     verifie_Precondition@res:
  1173                           	opt stack 0
  1174  000103                     verifie_Vbat@res:
  1175                           	opt stack 0
  1176  000103                     verifie_Ibat@res:
  1177                           	opt stack 0
  1178                           
  1179                           ; 2 bytes @ 0x3
  1180  000103                     	ds	2
  1181  000105                     main@msg_Error:
  1182                           	opt stack 0
  1183                           
  1184                           ; 100 bytes @ 0x5
  1185  000105                     	ds	100
  1186  000169                     main@end:
  1187                           	opt stack 0
  1188                           
  1189                           ; 10 bytes @ 0x69
  1190  000169                     	ds	10
  1191  000173                     main@precondition:
  1192                           	opt stack 0
  1193                           
  1194                           ; 2 bytes @ 0x73
  1195  000173                     	ds	2
  1196  000175                     main@res:
  1197                           	opt stack 0
  1198                           
  1199                           ; 2 bytes @ 0x75
  1200  000175                     	ds	2
  1201                           tblptru	equ	0xFF8
  1202                           tblptrh	equ	0xFF7
  1203                           tblptrl	equ	0xFF6
  1204                           tablat	equ	0xFF5
  1205                           postinc0	equ	0xFEE
  1206                           wreg	equ	0xFE8
  1207                           postdec1	equ	0xFE5
  1208                           fsr1l	equ	0xFE1
  1209                           
  1210                           	psect	cstackBANK0
  1211  0000BA                     __pcstackBANK0:
  1212                           	opt stack 0
  1213  0000BA                     ??_SelChanConvADC:
  1214  0000BA                     ??_isdigit:
  1215  0000BA                     ?_initialize:
  1216                           	opt stack 0
  1217  0000BA                     ?_list_Battery:
  1218                           	opt stack 0
  1219  0000BA                     ?_list_Action:
  1220                           	opt stack 0
  1221  0000BA                     ?_list_Program:
  1222                           	opt stack 0
  1223  0000BA                     ?_strncmp:
  1224                           	opt stack 0
  1225  0000BA                     ?_check_Lipo:
  1226                           	opt stack 0
  1227  0000BA                     ?_ReadADC:
  1228                           	opt stack 0
  1229  0000BA                     ?_strlen:
  1230                           	opt stack 0
  1231  0000BA                     ?_USBTransferOnePacket:
  1232                           	opt stack 0
  1233  0000BA                     ?___wmul:
  1234                           	opt stack 0
  1235  0000BA                     ?___awdiv:
  1236                           	opt stack 0
  1237  0000BA                     ?___lwdiv:
  1238                           	opt stack 0
  1239  0000BA                     ?___ftpack:
  1240                           	opt stack 0
  1241  0000BA                     ?___ftneg:
  1242                           	opt stack 0
  1243  0000BA                     USBTransferOnePacket@dir:
  1244                           	opt stack 0
  1245  0000BA                     OpenADC@config2:
  1246                           	opt stack 0
  1247  0000BA                     OpenTimer1@config:
  1248                           	opt stack 0
  1249  0000BA                     ___wmul@multiplier:
  1250                           	opt stack 0
  1251  0000BA                     ___awdiv@dividend:
  1252                           	opt stack 0
  1253  0000BA                     ___lwdiv@dividend:
  1254                           	opt stack 0
  1255  0000BA                     memset@p1:
  1256                           	opt stack 0
  1257  0000BA                     strcpy@to:
  1258                           	opt stack 0
  1259  0000BA                     strlen@s:
  1260                           	opt stack 0
  1261  0000BA                     strncmp@s1:
  1262                           	opt stack 0
  1263  0000BA                     strncpy@to:
  1264                           	opt stack 0
  1265  0000BA                     ___ftpack@arg:
  1266                           	opt stack 0
  1267  0000BA                     ___ftneg@f1:
  1268                           	opt stack 0
  1269                           
  1270                           ; 3 bytes @ 0x0
  1271  0000BA                     	ds	1
  1272  0000BB                     OpenADC@portconfig:
  1273                           	opt stack 0
  1274  0000BB                     SelChanConvADC@channel:
  1275                           	opt stack 0
  1276  0000BB                     _isdigit$3249:
  1277                           	opt stack 0
  1278  0000BB                     USBTransferOnePacket@data:
  1279                           	opt stack 0
  1280                           
  1281                           ; 2 bytes @ 0x1
  1282  0000BB                     	ds	1
  1283  0000BC                     ??_OpenADC:
  1284  0000BC                     ??_ReadADC:
  1285  0000BC                     ??_strlen:
  1286  0000BC                     isdigit@c:
  1287                           	opt stack 0
  1288  0000BC                     ___wmul@multiplicand:
  1289                           	opt stack 0
  1290  0000BC                     ___awdiv@divisor:
  1291                           	opt stack 0
  1292  0000BC                     ___lwdiv@divisor:
  1293                           	opt stack 0
  1294  0000BC                     memset@c:
  1295                           	opt stack 0
  1296  0000BC                     strcpy@from:
  1297                           	opt stack 0
  1298  0000BC                     strncmp@s2:
  1299                           	opt stack 0
  1300  0000BC                     strncpy@from:
  1301                           	opt stack 0
  1302                           
  1303                           ; 2 bytes @ 0x2
  1304  0000BC                     	ds	1
  1305  0000BD                     USBTransferOnePacket@len:
  1306                           	opt stack 0
  1307  0000BD                     ___ftpack@exp:
  1308                           	opt stack 0
  1309                           
  1310                           ; 1 bytes @ 0x3
  1311  0000BD                     	ds	1
  1312  0000BE                     USBTransferOnePacket@ep:
  1313                           	opt stack 0
  1314  0000BE                     OpenADC@config:
  1315                           	opt stack 0
  1316  0000BE                     ___awdiv@counter:
  1317                           	opt stack 0
  1318  0000BE                     ___ftpack@sign:
  1319                           	opt stack 0
  1320  0000BE                     ___lwdiv@counter:
  1321                           	opt stack 0
  1322  0000BE                     ___wmul@product:
  1323                           	opt stack 0
  1324  0000BE                     memset@n:
  1325                           	opt stack 0
  1326  0000BE                     strcpy@cp:
  1327                           	opt stack 0
  1328  0000BE                     strlen@cp:
  1329                           	opt stack 0
  1330  0000BE                     strncmp@len:
  1331                           	opt stack 0
  1332  0000BE                     strncpy@size:
  1333                           	opt stack 0
  1334                           
  1335                           ; 2 bytes @ 0x4
  1336  0000BE                     	ds	1
  1337  0000BF                     ??___ftpack:
  1338  0000BF                     ___awdiv@sign:
  1339                           	opt stack 0
  1340  0000BF                     USBTransferOnePacket@handle:
  1341                           	opt stack 0
  1342  0000BF                     ___lwdiv@quotient:
  1343                           	opt stack 0
  1344                           
  1345                           ; 2 bytes @ 0x5
  1346  0000BF                     	ds	1
  1347  0000C0                     ??_strncmp:
  1348  0000C0                     putUSBUSART@data:
  1349                           	opt stack 0
  1350  0000C0                     ___awdiv@quotient:
  1351                           	opt stack 0
  1352  0000C0                     memset@p:
  1353                           	opt stack 0
  1354  0000C0                     strncpy@cp:
  1355                           	opt stack 0
  1356                           
  1357                           ; 2 bytes @ 0x6
  1358  0000C0                     	ds	1
  1359  0000C1                     ??_CDCTxService:
  1360  0000C1                     ?_sprintf:
  1361                           	opt stack 0
  1362  0000C1                     sprintf@sp:
  1363                           	opt stack 0
  1364                           
  1365                           ; 2 bytes @ 0x7
  1366  0000C1                     	ds	1
  1367  0000C2                     ?_calc_Time:
  1368                           	opt stack 0
  1369  0000C2                     ?___awtoft:
  1370                           	opt stack 0
  1371  0000C2                     ?___lwtoft:
  1372                           	opt stack 0
  1373  0000C2                     USBDeviceInit@i:
  1374                           	opt stack 0
  1375  0000C2                     putUSBUSART@length:
  1376                           	opt stack 0
  1377  0000C2                     _CDCTxService$2586:
  1378                           	opt stack 0
  1379  0000C2                     ___awtoft@c:
  1380                           	opt stack 0
  1381  0000C2                     ___lwtoft@c:
  1382                           	opt stack 0
  1383  0000C2                     calc_Time@initial:
  1384                           	opt stack 0
  1385                           
  1386                           ; 4 bytes @ 0x8
  1387  0000C2                     	ds	1
  1388  0000C3                     sprintf@f:
  1389                           	opt stack 0
  1390                           
  1391                           ; 2 bytes @ 0x9
  1392  0000C3                     	ds	1
  1393  0000C4                     CDCTxService@i:
  1394                           	opt stack 0
  1395                           
  1396                           ; 1 bytes @ 0xA
  1397  0000C4                     	ds	1
  1398  0000C5                     CDCTxService@byte_to_send:
  1399                           	opt stack 0
  1400  0000C5                     ___awtoft@sign:
  1401                           	opt stack 0
  1402                           
  1403                           ; 1 bytes @ 0xB
  1404  0000C5                     	ds	1
  1405  0000C6                     ??_calc_Time:
  1406  0000C6                     ?___ftmul:
  1407                           	opt stack 0
  1408  0000C6                     ___ftmul@f1:
  1409                           	opt stack 0
  1410                           
  1411                           ; 3 bytes @ 0xC
  1412  0000C6                     	ds	1
  1413  0000C7                     ??_sprintf:
  1414                           
  1415                           ; 0 bytes @ 0xD
  1416  0000C7                     	ds	1
  1417  0000C8                     calc_Time@interval:
  1418                           	opt stack 0
  1419                           
  1420                           ; 2 bytes @ 0xE
  1421  0000C8                     	ds	1
  1422  0000C9                     ___ftmul@f2:
  1423                           	opt stack 0
  1424                           
  1425                           ; 3 bytes @ 0xF
  1426  0000C9                     	ds	2
  1427  0000CB                     sprintf@idx:
  1428                           	opt stack 0
  1429                           
  1430                           ; 1 bytes @ 0x11
  1431  0000CB                     	ds	1
  1432  0000CC                     ??___ftmul:
  1433  0000CC                     sprintf@ap:
  1434                           	opt stack 0
  1435                           
  1436                           ; 2 bytes @ 0x12
  1437  0000CC                     	ds	2
  1438  0000CE                     sprintf@cp:
  1439                           	opt stack 0
  1440                           
  1441                           ; 2 bytes @ 0x14
  1442  0000CE                     	ds	1
  1443  0000CF                     ___ftmul@exp:
  1444                           	opt stack 0
  1445                           
  1446                           ; 1 bytes @ 0x15
  1447  0000CF                     	ds	1
  1448  0000D0                     sprintf@val:
  1449                           	opt stack 0
  1450  0000D0                     ___ftmul@f3_as_product:
  1451                           	opt stack 0
  1452                           
  1453                           ; 3 bytes @ 0x16
  1454  0000D0                     	ds	2
  1455  0000D2                     sprintf@len:
  1456                           	opt stack 0
  1457                           
  1458                           ; 2 bytes @ 0x18
  1459  0000D2                     	ds	1
  1460  0000D3                     ___ftmul@cntr:
  1461                           	opt stack 0
  1462                           
  1463                           ; 1 bytes @ 0x19
  1464  0000D3                     	ds	1
  1465  0000D4                     ___ftmul@sign:
  1466                           	opt stack 0
  1467  0000D4                     sprintf@flag:
  1468                           	opt stack 0
  1469                           
  1470                           ; 2 bytes @ 0x1A
  1471  0000D4                     	ds	1
  1472  0000D5                     ?___ftadd:
  1473                           	opt stack 0
  1474  0000D5                     ___ftadd@f1:
  1475                           	opt stack 0
  1476  0000D5                     ___ftge@ff1:
  1477                           	opt stack 0
  1478                           
  1479                           ; 3 bytes @ 0x1B
  1480  0000D5                     	ds	1
  1481  0000D6                     sprintf@width:
  1482                           	opt stack 0
  1483                           
  1484                           ; 2 bytes @ 0x1C
  1485  0000D6                     	ds	2
  1486  0000D8                     sprintf@prec:
  1487                           	opt stack 0
  1488  0000D8                     ___ftadd@f2:
  1489                           	opt stack 0
  1490  0000D8                     ___ftge@ff2:
  1491                           	opt stack 0
  1492                           
  1493                           ; 3 bytes @ 0x1E
  1494  0000D8                     	ds	1
  1495  0000D9                     sprintf@c:
  1496                           	opt stack 0
  1497                           
  1498                           ; 1 bytes @ 0x1F
  1499  0000D9                     	ds	1
  1500  0000DA                     ?_usb_send:
  1501                           	opt stack 0
  1502  0000DA                     usb_send@format:
  1503                           	opt stack 0
  1504                           
  1505                           ; 2 bytes @ 0x20
  1506  0000DA                     	ds	1
  1507  0000DB                     ??___ftadd:
  1508  0000DB                     ??___ftge:
  1509                           
  1510                           ; 0 bytes @ 0x21
  1511  0000DB                     	ds	3
  1512  0000DE                     ___ftadd@sign:
  1513                           	opt stack 0
  1514                           
  1515                           ; 1 bytes @ 0x24
  1516  0000DE                     	ds	1
  1517  0000DF                     ___ftadd@exp2:
  1518                           	opt stack 0
  1519                           
  1520                           ; 1 bytes @ 0x25
  1521  0000DF                     	ds	1
  1522  0000E0                     ___ftadd@exp1:
  1523                           	opt stack 0
  1524                           
  1525                           ; 1 bytes @ 0x26
  1526  0000E0                     	ds	1
  1527  0000E1                     ?___ftdiv:
  1528                           	opt stack 0
  1529  0000E1                     usb_send@args:
  1530                           	opt stack 0
  1531  0000E1                     ___ftdiv@f1:
  1532                           	opt stack 0
  1533                           
  1534                           ; 3 bytes @ 0x27
  1535  0000E1                     	ds	3
  1536  0000E4                     ___ftdiv@f2:
  1537                           	opt stack 0
  1538                           
  1539                           ; 3 bytes @ 0x2A
  1540  0000E4                     	ds	3
  1541  0000E7                     ??___ftdiv:
  1542                           
  1543                           ; 0 bytes @ 0x2D
  1544  0000E7                     	ds	3
  1545  0000EA                     ___ftdiv@cntr:
  1546                           	opt stack 0
  1547                           
  1548                           ; 1 bytes @ 0x30
  1549  0000EA                     	ds	1
  1550  0000EB                     ___ftdiv@f3:
  1551                           	opt stack 0
  1552                           
  1553                           ; 3 bytes @ 0x31
  1554  0000EB                     	ds	3
  1555  0000EE                     ___ftdiv@exp:
  1556                           	opt stack 0
  1557                           
  1558                           ; 1 bytes @ 0x34
  1559  0000EE                     	ds	1
  1560  0000EF                     ___ftdiv@sign:
  1561                           	opt stack 0
  1562                           
  1563                           ; 1 bytes @ 0x35
  1564  0000EF                     	ds	1
  1565  0000F0                     ?_V_Eval:
  1566                           	opt stack 0
  1567  0000F0                     V_Eval@voltage:
  1568                           	opt stack 0
  1569  0000F0                     CalcPI@PIdata:
  1570                           	opt stack 0
  1571                           
  1572                           ; 2 bytes @ 0x36
  1573  0000F0                     	ds	2
  1574  0000F2                     V_Eval@channel:
  1575                           	opt stack 0
  1576                           
  1577                           ; 1 bytes @ 0x38
  1578  0000F2                     	ds	1
  1579  0000F3                     V_Eval@temp:
  1580                           	opt stack 0
  1581                           
  1582                           ; 3 bytes @ 0x39
  1583  0000F3                     	ds	3
  1584  0000F6                     ?_check_Precondition:
  1585                           	opt stack 0
  1586  0000F6                     ?_stop_CV:
  1587                           	opt stack 0
  1588  0000F6                     ?_I_V_Set:
  1589                           	opt stack 0
  1590  0000F6                     check_Precondition@precondition:
  1591                           	opt stack 0
  1592                           
  1593                           ; 2 bytes @ 0x3C
  1594  0000F6                     	ds	2
  1595  0000F8                     I_V_Set@channel:
  1596                           	opt stack 0
  1597  0000F8                     check_Precondition@res:
  1598                           	opt stack 0
  1599  0000F8                     stop_CV@res:
  1600                           	opt stack 0
  1601                           
  1602                           ; 2 bytes @ 0x3E
  1603  0000F8                     	ds	1
  1604  0000F9                     I_V_Set@res:
  1605                           	opt stack 0
  1606                           
  1607                           ; 2 bytes @ 0x3F
  1608  0000F9                     	ds	1
  1609  0000FA                     check_Precondition@voltage:
  1610                           	opt stack 0
  1611  0000FA                     stop_CV@v_bat:
  1612                           	opt stack 0
  1613                           
  1614                           ; 3 bytes @ 0x40
  1615  0000FA                     	ds	1
  1616  0000FB                     I_V_Set@count:
  1617                           	opt stack 0
  1618                           
  1619                           ; 2 bytes @ 0x41
  1620  0000FB                     	ds	2
  1621  0000FD                     ?_start_Precondition:
  1622                           	opt stack 0
  1623  0000FD                     ?_start_CC:
  1624                           	opt stack 0
  1625  0000FD                     ?_verifie_Precondition:
  1626                           	opt stack 0
  1627  0000FD                     ?_verifie_Vbat:
  1628                           	opt stack 0
  1629  0000FD                     ?_start_CV:
  1630                           	opt stack 0
  1631  0000FD                     ?_verifie_Ibat:
  1632                           	opt stack 0
  1633  0000FD                     verifie_Precondition@end:
  1634                           	opt stack 0
  1635  0000FD                     verifie_Vbat@end:
  1636                           	opt stack 0
  1637  0000FD                     verifie_Ibat@end:
  1638                           	opt stack 0
  1639  0000FD                     stop_CV@voltage:
  1640                           	opt stack 0
  1641                           
  1642                           ; 3 bytes @ 0x43
  1643  0000FD                     	ds	2
  1644  0000FF                     
  1645                           ; 0 bytes @ 0x45
  1646  0000FF                     	ds	1
  1647  000100                     tblptru	equ	0xFF8
  1648                           tblptrh	equ	0xFF7
  1649                           tblptrl	equ	0xFF6
  1650                           tablat	equ	0xFF5
  1651                           postinc0	equ	0xFEE
  1652                           wreg	equ	0xFE8
  1653                           postdec1	equ	0xFE5
  1654                           fsr1l	equ	0xFE1
  1655                           
  1656                           ; 0 bytes @ 0x46
  1657                           
  1658                           	psect	cstackCOMRAM
  1659  00002D                     __pcstackCOMRAM:
  1660                           	opt stack 0
  1661  00002D                     ??_USBStdGetDscHandler:
  1662  00002D                     ??_USBStdGetStatusHandler:
  1663  00002D                     ?i2_USBTransferOnePacket:
  1664                           	opt stack 0
  1665  00002D                     USBConfigureEndpoint@direction:
  1666                           	opt stack 0
  1667  00002D                     USBCtrlTrfTxService@byteToSend:
  1668                           	opt stack 0
  1669  00002D                     USBCtrlTrfRxService@i:
  1670                           	opt stack 0
  1671  00002D                     i2USBTransferOnePacket@dir:
  1672                           	opt stack 0
  1673  00002D                     i2memset@p1:
  1674                           	opt stack 0
  1675                           
  1676                           ; 2 bytes @ 0x0
  1677  00002D                     	ds	1
  1678  00002E                     ??_USBConfigureEndpoint:
  1679  00002E                     USBCtrlTrfRxService@byteToRead:
  1680                           	opt stack 0
  1681  00002E                     USBCtrlTrfInHandler@lastDTS:
  1682                           	opt stack 0
  1683  00002E                     USBStdGetStatusHandler@p:
  1684                           	opt stack 0
  1685  00002E                     i2USBTransferOnePacket@data:
  1686                           	opt stack 0
  1687                           
  1688                           ; 2 bytes @ 0x1
  1689  00002E                     	ds	1
  1690  00002F                     i2memset@c:
  1691                           	opt stack 0
  1692                           
  1693                           ; 2 bytes @ 0x2
  1694  00002F                     	ds	1
  1695  000030                     i2USBTransferOnePacket@len:
  1696                           	opt stack 0
  1697                           
  1698                           ; 1 bytes @ 0x3
  1699  000030                     	ds	1
  1700  000031                     i2USBTransferOnePacket@ep:
  1701                           	opt stack 0
  1702  000031                     i2memset@n:
  1703                           	opt stack 0
  1704                           
  1705                           ; 2 bytes @ 0x4
  1706  000031                     	ds	1
  1707  000032                     USBConfigureEndpoint@EPNum:
  1708                           	opt stack 0
  1709  000032                     i2USBTransferOnePacket@handle:
  1710                           	opt stack 0
  1711                           
  1712                           ; 2 bytes @ 0x5
  1713  000032                     	ds	1
  1714  000033                     USBConfigureEndpoint@handle:
  1715                           	opt stack 0
  1716  000033                     i2memset@p:
  1717                           	opt stack 0
  1718                           
  1719                           ; 2 bytes @ 0x6
  1720  000033                     	ds	2
  1721  000035                     USBEnableEndpoint@options:
  1722                           	opt stack 0
  1723  000035                     i2USBDeviceInit@i:
  1724                           	opt stack 0
  1725                           
  1726                           ; 1 bytes @ 0x8
  1727  000035                     	ds	1
  1728  000036                     USBEnableEndpoint@p:
  1729                           	opt stack 0
  1730                           
  1731                           ; 2 bytes @ 0x9
  1732  000036                     	ds	2
  1733  000038                     USBEnableEndpoint@ep:
  1734                           	opt stack 0
  1735                           
  1736                           ; 1 bytes @ 0xB
  1737  000038                     	ds	1
  1738  000039                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  1739                           	opt stack 0
  1740                           
  1741                           ; 2 bytes @ 0xC
  1742  000039                     	ds	2
  1743  00003B                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  1744                           	opt stack 0
  1745                           
  1746                           ; 2 bytes @ 0xE
  1747  00003B                     	ds	2
  1748  00003D                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  1749                           	opt stack 0
  1750                           
  1751                           ; 2 bytes @ 0x10
  1752  00003D                     	ds	2
  1753  00003F                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  1754                           
  1755                           ; 0 bytes @ 0x12
  1756  00003F                     	ds	2
  1757  000041                     ??_USBStdFeatureReqHandler:
  1758  000041                     USBStdSetCfgHandler@i:
  1759                           	opt stack 0
  1760                           
  1761                           ; 1 bytes @ 0x14
  1762  000041                     	ds	1
  1763  000042                     USBStdFeatureReqHandler@pUEP:
  1764                           	opt stack 0
  1765                           
  1766                           ; 2 bytes @ 0x15
  1767  000042                     	ds	2
  1768  000044                     USBStdFeatureReqHandler@current_ep_data:
  1769                           	opt stack 0
  1770                           
  1771                           ; 1 bytes @ 0x17
  1772  000044                     	ds	1
  1773  000045                     USBStdFeatureReqHandler@p:
  1774                           	opt stack 0
  1775                           
  1776                           ; 2 bytes @ 0x18
  1777  000045                     	ds	2
  1778  000047                     ??_USBCtrlEPService:
  1779  000047                     
  1780                           ; 0 bytes @ 0x1A
  1781  000047                     	ds	2
  1782  000049                     USBCtrlEPService@setup_cnt:
  1783                           	opt stack 0
  1784                           
  1785                           ; 1 bytes @ 0x1C
  1786  000049                     	ds	1
  1787  00004A                     USBDeviceTasks@i:
  1788                           	opt stack 0
  1789                           
  1790                           ; 1 bytes @ 0x1D
  1791  00004A                     	ds	1
  1792  00004B                     ??_high_isr:
  1793                           
  1794                           ; 0 bytes @ 0x1E
  1795  00004B                     	ds	14
  1796                           tblptru	equ	0xFF8
  1797                           tblptrh	equ	0xFF7
  1798                           tblptrl	equ	0xFF6
  1799                           tablat	equ	0xFF5
  1800                           postinc0	equ	0xFEE
  1801                           wreg	equ	0xFE8
  1802                           postdec1	equ	0xFE5
  1803                           fsr1l	equ	0xFE1
  1804                           
  1805 ;;
  1806 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1807 ;;
  1808 ;; *************** function _main *****************
  1809 ;; Defined at:
  1810 ;;		line 111 in file "main.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;		None
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;  msg_Error     100    5[BANK1 ] unsigned char [100]
  1815 ;;  end            10  105[BANK1 ] unsigned char [10]
  1816 ;;  res             2  117[BANK1 ] short 
  1817 ;;  precondition    2  115[BANK1 ] short 
  1818 ;; Return value:  Size  Location     Type
  1819 ;;		None               void
  1820 ;; Registers used:
  1821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1827 ;;      Params:         0       0       0       0       0       0       0       0       0
  1828 ;;      Locals:         0       0     114       0       0       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1830 ;;      Totals:         0       0     114       0       0       0       0       0       0
  1831 ;;Total ram usage:      114 bytes
  1832 ;; Hardware stack levels required when called:   16
  1833 ;; This function calls:
  1834 ;;		_InitApp
  1835 ;;		_check_Lipo
  1836 ;;		_check_Precondition
  1837 ;;		_end_Charge
  1838 ;;		_initialize
  1839 ;;		_list_Action
  1840 ;;		_list_Battery
  1841 ;;		_list_Program
  1842 ;;		_select_Action
  1843 ;;		_select_Battery
  1844 ;;		_select_Program
  1845 ;;		_start_CC
  1846 ;;		_start_CV
  1847 ;;		_start_Precondition
  1848 ;;		_stop_CV
  1849 ;;		_strcpy
  1850 ;;		_strncmp
  1851 ;;		_verifie_Ibat
  1852 ;;		_verifie_Precondition
  1853 ;;		_verifie_Vbat
  1854 ;; This function is called by:
  1855 ;;		Startup code after reset
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           	psect	text0
  1860  0037C8                     __ptext0:
  1861                           	opt stack 0
  1862  0037C8                     _main:
  1863                           	opt stack 15
  1864                           
  1865                           ;main.c: 113: short res;
  1866                           ;main.c: 114: short precondition;
  1867                           ;main.c: 115: char end[10];
  1868                           ;main.c: 116: char msg_Error[100];
  1869                           ;main.c: 120: InitApp();
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;incstack = 0
  1873  0037C8  EC18  F016         	call	_InitApp	;wreg free
  1874                           
  1875                           ;main.c: 124: while(0)
  1876  0037CC  EF0B  F000         	goto	start
  1877  0037D0                     __end_of_main:
  1878                           	opt stack 0
  1879                           tblptru	equ	0xFF8
  1880                           tblptrh	equ	0xFF7
  1881                           tblptrl	equ	0xFF6
  1882                           tablat	equ	0xFF5
  1883                           postinc0	equ	0xFEE
  1884                           wreg	equ	0xFE8
  1885                           postdec1	equ	0xFE5
  1886                           fsr1l	equ	0xFE1
  1887                           
  1888 ;; *************** function _verifie_Vbat *****************
  1889 ;; Defined at:
  1890 ;;		line 324 in file "user.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  end             2   67[BANK0 ] PTR unsigned char 
  1893 ;;		 -> main@end(10), 
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;  voltage         3    0[BANK1 ] float 
  1896 ;;  res             2    3[BANK1 ] short 
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  2   67[BANK0 ] short 
  1899 ;; Registers used:
  1900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1906 ;;      Params:         0       2       0       0       0       0       0       0       0
  1907 ;;      Locals:         0       0       5       0       0       0       0       0       0
  1908 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1909 ;;      Totals:         0       2       5       0       0       0       0       0       0
  1910 ;;Total ram usage:        7 bytes
  1911 ;; Hardware stack levels used:    1
  1912 ;; Hardware stack levels required when called:   15
  1913 ;; This function calls:
  1914 ;;		_I_V_Set
  1915 ;;		_V_Eval
  1916 ;;		___ftge
  1917 ;;		___ftmul
  1918 ;;		___lwtoft
  1919 ;;		_calc_Time
  1920 ;;		_strncpy
  1921 ;; This function is called by:
  1922 ;;		_main
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           	psect	text1
  1927  000D84                     __ptext1:
  1928                           	opt stack 0
  1929  000D84                     _verifie_Vbat:
  1930                           	opt stack 15
  1931                           
  1932                           ;user.c: 326: signed float voltage = 0;
  1933                           
  1934                           ;incstack = 0
  1935  000D84  0E00               	movlw	0
  1936  000D86  0101               	movlb	1	; () banked
  1937  000D88  6F00               	movwf	verifie_Vbat@voltage& (0+255),b
  1938  000D8A  0E00               	movlw	0
  1939  000D8C  0101               	movlb	1	; () banked
  1940  000D8E  6F01               	movwf	(verifie_Vbat@voltage+1)& (0+255),b
  1941  000D90  0E00               	movlw	0
  1942  000D92  0101               	movlb	1	; () banked
  1943  000D94  6F02               	movwf	(verifie_Vbat@voltage+2)& (0+255),b
  1944                           
  1945                           ;user.c: 327: short res = KO;
  1946  000D96  0E00               	movlw	0
  1947  000D98  0101               	movlb	1	; () banked
  1948  000D9A  6F04               	movwf	(verifie_Vbat@res+1)& (0+255),b
  1949  000D9C  0E01               	movlw	1
  1950  000D9E  6F03               	movwf	verifie_Vbat@res& (0+255),b
  1951                           
  1952                           ; BSR set to: 1
  1953                           ;user.c: 329: res = V_Eval(0b10000111,&voltage);
  1954  000DA0  0E00               	movlw	low verifie_Vbat@voltage
  1955  000DA2  0100               	movlb	0	; () banked
  1956  000DA4  6FF0               	movwf	V_Eval@voltage& (0+255),b
  1957  000DA6  0E01               	movlw	high verifie_Vbat@voltage
  1958  000DA8  0100               	movlb	0	; () banked
  1959  000DAA  6FF1               	movwf	(V_Eval@voltage+1)& (0+255),b
  1960  000DAC  0E87               	movlw	135
  1961  000DAE  EC69  F011         	call	_V_Eval
  1962  000DB2  C0F0  F103         	movff	?_V_Eval,verifie_Vbat@res
  1963  000DB6  C0F1  F104         	movff	?_V_Eval+1,verifie_Vbat@res+1
  1964                           
  1965                           ;user.c: 330: if (res != OK)
  1966  000DBA  0101               	movlb	1	; () banked
  1967  000DBC  5103               	movf	verifie_Vbat@res& (0+255),w,b
  1968  000DBE  0101               	movlb	1	; () banked
  1969  000DC0  1104               	iorwf	(verifie_Vbat@res+1)& (0+255),w,b
  1970  000DC2  B4D8               	btfsc	status,2,c
  1971  000DC4  D006               	goto	l7568
  1972                           
  1973                           ; BSR set to: 1
  1974                           ;user.c: 331: {
  1975                           ;user.c: 332: return KO;
  1976  000DC6  0E00               	movlw	0
  1977  000DC8  0100               	movlb	0	; () banked
  1978  000DCA  6FFE               	movwf	(?_verifie_Vbat+1)& (0+255),b
  1979  000DCC  0E01               	movlw	1
  1980  000DCE  6FFD               	movwf	?_verifie_Vbat& (0+255),b
  1981                           
  1982                           ; BSR set to: 0
  1983  000DD0  0012               	return	
  1984  000DD2                     l7568:
  1985                           
  1986                           ;user.c: 333: }
  1987                           ;user.c: 335: if (calc_Time(charge_Time) > battery.charge.safety_Timer)
  1988  000DD2  0100               	movlb	0	; () banked
  1989  000DD4  5188               	movf	_charge_Time& (0+255),w,b
  1990  000DD6  0100               	movlb	0	; () banked
  1991  000DD8  6FC2               	movwf	calc_Time@initial& (0+255),b
  1992  000DDA  0100               	movlb	0	; () banked
  1993  000DDC  5189               	movf	(_charge_Time+1)& (0+255),w,b
  1994  000DDE  0100               	movlb	0	; () banked
  1995  000DE0  6FC3               	movwf	(calc_Time@initial+1)& (0+255),b
  1996  000DE2  0100               	movlb	0	; () banked
  1997  000DE4  518A               	movf	(_charge_Time+2)& (0+255),w,b
  1998  000DE6  0100               	movlb	0	; () banked
  1999  000DE8  6FC4               	movwf	(calc_Time@initial+2)& (0+255),b
  2000  000DEA  0100               	movlb	0	; () banked
  2001  000DEC  6BC5               	clrf	(calc_Time@initial+3)& (0+255),b
  2002  000DEE  EC49  F017         	call	_calc_Time	;wreg free
  2003  000DF2  0100               	movlb	0	; () banked
  2004  000DF4  51C2               	movf	?_calc_Time& (0+255),w,b
  2005  000DF6  0101               	movlb	1	; () banked
  2006  000DF8  5DB9               	subwf	(_battery+64)& (0+255),w,b
  2007  000DFA  0100               	movlb	0	; () banked
  2008  000DFC  51C3               	movf	(?_calc_Time+1)& (0+255),w,b
  2009  000DFE  0101               	movlb	1	; () banked
  2010  000E00  59BA               	subwfb	(_battery+65)& (0+255),w,b
  2011  000E02  B0D8               	btfsc	status,0,c
  2012  000E04  D017               	goto	l7576
  2013                           
  2014                           ; BSR set to: 1
  2015                           ;user.c: 336: {
  2016                           ;user.c: 337: strncpy(end,"TIMER",5);
  2017  000E06  C0FD  F0BA         	movff	verifie_Vbat@end,strncpy@to
  2018  000E0A  C0FE  F0BB         	movff	verifie_Vbat@end+1,strncpy@to+1
  2019  000E0E  0EF4               	movlw	low STR_11
  2020  000E10  0100               	movlb	0	; () banked
  2021  000E12  6FBC               	movwf	strncpy@from& (0+255),b
  2022  000E14  0E7F               	movlw	high STR_11
  2023  000E16  0100               	movlb	0	; () banked
  2024  000E18  6FBD               	movwf	(strncpy@from+1)& (0+255),b
  2025  000E1A  0E00               	movlw	0
  2026  000E1C  0100               	movlb	0	; () banked
  2027  000E1E  6FBF               	movwf	(strncpy@size+1)& (0+255),b
  2028  000E20  0E05               	movlw	5
  2029  000E22  6FBE               	movwf	strncpy@size& (0+255),b
  2030  000E24  EC42  F018         	call	_strncpy	;wreg free
  2031                           
  2032                           ;user.c: 338: return OK;
  2033  000E28  0E00               	movlw	0
  2034  000E2A  0100               	movlb	0	; () banked
  2035  000E2C  6FFE               	movwf	(?_verifie_Vbat+1)& (0+255),b
  2036  000E2E  0E00               	movlw	0
  2037  000E30  6FFD               	movwf	?_verifie_Vbat& (0+255),b
  2038                           
  2039                           ; BSR set to: 0
  2040  000E32  0012               	return	
  2041  000E34                     l7576:
  2042                           
  2043                           ;user.c: 339: }
  2044                           ;user.c: 340: if (voltage >= battery.charge.chg_Cell_Volt * battery.number_of_cells)
  2045  000E34  C100  F0D5         	movff	verifie_Vbat@voltage,___ftge@ff1
  2046  000E38  C101  F0D6         	movff	verifie_Vbat@voltage+1,___ftge@ff1+1
  2047  000E3C  C102  F0D7         	movff	verifie_Vbat@voltage+2,___ftge@ff1+2
  2048  000E40  C19F  F0C9         	movff	_battery+38,___ftmul@f2
  2049  000E44  C1A0  F0CA         	movff	_battery+39,___ftmul@f2+1
  2050  000E48  C1A1  F0CB         	movff	_battery+40,___ftmul@f2+2
  2051  000E4C  C188  F0C2         	movff	_battery+15,___lwtoft@c
  2052  000E50  C189  F0C3         	movff	_battery+16,___lwtoft@c+1
  2053  000E54  EC61  F01B         	call	___lwtoft	;wreg free
  2054  000E58  C0C2  F0C6         	movff	?___lwtoft,___ftmul@f1
  2055  000E5C  C0C3  F0C7         	movff	?___lwtoft+1,___ftmul@f1+1
  2056  000E60  C0C4  F0C8         	movff	?___lwtoft+2,___ftmul@f1+2
  2057  000E64  ECD2  F009         	call	___ftmul	;wreg free
  2058  000E68  C0C6  F0D8         	movff	?___ftmul,___ftge@ff2
  2059  000E6C  C0C7  F0D9         	movff	?___ftmul+1,___ftge@ff2+1
  2060  000E70  C0C8  F0DA         	movff	?___ftmul+2,___ftge@ff2+2
  2061  000E74  ECD7  F013         	call	___ftge	;wreg free
  2062  000E78  0100               	movlb	0	; () banked
  2063  000E7A  A0D8               	btfss	status,0,c
  2064  000E7C  D017               	goto	l313
  2065                           
  2066                           ; BSR set to: 0
  2067                           ;user.c: 341: {
  2068                           ;user.c: 342: strncpy(end,"END",3);
  2069  000E7E  C0FD  F0BA         	movff	verifie_Vbat@end,strncpy@to
  2070  000E82  C0FE  F0BB         	movff	verifie_Vbat@end+1,strncpy@to+1
  2071  000E86  0EFA               	movlw	low STR_10
  2072  000E88  0100               	movlb	0	; () banked
  2073  000E8A  6FBC               	movwf	strncpy@from& (0+255),b
  2074  000E8C  0E7F               	movlw	high STR_10
  2075  000E8E  0100               	movlb	0	; () banked
  2076  000E90  6FBD               	movwf	(strncpy@from+1)& (0+255),b
  2077  000E92  0E00               	movlw	0
  2078  000E94  0100               	movlb	0	; () banked
  2079  000E96  6FBF               	movwf	(strncpy@size+1)& (0+255),b
  2080  000E98  0E03               	movlw	3
  2081  000E9A  6FBE               	movwf	strncpy@size& (0+255),b
  2082  000E9C  EC42  F018         	call	_strncpy	;wreg free
  2083                           
  2084                           ;user.c: 343: return OK;
  2085  000EA0  0E00               	movlw	0
  2086  000EA2  0100               	movlb	0	; () banked
  2087  000EA4  6FFE               	movwf	(?_verifie_Vbat+1)& (0+255),b
  2088  000EA6  0E00               	movlw	0
  2089  000EA8  6FFD               	movwf	?_verifie_Vbat& (0+255),b
  2090                           
  2091                           ; BSR set to: 0
  2092                           ;user.c: 344: }
  2093                           
  2094                           ; BSR set to: 0
  2095  000EAA  0012               	return	
  2096  000EAC                     l313:
  2097                           
  2098                           ; BSR set to: 0
  2099                           ;user.c: 345: else
  2100                           ;user.c: 346: {
  2101                           ;user.c: 347: PI.Setpoint = battery.charge.chg_Current;
  2102  000EAC  C18C  F0A9         	movff	_battery+19,_PI+6
  2103  000EB0  C18D  F0AA         	movff	_battery+20,_PI+7
  2104  000EB4  C18E  F0AB         	movff	_battery+21,_PI+8
  2105                           
  2106                           ; BSR set to: 0
  2107                           ;user.c: 348: res = I_V_Set(0b11010111);
  2108  000EB8  0ED7               	movlw	215
  2109  000EBA  EC72  F013         	call	_I_V_Set
  2110  000EBE  C0F6  F103         	movff	?_I_V_Set,verifie_Vbat@res
  2111  000EC2  C0F7  F104         	movff	?_I_V_Set+1,verifie_Vbat@res+1
  2112                           
  2113                           ;user.c: 349: if (res != OK)
  2114  000EC6  0101               	movlb	1	; () banked
  2115  000EC8  5103               	movf	verifie_Vbat@res& (0+255),w,b
  2116  000ECA  0101               	movlb	1	; () banked
  2117  000ECC  1104               	iorwf	(verifie_Vbat@res+1)& (0+255),w,b
  2118  000ECE  B4D8               	btfsc	status,2,c
  2119  000ED0  D006               	goto	l7594
  2120                           
  2121                           ; BSR set to: 1
  2122                           ;user.c: 350: {
  2123                           ;user.c: 351: return KO;
  2124  000ED2  0E00               	movlw	0
  2125  000ED4  0100               	movlb	0	; () banked
  2126  000ED6  6FFE               	movwf	(?_verifie_Vbat+1)& (0+255),b
  2127  000ED8  0E01               	movlw	1
  2128  000EDA  6FFD               	movwf	?_verifie_Vbat& (0+255),b
  2129                           
  2130                           ; BSR set to: 0
  2131  000EDC  0012               	return	
  2132  000EDE                     l7594:
  2133                           
  2134                           ;user.c: 352: }
  2135                           ;user.c: 353: strncpy(end,"PROGRESS",8);
  2136  000EDE  C0FD  F0BA         	movff	verifie_Vbat@end,strncpy@to
  2137  000EE2  C0FE  F0BB         	movff	verifie_Vbat@end+1,strncpy@to+1
  2138  000EE6  0EE5               	movlw	low STR_13
  2139  000EE8  0100               	movlb	0	; () banked
  2140  000EEA  6FBC               	movwf	strncpy@from& (0+255),b
  2141  000EEC  0E7F               	movlw	high STR_13
  2142  000EEE  0100               	movlb	0	; () banked
  2143  000EF0  6FBD               	movwf	(strncpy@from+1)& (0+255),b
  2144  000EF2  0E00               	movlw	0
  2145  000EF4  0100               	movlb	0	; () banked
  2146  000EF6  6FBF               	movwf	(strncpy@size+1)& (0+255),b
  2147  000EF8  0E08               	movlw	8
  2148  000EFA  6FBE               	movwf	strncpy@size& (0+255),b
  2149  000EFC  EC42  F018         	call	_strncpy	;wreg free
  2150                           
  2151                           ;user.c: 354: return OK;
  2152  000F00  0E00               	movlw	0
  2153  000F02  0100               	movlb	0	; () banked
  2154  000F04  6FFE               	movwf	(?_verifie_Vbat+1)& (0+255),b
  2155  000F06  0E00               	movlw	0
  2156  000F08  6FFD               	movwf	?_verifie_Vbat& (0+255),b
  2157                           
  2158                           ; BSR set to: 0
  2159  000F0A  0012               	return	
  2160  000F0C                     __end_of_verifie_Vbat:
  2161                           	opt stack 0
  2162                           tblptru	equ	0xFF8
  2163                           tblptrh	equ	0xFF7
  2164                           tblptrl	equ	0xFF6
  2165                           tablat	equ	0xFF5
  2166                           postinc0	equ	0xFEE
  2167                           wreg	equ	0xFE8
  2168                           postdec1	equ	0xFE5
  2169                           fsr1l	equ	0xFE1
  2170                           status	equ	0xFD8
  2171                           
  2172 ;; *************** function _verifie_Precondition *****************
  2173 ;; Defined at:
  2174 ;;		line 272 in file "user.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  end             2   67[BANK0 ] PTR unsigned char 
  2177 ;;		 -> main@end(10), 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  voltage         3    0[BANK1 ] float 
  2180 ;;  res             2    3[BANK1 ] short 
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  2   67[BANK0 ] short 
  2183 ;; Registers used:
  2184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2190 ;;      Params:         0       2       0       0       0       0       0       0       0
  2191 ;;      Locals:         0       0       5       0       0       0       0       0       0
  2192 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2193 ;;      Totals:         0       2       5       0       0       0       0       0       0
  2194 ;;Total ram usage:        7 bytes
  2195 ;; Hardware stack levels used:    1
  2196 ;; Hardware stack levels required when called:   15
  2197 ;; This function calls:
  2198 ;;		_I_V_Set
  2199 ;;		_V_Eval
  2200 ;;		___ftge
  2201 ;;		___ftmul
  2202 ;;		___lwtoft
  2203 ;;		_calc_Time
  2204 ;;		_strncpy
  2205 ;; This function is called by:
  2206 ;;		_main
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           	psect	text2
  2211  000F0C                     __ptext2:
  2212                           	opt stack 0
  2213  000F0C                     _verifie_Precondition:
  2214                           	opt stack 15
  2215                           
  2216                           ;user.c: 274: signed float voltage = 0;
  2217                           
  2218                           ; BSR set to: 0
  2219                           ;incstack = 0
  2220  000F0C  0E00               	movlw	0
  2221  000F0E  0101               	movlb	1	; () banked
  2222  000F10  6F00               	movwf	verifie_Precondition@voltage& (0+255),b
  2223  000F12  0E00               	movlw	0
  2224  000F14  0101               	movlb	1	; () banked
  2225  000F16  6F01               	movwf	(verifie_Precondition@voltage+1)& (0+255),b
  2226  000F18  0E00               	movlw	0
  2227  000F1A  0101               	movlb	1	; () banked
  2228  000F1C  6F02               	movwf	(verifie_Precondition@voltage+2)& (0+255),b
  2229                           
  2230                           ;user.c: 275: short res = KO;
  2231  000F1E  0E00               	movlw	0
  2232  000F20  0101               	movlb	1	; () banked
  2233  000F22  6F04               	movwf	(verifie_Precondition@res+1)& (0+255),b
  2234  000F24  0E01               	movlw	1
  2235  000F26  6F03               	movwf	verifie_Precondition@res& (0+255),b
  2236                           
  2237                           ; BSR set to: 1
  2238                           ;user.c: 277: res = V_Eval(0b10000111,&voltage);
  2239  000F28  0E00               	movlw	low verifie_Precondition@voltage
  2240  000F2A  0100               	movlb	0	; () banked
  2241  000F2C  6FF0               	movwf	V_Eval@voltage& (0+255),b
  2242  000F2E  0E01               	movlw	high verifie_Precondition@voltage
  2243  000F30  0100               	movlb	0	; () banked
  2244  000F32  6FF1               	movwf	(V_Eval@voltage+1)& (0+255),b
  2245  000F34  0E87               	movlw	135
  2246  000F36  EC69  F011         	call	_V_Eval
  2247  000F3A  C0F0  F103         	movff	?_V_Eval,verifie_Precondition@res
  2248  000F3E  C0F1  F104         	movff	?_V_Eval+1,verifie_Precondition@res+1
  2249                           
  2250                           ;user.c: 278: if (res != OK)
  2251  000F42  0101               	movlb	1	; () banked
  2252  000F44  5103               	movf	verifie_Precondition@res& (0+255),w,b
  2253  000F46  0101               	movlb	1	; () banked
  2254  000F48  1104               	iorwf	(verifie_Precondition@res+1)& (0+255),w,b
  2255  000F4A  B4D8               	btfsc	status,2,c
  2256  000F4C  D006               	goto	l7526
  2257                           
  2258                           ; BSR set to: 1
  2259                           ;user.c: 279: {
  2260                           ;user.c: 280: return KO;
  2261  000F4E  0E00               	movlw	0
  2262  000F50  0100               	movlb	0	; () banked
  2263  000F52  6FFE               	movwf	(?_verifie_Precondition+1)& (0+255),b
  2264  000F54  0E01               	movlw	1
  2265  000F56  6FFD               	movwf	?_verifie_Precondition& (0+255),b
  2266                           
  2267                           ; BSR set to: 0
  2268  000F58  0012               	return	
  2269  000F5A                     l7526:
  2270                           
  2271                           ;user.c: 281: }
  2272                           ;user.c: 283: if (calc_Time(precondition_Time) >= battery.charge.restore_Charge_Time)
  2273  000F5A  0100               	movlb	0	; () banked
  2274  000F5C  5197               	movf	_precondition_Time& (0+255),w,b
  2275  000F5E  0100               	movlb	0	; () banked
  2276  000F60  6FC2               	movwf	calc_Time@initial& (0+255),b
  2277  000F62  0100               	movlb	0	; () banked
  2278  000F64  5198               	movf	(_precondition_Time+1)& (0+255),w,b
  2279  000F66  0100               	movlb	0	; () banked
  2280  000F68  6FC3               	movwf	(calc_Time@initial+1)& (0+255),b
  2281  000F6A  0100               	movlb	0	; () banked
  2282  000F6C  5199               	movf	(_precondition_Time+2)& (0+255),w,b
  2283  000F6E  0100               	movlb	0	; () banked
  2284  000F70  6FC4               	movwf	(calc_Time@initial+2)& (0+255),b
  2285  000F72  0100               	movlb	0	; () banked
  2286  000F74  6BC5               	clrf	(calc_Time@initial+3)& (0+255),b
  2287  000F76  EC49  F017         	call	_calc_Time	;wreg free
  2288  000F7A  0101               	movlb	1	; () banked
  2289  000F7C  51A5               	movf	(_battery+44)& (0+255),w,b
  2290  000F7E  0100               	movlb	0	; () banked
  2291  000F80  5DC2               	subwf	?_calc_Time& (0+255),w,b
  2292  000F82  0101               	movlb	1	; () banked
  2293  000F84  51A6               	movf	(_battery+45)& (0+255),w,b
  2294  000F86  0100               	movlb	0	; () banked
  2295  000F88  59C3               	subwfb	(?_calc_Time+1)& (0+255),w,b
  2296  000F8A  A0D8               	btfss	status,0,c
  2297  000F8C  D017               	goto	l7534
  2298                           
  2299                           ; BSR set to: 0
  2300                           ;user.c: 284: {
  2301                           ;user.c: 285: strncpy(end,"TIMER",5);
  2302  000F8E  C0FD  F0BA         	movff	verifie_Precondition@end,strncpy@to
  2303  000F92  C0FE  F0BB         	movff	verifie_Precondition@end+1,strncpy@to+1
  2304  000F96  0EF4               	movlw	low STR_11
  2305  000F98  0100               	movlb	0	; () banked
  2306  000F9A  6FBC               	movwf	strncpy@from& (0+255),b
  2307  000F9C  0E7F               	movlw	high STR_11
  2308  000F9E  0100               	movlb	0	; () banked
  2309  000FA0  6FBD               	movwf	(strncpy@from+1)& (0+255),b
  2310  000FA2  0E00               	movlw	0
  2311  000FA4  0100               	movlb	0	; () banked
  2312  000FA6  6FBF               	movwf	(strncpy@size+1)& (0+255),b
  2313  000FA8  0E05               	movlw	5
  2314  000FAA  6FBE               	movwf	strncpy@size& (0+255),b
  2315  000FAC  EC42  F018         	call	_strncpy	;wreg free
  2316                           
  2317                           ;user.c: 286: return OK;
  2318  000FB0  0E00               	movlw	0
  2319  000FB2  0100               	movlb	0	; () banked
  2320  000FB4  6FFE               	movwf	(?_verifie_Precondition+1)& (0+255),b
  2321  000FB6  0E00               	movlw	0
  2322  000FB8  6FFD               	movwf	?_verifie_Precondition& (0+255),b
  2323                           
  2324                           ; BSR set to: 0
  2325  000FBA  0012               	return	
  2326  000FBC                     l7534:
  2327                           
  2328                           ; BSR set to: 0
  2329                           ;user.c: 287: }
  2330                           ;user.c: 288: if (voltage >= battery.charge.restore_Lowest_Voltage * battery.number_of_c
      +                          ells)
  2331  000FBC  C100  F0D5         	movff	verifie_Precondition@voltage,___ftge@ff1
  2332  000FC0  C101  F0D6         	movff	verifie_Precondition@voltage+1,___ftge@ff1+1
  2333  000FC4  C102  F0D7         	movff	verifie_Precondition@voltage+2,___ftge@ff1+2
  2334  000FC8  C1A2  F0C9         	movff	_battery+41,___ftmul@f2
  2335  000FCC  C1A3  F0CA         	movff	_battery+42,___ftmul@f2+1
  2336  000FD0  C1A4  F0CB         	movff	_battery+43,___ftmul@f2+2
  2337  000FD4  C188  F0C2         	movff	_battery+15,___lwtoft@c
  2338  000FD8  C189  F0C3         	movff	_battery+16,___lwtoft@c+1
  2339  000FDC  EC61  F01B         	call	___lwtoft	;wreg free
  2340  000FE0  C0C2  F0C6         	movff	?___lwtoft,___ftmul@f1
  2341  000FE4  C0C3  F0C7         	movff	?___lwtoft+1,___ftmul@f1+1
  2342  000FE8  C0C4  F0C8         	movff	?___lwtoft+2,___ftmul@f1+2
  2343  000FEC  ECD2  F009         	call	___ftmul	;wreg free
  2344  000FF0  C0C6  F0D8         	movff	?___ftmul,___ftge@ff2
  2345  000FF4  C0C7  F0D9         	movff	?___ftmul+1,___ftge@ff2+1
  2346  000FF8  C0C8  F0DA         	movff	?___ftmul+2,___ftge@ff2+2
  2347  000FFC  ECD7  F013         	call	___ftge	;wreg free
  2348  001000  0100               	movlb	0	; () banked
  2349  001002  A0D8               	btfss	status,0,c
  2350  001004  D017               	goto	l301
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;user.c: 289: {
  2354                           ;user.c: 290: strncpy(end,"END",3);
  2355  001006  C0FD  F0BA         	movff	verifie_Precondition@end,strncpy@to
  2356  00100A  C0FE  F0BB         	movff	verifie_Precondition@end+1,strncpy@to+1
  2357  00100E  0EFA               	movlw	low STR_10
  2358  001010  0100               	movlb	0	; () banked
  2359  001012  6FBC               	movwf	strncpy@from& (0+255),b
  2360  001014  0E7F               	movlw	high STR_10
  2361  001016  0100               	movlb	0	; () banked
  2362  001018  6FBD               	movwf	(strncpy@from+1)& (0+255),b
  2363  00101A  0E00               	movlw	0
  2364  00101C  0100               	movlb	0	; () banked
  2365  00101E  6FBF               	movwf	(strncpy@size+1)& (0+255),b
  2366  001020  0E03               	movlw	3
  2367  001022  6FBE               	movwf	strncpy@size& (0+255),b
  2368  001024  EC42  F018         	call	_strncpy	;wreg free
  2369                           
  2370                           ;user.c: 291: return OK;
  2371  001028  0E00               	movlw	0
  2372  00102A  0100               	movlb	0	; () banked
  2373  00102C  6FFE               	movwf	(?_verifie_Precondition+1)& (0+255),b
  2374  00102E  0E00               	movlw	0
  2375  001030  6FFD               	movwf	?_verifie_Precondition& (0+255),b
  2376                           
  2377                           ; BSR set to: 0
  2378                           ;user.c: 292: }
  2379                           
  2380                           ; BSR set to: 0
  2381  001032  0012               	return	
  2382  001034                     l301:
  2383                           
  2384                           ; BSR set to: 0
  2385                           ;user.c: 293: else
  2386                           ;user.c: 294: {
  2387                           ;user.c: 295: PI.Setpoint = battery.charge.restore_Charge_Current;
  2388  001034  C1A7  F0A9         	movff	_battery+46,_PI+6
  2389  001038  C1A8  F0AA         	movff	_battery+47,_PI+7
  2390  00103C  C1A9  F0AB         	movff	_battery+48,_PI+8
  2391                           
  2392                           ; BSR set to: 0
  2393                           ;user.c: 296: res = I_V_Set(0b11010111);
  2394  001040  0ED7               	movlw	215
  2395  001042  EC72  F013         	call	_I_V_Set
  2396  001046  C0F6  F103         	movff	?_I_V_Set,verifie_Precondition@res
  2397  00104A  C0F7  F104         	movff	?_I_V_Set+1,verifie_Precondition@res+1
  2398                           
  2399                           ;user.c: 297: if (res != OK)
  2400  00104E  0101               	movlb	1	; () banked
  2401  001050  5103               	movf	verifie_Precondition@res& (0+255),w,b
  2402  001052  0101               	movlb	1	; () banked
  2403  001054  1104               	iorwf	(verifie_Precondition@res+1)& (0+255),w,b
  2404  001056  B4D8               	btfsc	status,2,c
  2405  001058  D006               	goto	l7552
  2406                           
  2407                           ; BSR set to: 1
  2408                           ;user.c: 298: {
  2409                           ;user.c: 299: return KO;
  2410  00105A  0E00               	movlw	0
  2411  00105C  0100               	movlb	0	; () banked
  2412  00105E  6FFE               	movwf	(?_verifie_Precondition+1)& (0+255),b
  2413  001060  0E01               	movlw	1
  2414  001062  6FFD               	movwf	?_verifie_Precondition& (0+255),b
  2415                           
  2416                           ; BSR set to: 0
  2417  001064  0012               	return	
  2418  001066                     l7552:
  2419                           
  2420                           ;user.c: 300: }
  2421                           ;user.c: 301: strncpy(end,"PROGRESS",8);
  2422  001066  C0FD  F0BA         	movff	verifie_Precondition@end,strncpy@to
  2423  00106A  C0FE  F0BB         	movff	verifie_Precondition@end+1,strncpy@to+1
  2424  00106E  0EE5               	movlw	low STR_13
  2425  001070  0100               	movlb	0	; () banked
  2426  001072  6FBC               	movwf	strncpy@from& (0+255),b
  2427  001074  0E7F               	movlw	high STR_13
  2428  001076  0100               	movlb	0	; () banked
  2429  001078  6FBD               	movwf	(strncpy@from+1)& (0+255),b
  2430  00107A  0E00               	movlw	0
  2431  00107C  0100               	movlb	0	; () banked
  2432  00107E  6FBF               	movwf	(strncpy@size+1)& (0+255),b
  2433  001080  0E08               	movlw	8
  2434  001082  6FBE               	movwf	strncpy@size& (0+255),b
  2435  001084  EC42  F018         	call	_strncpy	;wreg free
  2436                           
  2437                           ;user.c: 302: return OK;
  2438  001088  0E00               	movlw	0
  2439  00108A  0100               	movlb	0	; () banked
  2440  00108C  6FFE               	movwf	(?_verifie_Precondition+1)& (0+255),b
  2441  00108E  0E00               	movlw	0
  2442  001090  6FFD               	movwf	?_verifie_Precondition& (0+255),b
  2443                           
  2444                           ; BSR set to: 0
  2445  001092  0012               	return	
  2446  001094                     __end_of_verifie_Precondition:
  2447                           	opt stack 0
  2448                           tblptru	equ	0xFF8
  2449                           tblptrh	equ	0xFF7
  2450                           tblptrl	equ	0xFF6
  2451                           tablat	equ	0xFF5
  2452                           postinc0	equ	0xFEE
  2453                           wreg	equ	0xFE8
  2454                           postdec1	equ	0xFE5
  2455                           fsr1l	equ	0xFE1
  2456                           status	equ	0xFD8
  2457                           
  2458 ;; *************** function _verifie_Ibat *****************
  2459 ;; Defined at:
  2460 ;;		line 375 in file "user.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;  end             2   67[BANK0 ] PTR unsigned char 
  2463 ;;		 -> main@end(10), 
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;  current         3    0[BANK1 ] float 
  2466 ;;  res             2    3[BANK1 ] short 
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  2   67[BANK0 ] short 
  2469 ;; Registers used:
  2470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2476 ;;      Params:         0       2       0       0       0       0       0       0       0
  2477 ;;      Locals:         0       0       5       0       0       0       0       0       0
  2478 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2479 ;;      Totals:         0       2       5       0       0       0       0       0       0
  2480 ;;Total ram usage:        7 bytes
  2481 ;; Hardware stack levels used:    1
  2482 ;; Hardware stack levels required when called:   15
  2483 ;; This function calls:
  2484 ;;		_I_V_Set
  2485 ;;		_V_Eval
  2486 ;;		___ftge
  2487 ;;		___ftmul
  2488 ;;		___lwtoft
  2489 ;;		_calc_Time
  2490 ;;		_strncpy
  2491 ;; This function is called by:
  2492 ;;		_main
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           	psect	text3
  2497  001094                     __ptext3:
  2498                           	opt stack 0
  2499  001094                     _verifie_Ibat:
  2500                           	opt stack 15
  2501                           
  2502                           ;user.c: 377: signed float current = 0;
  2503                           
  2504                           ; BSR set to: 0
  2505                           ;incstack = 0
  2506  001094  0E00               	movlw	0
  2507  001096  0101               	movlb	1	; () banked
  2508  001098  6F00               	movwf	verifie_Ibat@current& (0+255),b
  2509  00109A  0E00               	movlw	0
  2510  00109C  0101               	movlb	1	; () banked
  2511  00109E  6F01               	movwf	(verifie_Ibat@current+1)& (0+255),b
  2512  0010A0  0E00               	movlw	0
  2513  0010A2  0101               	movlb	1	; () banked
  2514  0010A4  6F02               	movwf	(verifie_Ibat@current+2)& (0+255),b
  2515                           
  2516                           ;user.c: 378: short res = KO;
  2517  0010A6  0E00               	movlw	0
  2518  0010A8  0101               	movlb	1	; () banked
  2519  0010AA  6F04               	movwf	(verifie_Ibat@res+1)& (0+255),b
  2520  0010AC  0E01               	movlw	1
  2521  0010AE  6F03               	movwf	verifie_Ibat@res& (0+255),b
  2522                           
  2523                           ; BSR set to: 1
  2524                           ;user.c: 380: res = V_Eval(0b11010111,&current);
  2525  0010B0  0E00               	movlw	low verifie_Ibat@current
  2526  0010B2  0100               	movlb	0	; () banked
  2527  0010B4  6FF0               	movwf	V_Eval@voltage& (0+255),b
  2528  0010B6  0E01               	movlw	high verifie_Ibat@current
  2529  0010B8  0100               	movlb	0	; () banked
  2530  0010BA  6FF1               	movwf	(V_Eval@voltage+1)& (0+255),b
  2531  0010BC  0ED7               	movlw	215
  2532  0010BE  EC69  F011         	call	_V_Eval
  2533  0010C2  C0F0  F103         	movff	?_V_Eval,verifie_Ibat@res
  2534  0010C6  C0F1  F104         	movff	?_V_Eval+1,verifie_Ibat@res+1
  2535                           
  2536                           ;user.c: 381: if (res != OK)
  2537  0010CA  0101               	movlb	1	; () banked
  2538  0010CC  5103               	movf	verifie_Ibat@res& (0+255),w,b
  2539  0010CE  0101               	movlb	1	; () banked
  2540  0010D0  1104               	iorwf	(verifie_Ibat@res+1)& (0+255),w,b
  2541  0010D2  B4D8               	btfsc	status,2,c
  2542  0010D4  D006               	goto	l7626
  2543                           
  2544                           ; BSR set to: 1
  2545                           ;user.c: 382: {
  2546                           ;user.c: 383: return KO;
  2547  0010D6  0E00               	movlw	0
  2548  0010D8  0100               	movlb	0	; () banked
  2549  0010DA  6FFE               	movwf	(?_verifie_Ibat+1)& (0+255),b
  2550  0010DC  0E01               	movlw	1
  2551  0010DE  6FFD               	movwf	?_verifie_Ibat& (0+255),b
  2552                           
  2553                           ; BSR set to: 0
  2554  0010E0  0012               	return	
  2555  0010E2                     l7626:
  2556                           
  2557                           ;user.c: 384: }
  2558                           ;user.c: 386: if (calc_Time(charge_Time) > battery.charge.safety_Timer)
  2559  0010E2  0100               	movlb	0	; () banked
  2560  0010E4  5188               	movf	_charge_Time& (0+255),w,b
  2561  0010E6  0100               	movlb	0	; () banked
  2562  0010E8  6FC2               	movwf	calc_Time@initial& (0+255),b
  2563  0010EA  0100               	movlb	0	; () banked
  2564  0010EC  5189               	movf	(_charge_Time+1)& (0+255),w,b
  2565  0010EE  0100               	movlb	0	; () banked
  2566  0010F0  6FC3               	movwf	(calc_Time@initial+1)& (0+255),b
  2567  0010F2  0100               	movlb	0	; () banked
  2568  0010F4  518A               	movf	(_charge_Time+2)& (0+255),w,b
  2569  0010F6  0100               	movlb	0	; () banked
  2570  0010F8  6FC4               	movwf	(calc_Time@initial+2)& (0+255),b
  2571  0010FA  0100               	movlb	0	; () banked
  2572  0010FC  6BC5               	clrf	(calc_Time@initial+3)& (0+255),b
  2573  0010FE  EC49  F017         	call	_calc_Time	;wreg free
  2574  001102  0100               	movlb	0	; () banked
  2575  001104  51C2               	movf	?_calc_Time& (0+255),w,b
  2576  001106  0101               	movlb	1	; () banked
  2577  001108  5DB9               	subwf	(_battery+64)& (0+255),w,b
  2578  00110A  0100               	movlb	0	; () banked
  2579  00110C  51C3               	movf	(?_calc_Time+1)& (0+255),w,b
  2580  00110E  0101               	movlb	1	; () banked
  2581  001110  59BA               	subwfb	(_battery+65)& (0+255),w,b
  2582  001112  B0D8               	btfsc	status,0,c
  2583  001114  D017               	goto	l7634
  2584                           
  2585                           ; BSR set to: 1
  2586                           ;user.c: 387: {
  2587                           ;user.c: 388: strncpy(end,"TIMER",5);
  2588  001116  C0FD  F0BA         	movff	verifie_Ibat@end,strncpy@to
  2589  00111A  C0FE  F0BB         	movff	verifie_Ibat@end+1,strncpy@to+1
  2590  00111E  0EF4               	movlw	low STR_11
  2591  001120  0100               	movlb	0	; () banked
  2592  001122  6FBC               	movwf	strncpy@from& (0+255),b
  2593  001124  0E7F               	movlw	high STR_11
  2594  001126  0100               	movlb	0	; () banked
  2595  001128  6FBD               	movwf	(strncpy@from+1)& (0+255),b
  2596  00112A  0E00               	movlw	0
  2597  00112C  0100               	movlb	0	; () banked
  2598  00112E  6FBF               	movwf	(strncpy@size+1)& (0+255),b
  2599  001130  0E05               	movlw	5
  2600  001132  6FBE               	movwf	strncpy@size& (0+255),b
  2601  001134  EC42  F018         	call	_strncpy	;wreg free
  2602                           
  2603                           ;user.c: 389: return OK;
  2604  001138  0E00               	movlw	0
  2605  00113A  0100               	movlb	0	; () banked
  2606  00113C  6FFE               	movwf	(?_verifie_Ibat+1)& (0+255),b
  2607  00113E  0E00               	movlw	0
  2608  001140  6FFD               	movwf	?_verifie_Ibat& (0+255),b
  2609                           
  2610                           ; BSR set to: 0
  2611  001142  0012               	return	
  2612  001144                     l7634:
  2613                           
  2614                           ;user.c: 390: }
  2615                           ;user.c: 391: if (current >= battery.charge.chg_End_Current)
  2616  001144  C100  F0D5         	movff	verifie_Ibat@current,___ftge@ff1
  2617  001148  C101  F0D6         	movff	verifie_Ibat@current+1,___ftge@ff1+1
  2618  00114C  C102  F0D7         	movff	verifie_Ibat@current+2,___ftge@ff1+2
  2619  001150  C19C  F0D8         	movff	_battery+35,___ftge@ff2
  2620  001154  C19D  F0D9         	movff	_battery+36,___ftge@ff2+1
  2621  001158  C19E  F0DA         	movff	_battery+37,___ftge@ff2+2
  2622  00115C  ECD7  F013         	call	___ftge	;wreg free
  2623  001160  0100               	movlb	0	; () banked
  2624  001162  A0D8               	btfss	status,0,c
  2625  001164  D017               	goto	l7644
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;user.c: 392: {
  2629                           ;user.c: 393: strncpy(end,"END",3);
  2630  001166  C0FD  F0BA         	movff	verifie_Ibat@end,strncpy@to
  2631  00116A  C0FE  F0BB         	movff	verifie_Ibat@end+1,strncpy@to+1
  2632  00116E  0EFA               	movlw	low STR_10
  2633  001170  0100               	movlb	0	; () banked
  2634  001172  6FBC               	movwf	strncpy@from& (0+255),b
  2635  001174  0E7F               	movlw	high STR_10
  2636  001176  0100               	movlb	0	; () banked
  2637  001178  6FBD               	movwf	(strncpy@from+1)& (0+255),b
  2638  00117A  0E00               	movlw	0
  2639  00117C  0100               	movlb	0	; () banked
  2640  00117E  6FBF               	movwf	(strncpy@size+1)& (0+255),b
  2641  001180  0E03               	movlw	3
  2642  001182  6FBE               	movwf	strncpy@size& (0+255),b
  2643  001184  EC42  F018         	call	_strncpy	;wreg free
  2644                           
  2645                           ;user.c: 394: return OK;
  2646  001188  0E00               	movlw	0
  2647  00118A  0100               	movlb	0	; () banked
  2648  00118C  6FFE               	movwf	(?_verifie_Ibat+1)& (0+255),b
  2649  00118E  0E00               	movlw	0
  2650  001190  6FFD               	movwf	?_verifie_Ibat& (0+255),b
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;user.c: 395: }
  2654                           
  2655                           ; BSR set to: 0
  2656  001192  0012               	return	
  2657  001194                     l7644:
  2658                           
  2659                           ; BSR set to: 0
  2660                           ;user.c: 396: else
  2661                           ;user.c: 397: {
  2662                           ;user.c: 398: PI.Setpoint = battery.charge.chg_Cell_Volt * battery.number_of_cells;
  2663  001194  C188  F0C2         	movff	_battery+15,___lwtoft@c
  2664  001198  C189  F0C3         	movff	_battery+16,___lwtoft@c+1
  2665  00119C  EC61  F01B         	call	___lwtoft	;wreg free
  2666  0011A0  C0C2  F0C6         	movff	?___lwtoft,___ftmul@f1
  2667  0011A4  C0C3  F0C7         	movff	?___lwtoft+1,___ftmul@f1+1
  2668  0011A8  C0C4  F0C8         	movff	?___lwtoft+2,___ftmul@f1+2
  2669  0011AC  C19F  F0C9         	movff	_battery+38,___ftmul@f2
  2670  0011B0  C1A0  F0CA         	movff	_battery+39,___ftmul@f2+1
  2671  0011B4  C1A1  F0CB         	movff	_battery+40,___ftmul@f2+2
  2672  0011B8  ECD2  F009         	call	___ftmul	;wreg free
  2673  0011BC  C0C6  F0A9         	movff	?___ftmul,_PI+6
  2674  0011C0  C0C7  F0AA         	movff	?___ftmul+1,_PI+7
  2675  0011C4  C0C8  F0AB         	movff	?___ftmul+2,_PI+8
  2676                           
  2677                           ;user.c: 399: res = I_V_Set(0b10000111);
  2678  0011C8  0E87               	movlw	135
  2679  0011CA  EC72  F013         	call	_I_V_Set
  2680  0011CE  C0F6  F103         	movff	?_I_V_Set,verifie_Ibat@res
  2681  0011D2  C0F7  F104         	movff	?_I_V_Set+1,verifie_Ibat@res+1
  2682                           
  2683                           ;user.c: 400: if (res != OK)
  2684  0011D6  0101               	movlb	1	; () banked
  2685  0011D8  5103               	movf	verifie_Ibat@res& (0+255),w,b
  2686  0011DA  0101               	movlb	1	; () banked
  2687  0011DC  1104               	iorwf	(verifie_Ibat@res+1)& (0+255),w,b
  2688  0011DE  B4D8               	btfsc	status,2,c
  2689  0011E0  D006               	goto	l7654
  2690                           
  2691                           ; BSR set to: 1
  2692                           ;user.c: 401: {
  2693                           ;user.c: 402: return KO;
  2694  0011E2  0E00               	movlw	0
  2695  0011E4  0100               	movlb	0	; () banked
  2696  0011E6  6FFE               	movwf	(?_verifie_Ibat+1)& (0+255),b
  2697  0011E8  0E01               	movlw	1
  2698  0011EA  6FFD               	movwf	?_verifie_Ibat& (0+255),b
  2699                           
  2700                           ; BSR set to: 0
  2701  0011EC  0012               	return	
  2702  0011EE                     l7654:
  2703                           
  2704                           ;user.c: 403: }
  2705                           ;user.c: 404: strncpy(end,"PROGRESS",8);
  2706  0011EE  C0FD  F0BA         	movff	verifie_Ibat@end,strncpy@to
  2707  0011F2  C0FE  F0BB         	movff	verifie_Ibat@end+1,strncpy@to+1
  2708  0011F6  0EE5               	movlw	low STR_13
  2709  0011F8  0100               	movlb	0	; () banked
  2710  0011FA  6FBC               	movwf	strncpy@from& (0+255),b
  2711  0011FC  0E7F               	movlw	high STR_13
  2712  0011FE  0100               	movlb	0	; () banked
  2713  001200  6FBD               	movwf	(strncpy@from+1)& (0+255),b
  2714  001202  0E00               	movlw	0
  2715  001204  0100               	movlb	0	; () banked
  2716  001206  6FBF               	movwf	(strncpy@size+1)& (0+255),b
  2717  001208  0E08               	movlw	8
  2718  00120A  6FBE               	movwf	strncpy@size& (0+255),b
  2719  00120C  EC42  F018         	call	_strncpy	;wreg free
  2720                           
  2721                           ;user.c: 405: return OK;
  2722  001210  0E00               	movlw	0
  2723  001212  0100               	movlb	0	; () banked
  2724  001214  6FFE               	movwf	(?_verifie_Ibat+1)& (0+255),b
  2725  001216  0E00               	movlw	0
  2726  001218  6FFD               	movwf	?_verifie_Ibat& (0+255),b
  2727                           
  2728                           ; BSR set to: 0
  2729  00121A  0012               	return	
  2730  00121C                     __end_of_verifie_Ibat:
  2731                           	opt stack 0
  2732                           tblptru	equ	0xFF8
  2733                           tblptrh	equ	0xFF7
  2734                           tblptrl	equ	0xFF6
  2735                           tablat	equ	0xFF5
  2736                           postinc0	equ	0xFEE
  2737                           wreg	equ	0xFE8
  2738                           postdec1	equ	0xFE5
  2739                           fsr1l	equ	0xFE1
  2740                           status	equ	0xFD8
  2741                           
  2742 ;; *************** function _calc_Time *****************
  2743 ;; Defined at:
  2744 ;;		line 33 in file "user.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;  initial         4    8[BANK0 ] long 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;  interval        2   14[BANK0 ] unsigned int 
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  2    8[BANK0 ] unsigned int 
  2751 ;; Registers used:
  2752 ;;		wreg, status,2, status,0, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2758 ;;      Params:         0       4       0       0       0       0       0       0       0
  2759 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2760 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2761 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2762 ;;Total ram usage:        8 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; Hardware stack levels required when called:   12
  2765 ;; This function calls:
  2766 ;;		___awdiv
  2767 ;; This function is called by:
  2768 ;;		_verifie_Precondition
  2769 ;;		_verifie_Vbat
  2770 ;;		_verifie_Ibat
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           	psect	text4
  2775  002E92                     __ptext4:
  2776                           	opt stack 0
  2777  002E92                     _calc_Time:
  2778                           	opt stack 17
  2779                           
  2780                           ;user.c: 35: unsigned int interval = 0;
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;incstack = 0
  2784  002E92  0E00               	movlw	0
  2785  002E94  0100               	movlb	0	; () banked
  2786  002E96  6FC9               	movwf	(calc_Time@interval+1)& (0+255),b
  2787  002E98  0E00               	movlw	0
  2788  002E9A  6FC8               	movwf	calc_Time@interval& (0+255),b
  2789                           
  2790                           ; BSR set to: 0
  2791                           ;user.c: 37: if (seconds >= initial)
  2792  002E9C  0100               	movlb	0	; () banked
  2793  002E9E  51C2               	movf	calc_Time@initial& (0+255),w,b
  2794  002EA0  0100               	movlb	0	; () banked
  2795  002EA2  5D84               	subwf	_seconds& (0+255),w,b
  2796  002EA4  0100               	movlb	0	; () banked
  2797  002EA6  51C3               	movf	(calc_Time@initial+1)& (0+255),w,b
  2798  002EA8  0100               	movlb	0	; () banked
  2799  002EAA  5985               	subwfb	(_seconds+1)& (0+255),w,b
  2800  002EAC  0100               	movlb	0	; () banked
  2801  002EAE  51C4               	movf	(calc_Time@initial+2)& (0+255),w,b
  2802  002EB0  0100               	movlb	0	; () banked
  2803  002EB2  5986               	subwfb	(_seconds+2)& (0+255),w,b
  2804  002EB4  0100               	movlb	0	; () banked
  2805  002EB6  5187               	movf	(_seconds+3)& (0+255),w,b
  2806  002EB8  0A80               	xorlw	128
  2807  002EBA  0100               	movlb	0	; () banked
  2808  002EBC  6FC6               	movwf	??_calc_Time& (0+255),b
  2809  002EBE  0100               	movlb	0	; () banked
  2810  002EC0  51C5               	movf	(calc_Time@initial+3)& (0+255),w,b
  2811  002EC2  0A80               	xorlw	128
  2812  002EC4  0100               	movlb	0	; () banked
  2813  002EC6  59C6               	subwfb	??_calc_Time& (0+255),w,b
  2814  002EC8  A0D8               	btfss	status,0,c
  2815  002ECA  D024               	goto	l7234
  2816                           
  2817                           ; BSR set to: 0
  2818                           ;user.c: 38: {
  2819                           ;user.c: 39: interval = seconds - initial;
  2820  002ECC  C0C2  F0C6         	movff	calc_Time@initial,??_calc_Time
  2821  002ED0  C0C3  F0C7         	movff	calc_Time@initial+1,??_calc_Time+1
  2822  002ED4  0100               	movlb	0	; () banked
  2823  002ED6  1FC6               	comf	??_calc_Time& (0+255),f,b
  2824  002ED8  1FC7               	comf	(??_calc_Time+1)& (0+255),f,b
  2825  002EDA  4BC6               	infsnz	??_calc_Time& (0+255),f,b
  2826  002EDC  2BC7               	incf	(??_calc_Time+1)& (0+255),f,b
  2827  002EDE  0100               	movlb	0	; () banked
  2828  002EE0  5184               	movf	_seconds& (0+255),w,b
  2829  002EE2  0100               	movlb	0	; () banked
  2830  002EE4  25C6               	addwf	??_calc_Time& (0+255),w,b
  2831  002EE6  0100               	movlb	0	; () banked
  2832  002EE8  6FC8               	movwf	calc_Time@interval& (0+255),b
  2833  002EEA  0100               	movlb	0	; () banked
  2834  002EEC  5185               	movf	(_seconds+1)& (0+255),w,b
  2835  002EEE  0100               	movlb	0	; () banked
  2836  002EF0  21C7               	addwfc	(??_calc_Time+1)& (0+255),w,b
  2837  002EF2  0100               	movlb	0	; () banked
  2838  002EF4  6FC9               	movwf	(calc_Time@interval+1)& (0+255),b
  2839                           
  2840                           ; BSR set to: 0
  2841                           ;user.c: 40: interval = (int) interval / 60;
  2842  002EF6  C0C8  F0BA         	movff	calc_Time@interval,___awdiv@dividend
  2843  002EFA  C0C9  F0BB         	movff	calc_Time@interval+1,___awdiv@dividend+1
  2844  002EFE  0E00               	movlw	0
  2845  002F00  0100               	movlb	0	; () banked
  2846  002F02  6FBD               	movwf	(___awdiv@divisor+1)& (0+255),b
  2847  002F04  0E3C               	movlw	60
  2848  002F06  6FBC               	movwf	___awdiv@divisor& (0+255),b
  2849  002F08  ECFF  F014         	call	___awdiv	;wreg free
  2850  002F0C  C0BA  F0C8         	movff	?___awdiv,calc_Time@interval
  2851  002F10  C0BB  F0C9         	movff	?___awdiv+1,calc_Time@interval+1
  2852  002F14                     l7234:
  2853                           
  2854                           ;user.c: 41: }
  2855                           ;user.c: 43: return interval;
  2856  002F14  C0C8  F0C2         	movff	calc_Time@interval,?_calc_Time
  2857  002F18  C0C9  F0C3         	movff	calc_Time@interval+1,?_calc_Time+1
  2858  002F1C  0012               	return	
  2859  002F1E                     __end_of_calc_Time:
  2860                           	opt stack 0
  2861                           tblptru	equ	0xFF8
  2862                           tblptrh	equ	0xFF7
  2863                           tblptrl	equ	0xFF6
  2864                           tablat	equ	0xFF5
  2865                           postinc0	equ	0xFEE
  2866                           wreg	equ	0xFE8
  2867                           postdec1	equ	0xFE5
  2868                           fsr1l	equ	0xFE1
  2869                           status	equ	0xFD8
  2870                           
  2871 ;; *************** function ___awdiv *****************
  2872 ;; Defined at:
  2873 ;;		line 8 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\awdiv.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;  dividend        2    0[BANK0 ] int 
  2876 ;;  divisor         2    2[BANK0 ] int 
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;  quotient        2    6[BANK0 ] int 
  2879 ;;  sign            1    5[BANK0 ] unsigned char 
  2880 ;;  counter         1    4[BANK0 ] unsigned char 
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  2    0[BANK0 ] int 
  2883 ;; Registers used:
  2884 ;;		wreg, status,2, status,0
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2890 ;;      Params:         0       4       0       0       0       0       0       0       0
  2891 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2892 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2893 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2894 ;;Total ram usage:        8 bytes
  2895 ;; Hardware stack levels used:    1
  2896 ;; Hardware stack levels required when called:   11
  2897 ;; This function calls:
  2898 ;;		Nothing
  2899 ;; This function is called by:
  2900 ;;		_calc_Time
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text5
  2905  0029FE                     __ptext5:
  2906                           	opt stack 0
  2907  0029FE                     ___awdiv:
  2908                           	opt stack 17
  2909                           
  2910                           ;incstack = 0
  2911  0029FE  0E00               	movlw	0
  2912  002A00  0100               	movlb	0	; () banked
  2913  002A02  6FBF               	movwf	___awdiv@sign& (0+255),b
  2914                           
  2915                           ; BSR set to: 0
  2916  002A04  0100               	movlb	0	; () banked
  2917  002A06  AFBD               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  2918  002A08  D008               	goto	l7178
  2919                           
  2920                           ; BSR set to: 0
  2921  002A0A  0100               	movlb	0	; () banked
  2922  002A0C  6DBC               	negf	___awdiv@divisor& (0+255),b
  2923  002A0E  1FBD               	comf	(___awdiv@divisor+1)& (0+255),f,b
  2924  002A10  B0D8               	btfsc	status,0,c
  2925  002A12  2BBD               	incf	(___awdiv@divisor+1)& (0+255),f,b
  2926                           
  2927                           ; BSR set to: 0
  2928  002A14  0E01               	movlw	1
  2929  002A16  0100               	movlb	0	; () banked
  2930  002A18  6FBF               	movwf	___awdiv@sign& (0+255),b
  2931  002A1A                     l7178:
  2932                           
  2933                           ; BSR set to: 0
  2934  002A1A  0100               	movlb	0	; () banked
  2935  002A1C  AFBB               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  2936  002A1E  D008               	goto	l7184
  2937                           
  2938                           ; BSR set to: 0
  2939  002A20  0100               	movlb	0	; () banked
  2940  002A22  6DBA               	negf	___awdiv@dividend& (0+255),b
  2941  002A24  1FBB               	comf	(___awdiv@dividend+1)& (0+255),f,b
  2942  002A26  B0D8               	btfsc	status,0,c
  2943  002A28  2BBB               	incf	(___awdiv@dividend+1)& (0+255),f,b
  2944                           
  2945                           ; BSR set to: 0
  2946  002A2A  0E01               	movlw	1
  2947  002A2C  0100               	movlb	0	; () banked
  2948  002A2E  1BBF               	xorwf	___awdiv@sign& (0+255),f,b
  2949  002A30                     l7184:
  2950                           
  2951                           ; BSR set to: 0
  2952  002A30  0E00               	movlw	0
  2953  002A32  0100               	movlb	0	; () banked
  2954  002A34  6FC1               	movwf	(___awdiv@quotient+1)& (0+255),b
  2955  002A36  0E00               	movlw	0
  2956  002A38  6FC0               	movwf	___awdiv@quotient& (0+255),b
  2957                           
  2958                           ; BSR set to: 0
  2959  002A3A  0100               	movlb	0	; () banked
  2960  002A3C  51BC               	movf	___awdiv@divisor& (0+255),w,b
  2961  002A3E  0100               	movlb	0	; () banked
  2962  002A40  11BD               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  2963  002A42  B4D8               	btfsc	status,2,c
  2964  002A44  D02C               	goto	l7206
  2965                           
  2966                           ; BSR set to: 0
  2967  002A46  0E01               	movlw	1
  2968  002A48  0100               	movlb	0	; () banked
  2969  002A4A  6FBE               	movwf	___awdiv@counter& (0+255),b
  2970  002A4C  D006               	goto	l7192
  2971  002A4E                     l7190:
  2972                           
  2973                           ; BSR set to: 0
  2974  002A4E  0100               	movlb	0	; () banked
  2975  002A50  90D8               	bcf	status,0,c
  2976  002A52  37BC               	rlcf	___awdiv@divisor& (0+255),f,b
  2977  002A54  37BD               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  2978  002A56  0100               	movlb	0	; () banked
  2979  002A58  2BBE               	incf	___awdiv@counter& (0+255),f,b
  2980  002A5A                     l7192:
  2981                           
  2982                           ; BSR set to: 0
  2983  002A5A  0100               	movlb	0	; () banked
  2984  002A5C  AFBD               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  2985  002A5E  D7F7               	goto	l7190
  2986  002A60                     l7194:
  2987                           
  2988                           ; BSR set to: 0
  2989  002A60  0100               	movlb	0	; () banked
  2990  002A62  90D8               	bcf	status,0,c
  2991  002A64  37C0               	rlcf	___awdiv@quotient& (0+255),f,b
  2992  002A66  37C1               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  2993                           
  2994                           ; BSR set to: 0
  2995  002A68  0100               	movlb	0	; () banked
  2996  002A6A  51BC               	movf	___awdiv@divisor& (0+255),w,b
  2997  002A6C  0100               	movlb	0	; () banked
  2998  002A6E  5DBA               	subwf	___awdiv@dividend& (0+255),w,b
  2999  002A70  0100               	movlb	0	; () banked
  3000  002A72  51BD               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3001  002A74  0100               	movlb	0	; () banked
  3002  002A76  59BB               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  3003  002A78  A0D8               	btfss	status,0,c
  3004  002A7A  D00A               	goto	l7202
  3005                           
  3006                           ; BSR set to: 0
  3007  002A7C  0100               	movlb	0	; () banked
  3008  002A7E  51BC               	movf	___awdiv@divisor& (0+255),w,b
  3009  002A80  0100               	movlb	0	; () banked
  3010  002A82  5FBA               	subwf	___awdiv@dividend& (0+255),f,b
  3011  002A84  0100               	movlb	0	; () banked
  3012  002A86  51BD               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3013  002A88  0100               	movlb	0	; () banked
  3014  002A8A  5BBB               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  3015                           
  3016                           ; BSR set to: 0
  3017  002A8C  0100               	movlb	0	; () banked
  3018  002A8E  81C0               	bsf	___awdiv@quotient& (0+255),0,b
  3019  002A90                     l7202:
  3020                           
  3021                           ; BSR set to: 0
  3022  002A90  0100               	movlb	0	; () banked
  3023  002A92  90D8               	bcf	status,0,c
  3024  002A94  33BD               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  3025  002A96  33BC               	rrcf	___awdiv@divisor& (0+255),f,b
  3026                           
  3027                           ; BSR set to: 0
  3028  002A98  0100               	movlb	0	; () banked
  3029  002A9A  2FBE               	decfsz	___awdiv@counter& (0+255),f,b
  3030  002A9C  D7E1               	goto	l7194
  3031  002A9E                     l7206:
  3032                           
  3033                           ; BSR set to: 0
  3034  002A9E  0100               	movlb	0	; () banked
  3035  002AA0  51BF               	movf	___awdiv@sign& (0+255),w,b
  3036  002AA2  0100               	movlb	0	; () banked
  3037  002AA4  B4D8               	btfsc	status,2,c
  3038  002AA6  D005               	goto	l7210
  3039                           
  3040                           ; BSR set to: 0
  3041  002AA8  0100               	movlb	0	; () banked
  3042  002AAA  6DC0               	negf	___awdiv@quotient& (0+255),b
  3043  002AAC  1FC1               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3044  002AAE  B0D8               	btfsc	status,0,c
  3045  002AB0  2BC1               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3046  002AB2                     l7210:
  3047                           
  3048                           ; BSR set to: 0
  3049  002AB2  C0C0  F0BA         	movff	___awdiv@quotient,?___awdiv
  3050  002AB6  C0C1  F0BB         	movff	___awdiv@quotient+1,?___awdiv+1
  3051  002ABA  0012               	return	
  3052  002ABC                     __end_of___awdiv:
  3053                           	opt stack 0
  3054                           tblptru	equ	0xFF8
  3055                           tblptrh	equ	0xFF7
  3056                           tblptrl	equ	0xFF6
  3057                           tablat	equ	0xFF5
  3058                           postinc0	equ	0xFEE
  3059                           wreg	equ	0xFE8
  3060                           postdec1	equ	0xFE5
  3061                           fsr1l	equ	0xFE1
  3062                           status	equ	0xFD8
  3063                           
  3064 ;; *************** function _strncmp *****************
  3065 ;; Defined at:
  3066 ;;		line 4 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\strncmp.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  3069 ;;		 -> main@end(10), battery.battery_type(5), battery(90), 
  3070 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  3071 ;;		 -> STR_25(9), STR_23(6), STR_22(4), STR_19(9), 
  3072 ;;		 -> STR_17(6), STR_16(4), STR_13(9), STR_11(6), 
  3073 ;;		 -> STR_10(4), algo_Name(15), 
  3074 ;;  len             2    4[BANK0 ] unsigned int 
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;		None
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  2    0[BANK0 ] int 
  3079 ;; Registers used:
  3080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3086 ;;      Params:         0       6       0       0       0       0       0       0       0
  3087 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3088 ;;      Temps:          0       3       0       0       0       0       0       0       0
  3089 ;;      Totals:         0       9       0       0       0       0       0       0       0
  3090 ;;Total ram usage:        9 bytes
  3091 ;; Hardware stack levels used:    1
  3092 ;; Hardware stack levels required when called:   11
  3093 ;; This function calls:
  3094 ;;		Nothing
  3095 ;; This function is called by:
  3096 ;;		_main
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           	psect	text6
  3101  00261A                     __ptext6:
  3102                           	opt stack 0
  3103  00261A                     _strncmp:
  3104                           	opt stack 19
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;incstack = 0
  3108  00261A  D053               	goto	l7452
  3109  00261C                     l7442:
  3110  00261C  C0BA  FFD9         	movff	strncmp@s1,fsr2l
  3111  002620  C0BB  FFDA         	movff	strncmp@s1+1,fsr2h
  3112  002624  50DF               	movf	indf2,w,c
  3113  002626  B4D8               	btfsc	status,2,c
  3114  002628  D01B               	goto	l7446
  3115  00262A  C0BA  FFD9         	movff	strncmp@s1,fsr2l
  3116  00262E  C0BB  FFDA         	movff	strncmp@s1+1,fsr2h
  3117  002632  50DF               	movf	indf2,w,c
  3118  002634  0100               	movlb	0	; () banked
  3119  002636  6FC0               	movwf	??_strncmp& (0+255),b
  3120  002638  C0BC  FFF6         	movff	strncmp@s2,tblptrl
  3121  00263C  C0BD  FFF7         	movff	strncmp@s2+1,tblptrh
  3122  002640  6AF8               	clrf	tblptru,c
  3123  002642  0E07               	movlw	(high __ramtop+-1)
  3124  002644  64F7               	cpfsgt	tblptrh,c
  3125  002646  D003               	bra	u7827
  3126  002648  0008               	tblrd		*
  3127  00264A  50F5               	movf	tablat,w,c
  3128  00264C  D005               	bra	u7820
  3129  00264E                     u7827:
  3130  00264E  CFF6 FFE1          	movff	tblptrl,fsr1l
  3131  002652  CFF7 FFE2          	movff	tblptrh,fsr1h
  3132  002656  50E7               	movf	indf1,w,c
  3133  002658                     u7820:
  3134  002658  0100               	movlb	0	; () banked
  3135  00265A  19C0               	xorwf	??_strncmp& (0+255),w,b
  3136  00265C  B4D8               	btfsc	status,2,c
  3137  00265E  D02B               	goto	l7450
  3138  002660                     l7446:
  3139  002660  C0BC  FFF6         	movff	strncmp@s2,tblptrl
  3140  002664  C0BD  FFF7         	movff	strncmp@s2+1,tblptrh
  3141  002668  6AF8               	clrf	tblptru,c
  3142  00266A  0E07               	movlw	(high __ramtop+-1)
  3143  00266C  64F7               	cpfsgt	tblptrh,c
  3144  00266E  D003               	bra	u7847
  3145  002670  0008               	tblrd		*
  3146  002672  50F5               	movf	tablat,w,c
  3147  002674  D005               	bra	u7840
  3148  002676                     u7847:
  3149  002676  CFF6 FFE1          	movff	tblptrl,fsr1l
  3150  00267A  CFF7 FFE2          	movff	tblptrh,fsr1h
  3151  00267E  50E7               	movf	indf1,w,c
  3152  002680                     u7840:
  3153  002680  0100               	movlb	0	; () banked
  3154  002682  6FC0               	movwf	??_strncmp& (0+255),b
  3155  002684  6BC1               	clrf	(??_strncmp+1)& (0+255),b
  3156  002686  0100               	movlb	0	; () banked
  3157  002688  1FC0               	comf	??_strncmp& (0+255),f,b
  3158  00268A  1FC1               	comf	(??_strncmp+1)& (0+255),f,b
  3159  00268C  4BC0               	infsnz	??_strncmp& (0+255),f,b
  3160  00268E  2BC1               	incf	(??_strncmp+1)& (0+255),f,b
  3161  002690  C0BA  FFD9         	movff	strncmp@s1,fsr2l
  3162  002694  C0BB  FFDA         	movff	strncmp@s1+1,fsr2h
  3163  002698  50DF               	movf	indf2,w,c
  3164  00269A  0100               	movlb	0	; () banked
  3165  00269C  6FC2               	movwf	(??_strncmp+2)& (0+255),b
  3166  00269E  0100               	movlb	0	; () banked
  3167  0026A0  51C2               	movf	(??_strncmp+2)& (0+255),w,b
  3168  0026A2  0100               	movlb	0	; () banked
  3169  0026A4  25C0               	addwf	??_strncmp& (0+255),w,b
  3170  0026A6  0100               	movlb	0	; () banked
  3171  0026A8  6FBA               	movwf	?_strncmp& (0+255),b
  3172  0026AA  0E00               	movlw	0
  3173  0026AC  0100               	movlb	0	; () banked
  3174  0026AE  21C1               	addwfc	(??_strncmp+1)& (0+255),w,b
  3175  0026B0  0100               	movlb	0	; () banked
  3176  0026B2  6FBB               	movwf	(?_strncmp+1)& (0+255),b
  3177                           
  3178                           ; BSR set to: 0
  3179  0026B4  0012               	return	
  3180  0026B6                     l7450:
  3181                           
  3182                           ; BSR set to: 0
  3183  0026B6  0100               	movlb	0	; () banked
  3184  0026B8  4BBA               	infsnz	strncmp@s1& (0+255),f,b
  3185  0026BA  2BBB               	incf	(strncmp@s1+1)& (0+255),f,b
  3186  0026BC  0100               	movlb	0	; () banked
  3187  0026BE  4BBC               	infsnz	strncmp@s2& (0+255),f,b
  3188  0026C0  2BBD               	incf	(strncmp@s2+1)& (0+255),f,b
  3189  0026C2                     l7452:
  3190  0026C2  0100               	movlb	0	; () banked
  3191  0026C4  07BE               	decf	strncmp@len& (0+255),f,b
  3192  0026C6  A0D8               	btfss	status,0,c
  3193  0026C8  07BF               	decf	(strncmp@len+1)& (0+255),f,b
  3194  0026CA  0100               	movlb	0	; () banked
  3195  0026CC  29BE               	incf	strncmp@len& (0+255),w,b
  3196  0026CE  E1A6               	bnz	l7442
  3197  0026D0  0100               	movlb	0	; () banked
  3198  0026D2  29BF               	incf	(strncmp@len+1)& (0+255),w,b
  3199  0026D4  A4D8               	btfss	status,2,c
  3200  0026D6  D7A2               	goto	l7442
  3201                           
  3202                           ; BSR set to: 0
  3203                           
  3204                           ; BSR set to: 0
  3205  0026D8  0E00               	movlw	0
  3206  0026DA  0100               	movlb	0	; () banked
  3207  0026DC  6FBB               	movwf	(?_strncmp+1)& (0+255),b
  3208  0026DE  0E00               	movlw	0
  3209  0026E0  6FBA               	movwf	?_strncmp& (0+255),b
  3210  0026E2  0012               	return	
  3211  0026E4                     __end_of_strncmp:
  3212                           	opt stack 0
  3213                           tblptru	equ	0xFF8
  3214                           tblptrh	equ	0xFF7
  3215                           tblptrl	equ	0xFF6
  3216                           tablat	equ	0xFF5
  3217                           postinc0	equ	0xFEE
  3218                           wreg	equ	0xFE8
  3219                           indf1	equ	0xFE7
  3220                           postdec1	equ	0xFE5
  3221                           fsr1h	equ	0xFE2
  3222                           fsr1l	equ	0xFE1
  3223                           indf2	equ	0xFDF
  3224                           fsr2h	equ	0xFDA
  3225                           fsr2l	equ	0xFD9
  3226                           status	equ	0xFD8
  3227                           
  3228 ;; *************** function _strcpy *****************
  3229 ;; Defined at:
  3230 ;;		line 8 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\strcpy.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;  to              2    0[BANK0 ] PTR unsigned char 
  3233 ;;		 -> main@msg_Error(100), 
  3234 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  3235 ;;		 -> STR_26(19), STR_24(22), STR_21(24), STR_20(20), 
  3236 ;;		 -> STR_18(22), STR_15(24), STR_14(20), STR_12(32), 
  3237 ;;		 -> STR_9(34), STR_8(20), STR_7(30), STR_6(27), 
  3238 ;;		 -> STR_5(19), STR_4(19), STR_3(18), STR_2(19), 
  3239 ;;		 -> STR_1(14), 
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;  cp              2    4[BANK0 ] PTR unsigned char 
  3242 ;;		 -> main@msg_Error(100), 
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  2    0[BANK0 ] PTR unsigned char 
  3245 ;; Registers used:
  3246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3252 ;;      Params:         0       4       0       0       0       0       0       0       0
  3253 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3254 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3255 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3256 ;;Total ram usage:        6 bytes
  3257 ;; Hardware stack levels used:    1
  3258 ;; Hardware stack levels required when called:   11
  3259 ;; This function calls:
  3260 ;;		Nothing
  3261 ;; This function is called by:
  3262 ;;		_main
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           	psect	text7
  3267  00353E                     __ptext7:
  3268                           	opt stack 0
  3269  00353E                     _strcpy:
  3270                           	opt stack 19
  3271                           
  3272                           ; BSR set to: 0
  3273                           ;incstack = 0
  3274  00353E  C0BA  F0BE         	movff	strcpy@to,strcpy@cp
  3275  003542  C0BB  F0BF         	movff	strcpy@to+1,strcpy@cp+1
  3276  003546  D006               	goto	l7426
  3277  003548                     l7424:
  3278  003548  0100               	movlb	0	; () banked
  3279  00354A  4BBE               	infsnz	strcpy@cp& (0+255),f,b
  3280  00354C  2BBF               	incf	(strcpy@cp+1)& (0+255),f,b
  3281  00354E  0100               	movlb	0	; () banked
  3282  003550  4BBC               	infsnz	strcpy@from& (0+255),f,b
  3283  003552  2BBD               	incf	(strcpy@from+1)& (0+255),f,b
  3284  003554                     l7426:
  3285  003554  C0BC  FFF6         	movff	strcpy@from,tblptrl
  3286  003558  C0BD  FFF7         	movff	strcpy@from+1,tblptrh
  3287  00355C                     	if	0	;tblptru may be non-zero
  3288  00355C                     	endif
  3289  00355C                     	if	0	;tblptru may be non-zero
  3290  00355C                     	endif
  3291  00355C  C0BE  FFD9         	movff	strcpy@cp,fsr2l
  3292  003560  C0BF  FFDA         	movff	strcpy@cp+1,fsr2h
  3293  003564  0008               	tblrd		*
  3294  003566  CFF5 FFDF          	movff	tablat,indf2
  3295  00356A  50DF               	movf	indf2,w,c
  3296  00356C  B4D8               	btfsc	status,2,c
  3297  00356E  0012               	return	
  3298  003570  D7EB               	goto	l7424
  3299  003572                     __end_of_strcpy:
  3300                           	opt stack 0
  3301                           tblptru	equ	0xFF8
  3302                           tblptrh	equ	0xFF7
  3303                           tblptrl	equ	0xFF6
  3304                           tablat	equ	0xFF5
  3305                           postinc0	equ	0xFEE
  3306                           wreg	equ	0xFE8
  3307                           indf1	equ	0xFE7
  3308                           postdec1	equ	0xFE5
  3309                           fsr1h	equ	0xFE2
  3310                           fsr1l	equ	0xFE1
  3311                           indf2	equ	0xFDF
  3312                           fsr2h	equ	0xFDA
  3313                           fsr2l	equ	0xFD9
  3314                           status	equ	0xFD8
  3315                           
  3316 ;; *************** function _stop_CV *****************
  3317 ;; Defined at:
  3318 ;;		line 410 in file "user.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;		None
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;  voltage         3   67[BANK0 ] float 
  3323 ;;  v_bat           3   64[BANK0 ] float 
  3324 ;;  res             2   62[BANK0 ] short 
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  2   60[BANK0 ] short 
  3327 ;; Registers used:
  3328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3334 ;;      Params:         0       2       0       0       0       0       0       0       0
  3335 ;;      Locals:         0       8       0       0       0       0       0       0       0
  3336 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3337 ;;      Totals:         0      10       0       0       0       0       0       0       0
  3338 ;;Total ram usage:       10 bytes
  3339 ;; Hardware stack levels used:    1
  3340 ;; Hardware stack levels required when called:   14
  3341 ;; This function calls:
  3342 ;;		_V_Eval
  3343 ;;		___ftge
  3344 ;;		___ftmul
  3345 ;;		___lwtoft
  3346 ;; This function is called by:
  3347 ;;		_main
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           	psect	text8
  3352  002042                     __ptext8:
  3353                           	opt stack 0
  3354  002042                     _stop_CV:
  3355                           	opt stack 16
  3356                           
  3357                           ;user.c: 412: signed float voltage = 0;
  3358                           
  3359                           ;incstack = 0
  3360  002042  0E00               	movlw	0
  3361  002044  0100               	movlb	0	; () banked
  3362  002046  6FFD               	movwf	stop_CV@voltage& (0+255),b
  3363  002048  0E00               	movlw	0
  3364  00204A  0100               	movlb	0	; () banked
  3365  00204C  6FFE               	movwf	(stop_CV@voltage+1)& (0+255),b
  3366  00204E  0E00               	movlw	0
  3367  002050  0100               	movlb	0	; () banked
  3368  002052  6FFF               	movwf	(stop_CV@voltage+2)& (0+255),b
  3369                           
  3370                           ;user.c: 413: short res = KO;
  3371  002054  0E00               	movlw	0
  3372  002056  0100               	movlb	0	; () banked
  3373  002058  6FF9               	movwf	(stop_CV@res+1)& (0+255),b
  3374  00205A  0E01               	movlw	1
  3375  00205C  6FF8               	movwf	stop_CV@res& (0+255),b
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;user.c: 414: float v_bat = battery.charge.chg_Cell_Volt * battery.number_of_cells;
  3379  00205E  C188  F0C2         	movff	_battery+15,___lwtoft@c
  3380  002062  C189  F0C3         	movff	_battery+16,___lwtoft@c+1
  3381  002066  EC61  F01B         	call	___lwtoft	;wreg free
  3382  00206A  C0C2  F0C6         	movff	?___lwtoft,___ftmul@f1
  3383  00206E  C0C3  F0C7         	movff	?___lwtoft+1,___ftmul@f1+1
  3384  002072  C0C4  F0C8         	movff	?___lwtoft+2,___ftmul@f1+2
  3385  002076  C19F  F0C9         	movff	_battery+38,___ftmul@f2
  3386  00207A  C1A0  F0CA         	movff	_battery+39,___ftmul@f2+1
  3387  00207E  C1A1  F0CB         	movff	_battery+40,___ftmul@f2+2
  3388  002082  ECD2  F009         	call	___ftmul	;wreg free
  3389  002086  C0C6  F0FA         	movff	?___ftmul,stop_CV@v_bat
  3390  00208A  C0C7  F0FB         	movff	?___ftmul+1,stop_CV@v_bat+1
  3391  00208E  C0C8  F0FC         	movff	?___ftmul+2,stop_CV@v_bat+2
  3392                           
  3393                           ;user.c: 417: res = V_Eval(0b10000111,&voltage);
  3394  002092  0EFD               	movlw	low stop_CV@voltage
  3395  002094  0100               	movlb	0	; () banked
  3396  002096  6FF0               	movwf	V_Eval@voltage& (0+255),b
  3397  002098  0E00               	movlw	high stop_CV@voltage
  3398  00209A  0100               	movlb	0	; () banked
  3399  00209C  6FF1               	movwf	(V_Eval@voltage+1)& (0+255),b
  3400  00209E  0E87               	movlw	135
  3401  0020A0  EC69  F011         	call	_V_Eval
  3402  0020A4  C0F0  F0F8         	movff	?_V_Eval,stop_CV@res
  3403  0020A8  C0F1  F0F9         	movff	?_V_Eval+1,stop_CV@res+1
  3404                           
  3405                           ;user.c: 418: if (res != OK)
  3406  0020AC  0100               	movlb	0	; () banked
  3407  0020AE  51F8               	movf	stop_CV@res& (0+255),w,b
  3408  0020B0  0100               	movlb	0	; () banked
  3409  0020B2  11F9               	iorwf	(stop_CV@res+1)& (0+255),w,b
  3410  0020B4  B4D8               	btfsc	status,2,c
  3411  0020B6  D006               	goto	l7672
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;user.c: 419: {
  3415                           ;user.c: 420: return KO;
  3416  0020B8  0E00               	movlw	0
  3417  0020BA  0100               	movlb	0	; () banked
  3418  0020BC  6FF7               	movwf	(?_stop_CV+1)& (0+255),b
  3419  0020BE  0E01               	movlw	1
  3420  0020C0  6FF6               	movwf	?_stop_CV& (0+255),b
  3421                           
  3422                           ; BSR set to: 0
  3423  0020C2  0012               	return	
  3424  0020C4                     l7672:
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;user.c: 421: }
  3428                           ;user.c: 423: if (voltage >= v_bat - (10/1000) && voltage <= v_bat + (10/1000))
  3429  0020C4  C0FD  F0D5         	movff	stop_CV@voltage,___ftge@ff1
  3430  0020C8  C0FE  F0D6         	movff	stop_CV@voltage+1,___ftge@ff1+1
  3431  0020CC  C0FF  F0D7         	movff	stop_CV@voltage+2,___ftge@ff1+2
  3432  0020D0  C0FA  F0D8         	movff	stop_CV@v_bat,___ftge@ff2
  3433  0020D4  C0FB  F0D9         	movff	stop_CV@v_bat+1,___ftge@ff2+1
  3434  0020D8  C0FC  F0DA         	movff	stop_CV@v_bat+2,___ftge@ff2+2
  3435  0020DC  ECD7  F013         	call	___ftge	;wreg free
  3436  0020E0  0100               	movlb	0	; () banked
  3437  0020E2  A0D8               	btfss	status,0,c
  3438  0020E4  D017               	goto	l7682
  3439                           
  3440                           ; BSR set to: 0
  3441  0020E6  C0FA  F0D5         	movff	stop_CV@v_bat,___ftge@ff1
  3442  0020EA  C0FB  F0D6         	movff	stop_CV@v_bat+1,___ftge@ff1+1
  3443  0020EE  C0FC  F0D7         	movff	stop_CV@v_bat+2,___ftge@ff1+2
  3444  0020F2  C0FD  F0D8         	movff	stop_CV@voltage,___ftge@ff2
  3445  0020F6  C0FE  F0D9         	movff	stop_CV@voltage+1,___ftge@ff2+1
  3446  0020FA  C0FF  F0DA         	movff	stop_CV@voltage+2,___ftge@ff2+2
  3447  0020FE  ECD7  F013         	call	___ftge	;wreg free
  3448  002102  0100               	movlb	0	; () banked
  3449  002104  A0D8               	btfss	status,0,c
  3450  002106  D006               	goto	l7682
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;user.c: 424: {
  3454                           ;user.c: 425: return OK;
  3455  002108  0E00               	movlw	0
  3456  00210A  0100               	movlb	0	; () banked
  3457  00210C  6FF7               	movwf	(?_stop_CV+1)& (0+255),b
  3458  00210E  0E00               	movlw	0
  3459  002110  6FF6               	movwf	?_stop_CV& (0+255),b
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;user.c: 426: }
  3463                           
  3464                           ; BSR set to: 0
  3465  002112  0012               	return	
  3466  002114                     l7682:
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;user.c: 427: else
  3470                           ;user.c: 428: {
  3471                           ;user.c: 429: return KO;
  3472  002114  0E00               	movlw	0
  3473  002116  0100               	movlb	0	; () banked
  3474  002118  6FF7               	movwf	(?_stop_CV+1)& (0+255),b
  3475  00211A  0E01               	movlw	1
  3476  00211C  6FF6               	movwf	?_stop_CV& (0+255),b
  3477                           
  3478                           ; BSR set to: 0
  3479  00211E  0012               	return	
  3480  002120                     __end_of_stop_CV:
  3481                           	opt stack 0
  3482                           tblptru	equ	0xFF8
  3483                           tblptrh	equ	0xFF7
  3484                           tblptrl	equ	0xFF6
  3485                           tablat	equ	0xFF5
  3486                           postinc0	equ	0xFEE
  3487                           wreg	equ	0xFE8
  3488                           indf1	equ	0xFE7
  3489                           postdec1	equ	0xFE5
  3490                           fsr1h	equ	0xFE2
  3491                           fsr1l	equ	0xFE1
  3492                           indf2	equ	0xFDF
  3493                           fsr2h	equ	0xFDA
  3494                           fsr2l	equ	0xFD9
  3495                           status	equ	0xFD8
  3496                           
  3497 ;; *************** function _start_Precondition *****************
  3498 ;; Defined at:
  3499 ;;		line 255 in file "user.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;		None
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;  res             2    0[BANK1 ] short 
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  2   67[BANK0 ] short 
  3506 ;; Registers used:
  3507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3513 ;;      Params:         0       2       0       0       0       0       0       0       0
  3514 ;;      Locals:         0       0       2       0       0       0       0       0       0
  3515 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3516 ;;      Totals:         0       2       2       0       0       0       0       0       0
  3517 ;;Total ram usage:        4 bytes
  3518 ;; Hardware stack levels used:    1
  3519 ;; Hardware stack levels required when called:   15
  3520 ;; This function calls:
  3521 ;;		_I_V_Set
  3522 ;; This function is called by:
  3523 ;;		_main
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           	psect	text9
  3528  003354                     __ptext9:
  3529                           	opt stack 0
  3530  003354                     _start_Precondition:
  3531                           	opt stack 15
  3532                           
  3533                           ;user.c: 257: short res;
  3534                           ;user.c: 259: PI.Setpoint = battery.charge.restore_Charge_Current;
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;incstack = 0
  3538  003354  C1A7  F0A9         	movff	_battery+46,_PI+6
  3539  003358  C1A8  F0AA         	movff	_battery+47,_PI+7
  3540  00335C  C1A9  F0AB         	movff	_battery+48,_PI+8
  3541                           
  3542                           ;user.c: 260: PI.Saturated = 0;
  3543  003360  0E00               	movlw	0
  3544  003362  0100               	movlb	0	; () banked
  3545  003364  6FB9               	movwf	(_PI+22)& (0+255),b
  3546  003366  0E00               	movlw	0
  3547  003368  6FB8               	movwf	(_PI+21)& (0+255),b
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;user.c: 261: res = I_V_Set(0b11010111);
  3551  00336A  0ED7               	movlw	215
  3552  00336C  EC72  F013         	call	_I_V_Set
  3553  003370  C0F6  F100         	movff	?_I_V_Set,start_Precondition@res
  3554  003374  C0F7  F101         	movff	?_I_V_Set+1,start_Precondition@res+1
  3555                           
  3556                           ;user.c: 262: if (res != OK)
  3557  003378  0101               	movlb	1	; () banked
  3558  00337A  5100               	movf	start_Precondition@res& (0+255),w,b
  3559  00337C  0101               	movlb	1	; () banked
  3560  00337E  1101               	iorwf	(start_Precondition@res+1)& (0+255),w,b
  3561  003380  B4D8               	btfsc	status,2,c
  3562  003382  D006               	goto	l294
  3563                           
  3564                           ; BSR set to: 1
  3565                           ;user.c: 263: {
  3566                           ;user.c: 264: return KO;
  3567  003384  0E00               	movlw	0
  3568  003386  0100               	movlb	0	; () banked
  3569  003388  6FFE               	movwf	(?_start_Precondition+1)& (0+255),b
  3570  00338A  0E01               	movlw	1
  3571  00338C  6FFD               	movwf	?_start_Precondition& (0+255),b
  3572                           
  3573                           ; BSR set to: 0
  3574  00338E  0012               	return	
  3575  003390                     l294:
  3576                           
  3577                           ; BSR set to: 1
  3578                           ;user.c: 265: }
  3579                           ;user.c: 266: precondition_Time = seconds;
  3580  003390  C084  F097         	movff	_seconds,_precondition_Time
  3581  003394  C085  F098         	movff	_seconds+1,_precondition_Time+1
  3582  003398  C086  F099         	movff	_seconds+2,_precondition_Time+2
  3583                           
  3584                           ; BSR set to: 1
  3585                           ;user.c: 268: return OK;
  3586  00339C  0E00               	movlw	0
  3587  00339E  0100               	movlb	0	; () banked
  3588  0033A0  6FFE               	movwf	(?_start_Precondition+1)& (0+255),b
  3589  0033A2  0E00               	movlw	0
  3590  0033A4  6FFD               	movwf	?_start_Precondition& (0+255),b
  3591  0033A6  0012               	return	
  3592  0033A8                     __end_of_start_Precondition:
  3593                           	opt stack 0
  3594                           tblptru	equ	0xFF8
  3595                           tblptrh	equ	0xFF7
  3596                           tblptrl	equ	0xFF6
  3597                           tablat	equ	0xFF5
  3598                           postinc0	equ	0xFEE
  3599                           wreg	equ	0xFE8
  3600                           indf1	equ	0xFE7
  3601                           postdec1	equ	0xFE5
  3602                           fsr1h	equ	0xFE2
  3603                           fsr1l	equ	0xFE1
  3604                           indf2	equ	0xFDF
  3605                           fsr2h	equ	0xFDA
  3606                           fsr2l	equ	0xFD9
  3607                           status	equ	0xFD8
  3608                           
  3609 ;; *************** function _start_CV *****************
  3610 ;; Defined at:
  3611 ;;		line 359 in file "user.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;		None
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;  res             2    0[BANK1 ] short 
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  2   67[BANK0 ] short 
  3618 ;; Registers used:
  3619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3625 ;;      Params:         0       2       0       0       0       0       0       0       0
  3626 ;;      Locals:         0       0       2       0       0       0       0       0       0
  3627 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3628 ;;      Totals:         0       2       2       0       0       0       0       0       0
  3629 ;;Total ram usage:        4 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; Hardware stack levels required when called:   15
  3632 ;; This function calls:
  3633 ;;		_I_V_Set
  3634 ;;		___ftmul
  3635 ;;		___lwtoft
  3636 ;; This function is called by:
  3637 ;;		_main
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           	psect	text10
  3642  003168                     __ptext10:
  3643                           	opt stack 0
  3644  003168                     _start_CV:
  3645                           	opt stack 15
  3646                           
  3647                           ;user.c: 361: short res;
  3648                           ;user.c: 363: PI.Setpoint = battery.charge.chg_Cell_Volt * battery.number_of_cells;
  3649                           
  3650                           ; BSR set to: 0
  3651                           ;incstack = 0
  3652  003168  C188  F0C2         	movff	_battery+15,___lwtoft@c
  3653  00316C  C189  F0C3         	movff	_battery+16,___lwtoft@c+1
  3654  003170  EC61  F01B         	call	___lwtoft	;wreg free
  3655  003174  C0C2  F0C6         	movff	?___lwtoft,___ftmul@f1
  3656  003178  C0C3  F0C7         	movff	?___lwtoft+1,___ftmul@f1+1
  3657  00317C  C0C4  F0C8         	movff	?___lwtoft+2,___ftmul@f1+2
  3658  003180  C19F  F0C9         	movff	_battery+38,___ftmul@f2
  3659  003184  C1A0  F0CA         	movff	_battery+39,___ftmul@f2+1
  3660  003188  C1A1  F0CB         	movff	_battery+40,___ftmul@f2+2
  3661  00318C  ECD2  F009         	call	___ftmul	;wreg free
  3662  003190  C0C6  F0A9         	movff	?___ftmul,_PI+6
  3663  003194  C0C7  F0AA         	movff	?___ftmul+1,_PI+7
  3664  003198  C0C8  F0AB         	movff	?___ftmul+2,_PI+8
  3665                           
  3666                           ;user.c: 364: PI.Saturated = 0;
  3667  00319C  0E00               	movlw	0
  3668  00319E  0100               	movlb	0	; () banked
  3669  0031A0  6FB9               	movwf	(_PI+22)& (0+255),b
  3670  0031A2  0E00               	movlw	0
  3671  0031A4  6FB8               	movwf	(_PI+21)& (0+255),b
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;user.c: 365: res = I_V_Set(0b10000111);
  3675  0031A6  0E87               	movlw	135
  3676  0031A8  EC72  F013         	call	_I_V_Set
  3677  0031AC  C0F6  F100         	movff	?_I_V_Set,start_CV@res
  3678  0031B0  C0F7  F101         	movff	?_I_V_Set+1,start_CV@res+1
  3679                           
  3680                           ;user.c: 366: if (res != OK)
  3681  0031B4  0101               	movlb	1	; () banked
  3682  0031B6  5100               	movf	start_CV@res& (0+255),w,b
  3683  0031B8  0101               	movlb	1	; () banked
  3684  0031BA  1101               	iorwf	(start_CV@res+1)& (0+255),w,b
  3685  0031BC  B4D8               	btfsc	status,2,c
  3686  0031BE  D006               	goto	l7612
  3687                           
  3688                           ; BSR set to: 1
  3689                           ;user.c: 367: {
  3690                           ;user.c: 368: return KO;
  3691  0031C0  0E00               	movlw	0
  3692  0031C2  0100               	movlb	0	; () banked
  3693  0031C4  6FFE               	movwf	(?_start_CV+1)& (0+255),b
  3694  0031C6  0E01               	movlw	1
  3695  0031C8  6FFD               	movwf	?_start_CV& (0+255),b
  3696                           
  3697                           ; BSR set to: 0
  3698  0031CA  0012               	return	
  3699  0031CC                     l7612:
  3700                           
  3701                           ;user.c: 369: }
  3702                           ;user.c: 371: return OK;
  3703  0031CC  0E00               	movlw	0
  3704  0031CE  0100               	movlb	0	; () banked
  3705  0031D0  6FFE               	movwf	(?_start_CV+1)& (0+255),b
  3706  0031D2  0E00               	movlw	0
  3707  0031D4  6FFD               	movwf	?_start_CV& (0+255),b
  3708  0031D6  0012               	return	
  3709  0031D8                     __end_of_start_CV:
  3710                           	opt stack 0
  3711                           tblptru	equ	0xFF8
  3712                           tblptrh	equ	0xFF7
  3713                           tblptrl	equ	0xFF6
  3714                           tablat	equ	0xFF5
  3715                           postinc0	equ	0xFEE
  3716                           wreg	equ	0xFE8
  3717                           indf1	equ	0xFE7
  3718                           postdec1	equ	0xFE5
  3719                           fsr1h	equ	0xFE2
  3720                           fsr1l	equ	0xFE1
  3721                           indf2	equ	0xFDF
  3722                           fsr2h	equ	0xFDA
  3723                           fsr2l	equ	0xFD9
  3724                           status	equ	0xFD8
  3725                           
  3726 ;; *************** function _start_CC *****************
  3727 ;; Defined at:
  3728 ;;		line 307 in file "user.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;		None
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;  res             2    0[BANK1 ] short 
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  2   67[BANK0 ] short 
  3735 ;; Registers used:
  3736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3742 ;;      Params:         0       2       0       0       0       0       0       0       0
  3743 ;;      Locals:         0       0       2       0       0       0       0       0       0
  3744 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3745 ;;      Totals:         0       2       2       0       0       0       0       0       0
  3746 ;;Total ram usage:        4 bytes
  3747 ;; Hardware stack levels used:    1
  3748 ;; Hardware stack levels required when called:   15
  3749 ;; This function calls:
  3750 ;;		_I_V_Set
  3751 ;; This function is called by:
  3752 ;;		_main
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           	psect	text11
  3757  0033A8                     __ptext11:
  3758                           	opt stack 0
  3759  0033A8                     _start_CC:
  3760                           	opt stack 15
  3761                           
  3762                           ;user.c: 309: short res;
  3763                           ;user.c: 311: PI.Setpoint = battery.charge.chg_Current;
  3764                           
  3765                           ; BSR set to: 0
  3766                           ;incstack = 0
  3767  0033A8  C18C  F0A9         	movff	_battery+19,_PI+6
  3768  0033AC  C18D  F0AA         	movff	_battery+20,_PI+7
  3769  0033B0  C18E  F0AB         	movff	_battery+21,_PI+8
  3770                           
  3771                           ;user.c: 312: PI.Saturated = 0;
  3772  0033B4  0E00               	movlw	0
  3773  0033B6  0100               	movlb	0	; () banked
  3774  0033B8  6FB9               	movwf	(_PI+22)& (0+255),b
  3775  0033BA  0E00               	movlw	0
  3776  0033BC  6FB8               	movwf	(_PI+21)& (0+255),b
  3777                           
  3778                           ; BSR set to: 0
  3779                           ;user.c: 313: res = I_V_Set(0b11010111);
  3780  0033BE  0ED7               	movlw	215
  3781  0033C0  EC72  F013         	call	_I_V_Set
  3782  0033C4  C0F6  F100         	movff	?_I_V_Set,start_CC@res
  3783  0033C8  C0F7  F101         	movff	?_I_V_Set+1,start_CC@res+1
  3784                           
  3785                           ;user.c: 314: if (res != OK)
  3786  0033CC  0101               	movlb	1	; () banked
  3787  0033CE  5100               	movf	start_CC@res& (0+255),w,b
  3788  0033D0  0101               	movlb	1	; () banked
  3789  0033D2  1101               	iorwf	(start_CC@res+1)& (0+255),w,b
  3790  0033D4  B4D8               	btfsc	status,2,c
  3791  0033D6  D006               	goto	l306
  3792                           
  3793                           ; BSR set to: 1
  3794                           ;user.c: 315: {
  3795                           ;user.c: 316: return KO;
  3796  0033D8  0E00               	movlw	0
  3797  0033DA  0100               	movlb	0	; () banked
  3798  0033DC  6FFE               	movwf	(?_start_CC+1)& (0+255),b
  3799  0033DE  0E01               	movlw	1
  3800  0033E0  6FFD               	movwf	?_start_CC& (0+255),b
  3801                           
  3802                           ; BSR set to: 0
  3803  0033E2  0012               	return	
  3804  0033E4                     l306:
  3805                           
  3806                           ; BSR set to: 1
  3807                           ;user.c: 317: }
  3808                           ;user.c: 318: charge_Time = seconds;
  3809  0033E4  C084  F088         	movff	_seconds,_charge_Time
  3810  0033E8  C085  F089         	movff	_seconds+1,_charge_Time+1
  3811  0033EC  C086  F08A         	movff	_seconds+2,_charge_Time+2
  3812                           
  3813                           ; BSR set to: 1
  3814                           ;user.c: 320: return OK;
  3815  0033F0  0E00               	movlw	0
  3816  0033F2  0100               	movlb	0	; () banked
  3817  0033F4  6FFE               	movwf	(?_start_CC+1)& (0+255),b
  3818  0033F6  0E00               	movlw	0
  3819  0033F8  6FFD               	movwf	?_start_CC& (0+255),b
  3820  0033FA  0012               	return	
  3821  0033FC                     __end_of_start_CC:
  3822                           	opt stack 0
  3823                           tblptru	equ	0xFF8
  3824                           tblptrh	equ	0xFF7
  3825                           tblptrl	equ	0xFF6
  3826                           tablat	equ	0xFF5
  3827                           postinc0	equ	0xFEE
  3828                           wreg	equ	0xFE8
  3829                           indf1	equ	0xFE7
  3830                           postdec1	equ	0xFE5
  3831                           fsr1h	equ	0xFE2
  3832                           fsr1l	equ	0xFE1
  3833                           indf2	equ	0xFDF
  3834                           fsr2h	equ	0xFDA
  3835                           fsr2l	equ	0xFD9
  3836                           status	equ	0xFD8
  3837                           
  3838 ;; *************** function _I_V_Set *****************
  3839 ;; Defined at:
  3840 ;;		line 106 in file "user.c"
  3841 ;; Parameters:    Size  Location     Type
  3842 ;;  channel         1    wreg     unsigned char 
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;  channel         1   62[BANK0 ] unsigned char 
  3845 ;;  count           2   65[BANK0 ] short 
  3846 ;;  res             2   63[BANK0 ] short 
  3847 ;; Return value:  Size  Location     Type
  3848 ;;                  2   60[BANK0 ] short 
  3849 ;; Registers used:
  3850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3856 ;;      Params:         0       2       0       0       0       0       0       0       0
  3857 ;;      Locals:         0       5       0       0       0       0       0       0       0
  3858 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3859 ;;      Totals:         0       7       0       0       0       0       0       0       0
  3860 ;;Total ram usage:        7 bytes
  3861 ;; Hardware stack levels used:    1
  3862 ;; Hardware stack levels required when called:   14
  3863 ;; This function calls:
  3864 ;;		_CalcPI
  3865 ;;		_V_Eval
  3866 ;;		___ftge
  3867 ;; This function is called by:
  3868 ;;		_start_Precondition
  3869 ;;		_verifie_Precondition
  3870 ;;		_start_CC
  3871 ;;		_verifie_Vbat
  3872 ;;		_start_CV
  3873 ;;		_verifie_Ibat
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	text12
  3878  0026E4                     __ptext12:
  3879                           	opt stack 0
  3880  0026E4                     _I_V_Set:
  3881                           	opt stack 15
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;incstack = 0
  3885                           ;I_V_Set@channel stored from wreg
  3886  0026E4  0100               	movlb	0	; () banked
  3887  0026E6  6FF8               	movwf	I_V_Set@channel& (0+255),b
  3888                           
  3889                           ;user.c: 108: short res;
  3890                           ;user.c: 109: short count = 0;
  3891  0026E8  0E00               	movlw	0
  3892  0026EA  0100               	movlb	0	; () banked
  3893  0026EC  6FFC               	movwf	(I_V_Set@count+1)& (0+255),b
  3894  0026EE  0E00               	movlw	0
  3895  0026F0  6FFB               	movwf	I_V_Set@count& (0+255),b
  3896  0026F2                     l7352:
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;user.c: 112: {
  3900                           ;user.c: 113: res = V_Eval(channel, &PI.Feedback);
  3901  0026F2  0EAC               	movlw	low (_PI+9)
  3902  0026F4  0100               	movlb	0	; () banked
  3903  0026F6  6FF0               	movwf	V_Eval@voltage& (0+255),b
  3904  0026F8  0E00               	movlw	high (_PI+9)
  3905  0026FA  0100               	movlb	0	; () banked
  3906  0026FC  6FF1               	movwf	(V_Eval@voltage+1)& (0+255),b
  3907  0026FE  0100               	movlb	0	; () banked
  3908  002700  51F8               	movf	I_V_Set@channel& (0+255),w,b
  3909  002702  EC69  F011         	call	_V_Eval
  3910  002706  C0F0  F0F9         	movff	?_V_Eval,I_V_Set@res
  3911  00270A  C0F1  F0FA         	movff	?_V_Eval+1,I_V_Set@res+1
  3912                           
  3913                           ;user.c: 114: if (res != OK)
  3914  00270E  0100               	movlb	0	; () banked
  3915  002710  51F9               	movf	I_V_Set@res& (0+255),w,b
  3916  002712  0100               	movlb	0	; () banked
  3917  002714  11FA               	iorwf	(I_V_Set@res+1)& (0+255),w,b
  3918  002716  B4D8               	btfsc	status,2,c
  3919  002718  D006               	goto	l7360
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;user.c: 115: {
  3923                           ;user.c: 116: return KO;
  3924  00271A  0E00               	movlw	0
  3925  00271C  0100               	movlb	0	; () banked
  3926  00271E  6FF7               	movwf	(?_I_V_Set+1)& (0+255),b
  3927  002720  0E01               	movlw	1
  3928  002722  6FF6               	movwf	?_I_V_Set& (0+255),b
  3929                           
  3930                           ; BSR set to: 0
  3931  002724  0012               	return	
  3932  002726                     l7360:
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;user.c: 117: }
  3936                           ;user.c: 118: CalcPI(&PI);
  3937  002726  0EA3               	movlw	low _PI
  3938  002728  0100               	movlb	0	; () banked
  3939  00272A  6FF0               	movwf	CalcPI@PIdata& (0+255),b
  3940  00272C  0E00               	movlw	high _PI
  3941  00272E  0100               	movlb	0	; () banked
  3942  002730  6FF1               	movwf	(CalcPI@PIdata+1)& (0+255),b
  3943  002732  EC5B  F002         	call	_CalcPI	;wreg free
  3944                           
  3945                           ;user.c: 121: count++;
  3946  002736  0100               	movlb	0	; () banked
  3947  002738  4BFB               	infsnz	I_V_Set@count& (0+255),f,b
  3948  00273A  2BFC               	incf	(I_V_Set@count+1)& (0+255),f,b
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;user.c: 123: } while (((PI.Error > 2) || (PI.Error < -1*2)) && (count < 5));
  3952  00273C  0E00               	movlw	0
  3953  00273E  0100               	movlb	0	; () banked
  3954  002740  6FD5               	movwf	___ftge@ff1& (0+255),b
  3955  002742  0E00               	movlw	0
  3956  002744  0100               	movlb	0	; () banked
  3957  002746  6FD6               	movwf	(___ftge@ff1+1)& (0+255),b
  3958  002748  0E40               	movlw	64
  3959  00274A  0100               	movlb	0	; () banked
  3960  00274C  6FD7               	movwf	(___ftge@ff1+2)& (0+255),b
  3961  00274E  C0AF  F0D8         	movff	_PI+12,___ftge@ff2
  3962  002752  C0B0  F0D9         	movff	_PI+13,___ftge@ff2+1
  3963  002756  C0B1  F0DA         	movff	_PI+14,___ftge@ff2+2
  3964  00275A  ECD7  F013         	call	___ftge	;wreg free
  3965  00275E  0100               	movlb	0	; () banked
  3966  002760  A0D8               	btfss	status,0,c
  3967  002762  D014               	goto	l7368
  3968                           
  3969                           ; BSR set to: 0
  3970  002764  C0AF  F0D5         	movff	_PI+12,___ftge@ff1
  3971  002768  C0B0  F0D6         	movff	_PI+13,___ftge@ff1+1
  3972  00276C  C0B1  F0D7         	movff	_PI+14,___ftge@ff1+2
  3973  002770  0E00               	movlw	0
  3974  002772  0100               	movlb	0	; () banked
  3975  002774  6FD8               	movwf	___ftge@ff2& (0+255),b
  3976  002776  0E00               	movlw	0
  3977  002778  0100               	movlb	0	; () banked
  3978  00277A  6FD9               	movwf	(___ftge@ff2+1)& (0+255),b
  3979  00277C  0EC0               	movlw	192
  3980  00277E  0100               	movlb	0	; () banked
  3981  002780  6FDA               	movwf	(___ftge@ff2+2)& (0+255),b
  3982  002782  ECD7  F013         	call	___ftge	;wreg free
  3983  002786  0100               	movlb	0	; () banked
  3984  002788  B0D8               	btfsc	status,0,c
  3985  00278A  D00B               	goto	l7370
  3986  00278C                     l7368:
  3987                           
  3988                           ; BSR set to: 0
  3989  00278C  0100               	movlb	0	; () banked
  3990  00278E  BFFC               	btfsc	(I_V_Set@count+1)& (0+255),7,b
  3991  002790  D7B0               	goto	l7352
  3992  002792  0100               	movlb	0	; () banked
  3993  002794  51FC               	movf	(I_V_Set@count+1)& (0+255),w,b
  3994  002796  E105               	bnz	l7370
  3995  002798  0E05               	movlw	5
  3996  00279A  0100               	movlb	0	; () banked
  3997  00279C  5DFB               	subwf	I_V_Set@count& (0+255),w,b
  3998  00279E  A0D8               	btfss	status,0,c
  3999  0027A0  D7A8               	goto	l7352
  4000  0027A2                     l7370:
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;user.c: 125: return OK;
  4004  0027A2  0E00               	movlw	0
  4005  0027A4  0100               	movlb	0	; () banked
  4006  0027A6  6FF7               	movwf	(?_I_V_Set+1)& (0+255),b
  4007  0027A8  0E00               	movlw	0
  4008  0027AA  6FF6               	movwf	?_I_V_Set& (0+255),b
  4009  0027AC  0012               	return	
  4010  0027AE                     __end_of_I_V_Set:
  4011                           	opt stack 0
  4012                           tblptru	equ	0xFF8
  4013                           tblptrh	equ	0xFF7
  4014                           tblptrl	equ	0xFF6
  4015                           tablat	equ	0xFF5
  4016                           postinc0	equ	0xFEE
  4017                           wreg	equ	0xFE8
  4018                           indf1	equ	0xFE7
  4019                           postdec1	equ	0xFE5
  4020                           fsr1h	equ	0xFE2
  4021                           fsr1l	equ	0xFE1
  4022                           indf2	equ	0xFDF
  4023                           fsr2h	equ	0xFDA
  4024                           fsr2l	equ	0xFD9
  4025                           status	equ	0xFD8
  4026                           
  4027 ;; *************** function _CalcPI *****************
  4028 ;; Defined at:
  4029 ;;		line 129 in file "user.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;  PIdata          2   54[BANK0 ] PTR struct .
  4032 ;;		 -> PI(23), 
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;		None
  4035 ;; Return value:  Size  Location     Type
  4036 ;;		None               void
  4037 ;; Registers used:
  4038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4039 ;; Tracked objects:
  4040 ;;		On entry : 0/0
  4041 ;;		On exit  : 0/0
  4042 ;;		Unchanged: 0/0
  4043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4044 ;;      Params:         0       2       0       0       0       0       0       0       0
  4045 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4046 ;;      Temps:          0       3       0       0       0       0       0       0       0
  4047 ;;      Totals:         0       5       0       0       0       0       0       0       0
  4048 ;;Total ram usage:        5 bytes
  4049 ;; Hardware stack levels used:    1
  4050 ;; Hardware stack levels required when called:   13
  4051 ;; This function calls:
  4052 ;;		___awtoft
  4053 ;;		___ftadd
  4054 ;;		___ftdiv
  4055 ;;		___ftge
  4056 ;;		___ftmul
  4057 ;;		___ftneg
  4058 ;; This function is called by:
  4059 ;;		_I_V_Set
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           	psect	text13
  4064  0004B6                     __ptext13:
  4065                           	opt stack 0
  4066  0004B6                     _CalcPI:
  4067                           	opt stack 15
  4068                           
  4069                           ;user.c: 131: PIdata->Error = PIdata->Setpoint - PIdata->Feedback;
  4070                           
  4071                           ; BSR set to: 0
  4072                           ;incstack = 0
  4073  0004B6  0100               	movlb	0	; () banked
  4074  0004B8  EE20 F009          	lfsr	2,9
  4075  0004BC  51F0               	movf	CalcPI@PIdata& (0+255),w,b
  4076  0004BE  26D9               	addwf	fsr2l,f,c
  4077  0004C0  51F1               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  4078  0004C2  22DA               	addwfc	fsr2h,f,c
  4079  0004C4  CFDE F0BA          	movff	postinc2,___ftneg@f1
  4080  0004C8  CFDE F0BB          	movff	postinc2,___ftneg@f1+1
  4081  0004CC  CFDD F0BC          	movff	postdec2,___ftneg@f1+2
  4082  0004D0  EC06  F01B         	call	___ftneg	;wreg free
  4083  0004D4  C0BA  F0D5         	movff	?___ftneg,___ftadd@f1
  4084  0004D8  C0BB  F0D6         	movff	?___ftneg+1,___ftadd@f1+1
  4085  0004DC  C0BC  F0D7         	movff	?___ftneg+2,___ftadd@f1+2
  4086  0004E0  0100               	movlb	0	; () banked
  4087  0004E2  EE20 F006          	lfsr	2,6
  4088  0004E6  51F0               	movf	CalcPI@PIdata& (0+255),w,b
  4089  0004E8  26D9               	addwf	fsr2l,f,c
  4090  0004EA  51F1               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  4091  0004EC  22DA               	addwfc	fsr2h,f,c
  4092  0004EE  CFDE F0D8          	movff	postinc2,___ftadd@f2
  4093  0004F2  CFDE F0D9          	movff	postinc2,___ftadd@f2+1
  4094  0004F6  CFDD F0DA          	movff	postdec2,___ftadd@f2+2
  4095  0004FA  EC8E  F005         	call	___ftadd	;wreg free
  4096  0004FE  0100               	movlb	0	; () banked
  4097  000500  EE20 F00C          	lfsr	2,12
  4098  000504  51F0               	movf	CalcPI@PIdata& (0+255),w,b
  4099  000506  26D9               	addwf	fsr2l,f,c
  4100  000508  51F1               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  4101  00050A  22DA               	addwfc	fsr2h,f,c
  4102  00050C  C0D5  FFDE         	movff	?___ftadd,postinc2
  4103  000510  C0D6  FFDE         	movff	?___ftadd+1,postinc2
  4104  000514  C0D7  FFDE         	movff	?___ftadd+2,postinc2
  4105                           
  4106                           ;user.c: 135: if ((PIdata->Error > 2) || (PIdata->Error < -2))
  4107  000518  0E00               	movlw	0
  4108  00051A  0100               	movlb	0	; () banked
  4109  00051C  6FD5               	movwf	___ftge@ff1& (0+255),b
  4110  00051E  0E00               	movlw	0
  4111  000520  0100               	movlb	0	; () banked
  4112  000522  6FD6               	movwf	(___ftge@ff1+1)& (0+255),b
  4113  000524  0E40               	movlw	64
  4114  000526  0100               	movlb	0	; () banked
  4115  000528  6FD7               	movwf	(___ftge@ff1+2)& (0+255),b
  4116  00052A  0100               	movlb	0	; () banked
  4117  00052C  EE20 F00C          	lfsr	2,12
  4118  000530  51F0               	movf	CalcPI@PIdata& (0+255),w,b
  4119  000532  26D9               	addwf	fsr2l,f,c
  4120  000534  51F1               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  4121  000536  22DA               	addwfc	fsr2h,f,c
  4122  000538  CFDE F0D8          	movff	postinc2,___ftge@ff2
  4123  00053C  CFDE F0D9          	movff	postinc2,___ftge@ff2+1
  4124  000540  CFDD F0DA          	movff	postdec2,___ftge@ff2+2
  4125  000544  ECD7  F013         	call	___ftge	;wreg free
  4126  000548  0100               	movlb	0	; () banked
  4127  00054A  A0D8               	btfss	status,0,c
  4128  00054C  D01B               	goto	l6884
  4129                           
  4130                           ; BSR set to: 0
  4131  00054E  0100               	movlb	0	; () banked
  4132  000550  EE20 F00C          	lfsr	2,12
  4133  000554  51F0               	movf	CalcPI@PIdata& (0+255),w,b
  4134  000556  26D9               	addwf	fsr2l,f,c
  4135  000558  51F1               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  4136  00055A  22DA               	addwfc	fsr2h,f,c
  4137  00055C  CFDE F0D5          	movff	postinc2,___ftge@ff1
  4138  000560  CFDE F0D6          	movff	postinc2,___ftge@ff1+1
  4139  000564  CFDD F0D7          	movff	postdec2,___ftge@ff1+2
  4140  000568  0E00               	movlw	0
  4141  00056A  0100               	movlb	0	; () banked
  4142  00056C  6FD8               	movwf	___ftge@ff2& (0+255),b
  4143  00056E  0E00               	movlw	0
  4144  000570  0100               	movlb	0	; () banked
  4145  000572  6FD9               	movwf	(___ftge@ff2+1)& (0+255),b
  4146  000574  0EC0               	movlw	192
  4147  000576  0100               	movlb	0	; () banked
  4148  000578  6FDA               	movwf	(___ftge@ff2+2)& (0+255),b
  4149  00057A  ECD7  F013         	call	___ftge	;wreg free
  4150  00057E  0100               	movlb	0	; () banked
  4151  000580  B0D8               	btfsc	status,0,c
  4152  000582  0012               	return	
  4153  000584                     l6884:
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;user.c: 136: {
  4157                           ;user.c: 139: if (PIdata->Saturated == 0)
  4158  000584  0100               	movlb	0	; () banked
  4159  000586  EE20 F015          	lfsr	2,21
  4160  00058A  51F0               	movf	CalcPI@PIdata& (0+255),w,b
  4161  00058C  26D9               	addwf	fsr2l,f,c
  4162  00058E  51F1               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  4163  000590  22DA               	addwfc	fsr2h,f,c
  4164  000592  50DE               	movf	postinc2,w,c
  4165  000594  10DE               	iorwf	postinc2,w,c
  4166  000596  A4D8               	btfss	status,2,c
  4167  000598  D097               	goto	l252
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;user.c: 140: {
  4171                           ;user.c: 144: if (PIdata->Error > 0)
  4172  00059A  0E00               	movlw	0
  4173  00059C  0100               	movlb	0	; () banked
  4174  00059E  6FD5               	movwf	___ftge@ff1& (0+255),b
  4175  0005A0  0E00               	movlw	0
  4176  0005A2  0100               	movlb	0	; () banked
  4177  0005A4  6FD6               	movwf	(___ftge@ff1+1)& (0+255),b
  4178  0005A6  0E00               	movlw	0
  4179  0005A8  0100               	movlb	0	; () banked
  4180  0005AA  6FD7               	movwf	(___ftge@ff1+2)& (0+255),b
  4181  0005AC  0100               	movlb	0	; () banked
  4182  0005AE  EE20 F00C          	lfsr	2,12
  4183  0005B2  51F0               	movf	CalcPI@PIdata& (0+255),w,b
  4184  0005B4  26D9               	addwf	fsr2l,f,c
  4185  0005B6  51F1               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  4186  0005B8  22DA               	addwfc	fsr2h,f,c
  4187  0005BA  CFDE F0D8          	movff	postinc2,___ftge@ff2
  4188  0005BE  CFDE F0D9          	movff	postinc2,___ftge@ff2+1
  4189  0005C2  CFDD F0DA          	movff	postdec2,___ftge@ff2+2
  4190  0005C6  ECD7  F013         	call	___ftge	;wreg free
  4191  0005CA  0100               	movlb	0	; () banked
  4192  0005CC  B0D8               	btfsc	status,0,c
  4193  0005CE  D038               	goto	l6892
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;user.c: 145: {
  4197                           ;user.c: 146: if (PIdata->Integral < 32000)
  4198  0005D0  0100               	movlb	0	; () banked
  4199  0005D2  EE20 F00F          	lfsr	2,15
  4200  0005D6  51F0               	movf	CalcPI@PIdata& (0+255),w,b
  4201  0005D8  26D9               	addwf	fsr2l,f,c
  4202  0005DA  51F1               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  4203  0005DC  22DA               	addwfc	fsr2h,f,c
  4204  0005DE  CFDE F0D5          	movff	postinc2,___ftge@ff1
  4205  0005E2  CFDE F0D6          	movff	postinc2,___ftge@ff1+1
  4206  0005E6  CFDD F0D7          	movff	postdec2,___ftge@ff1+2
  4207  0005EA  0E00               	movlw	0
  4208  0005EC  0100               	movlb	0	; () banked
  4209  0005EE  6FD8               	movwf	___ftge@ff2& (0+255),b
  4210  0005F0  0EFA               	movlw	250
  4211  0005F2  0100               	movlb	0	; () banked
  4212  0005F4  6FD9               	movwf	(___ftge@ff2+1)& (0+255),b
  4213  0005F6  0E46               	movlw	70
  4214  0005F8  0100               	movlb	0	; () banked
  4215  0005FA  6FDA               	movwf	(___ftge@ff2+2)& (0+255),b
  4216  0005FC  ECD7  F013         	call	___ftge	;wreg free
  4217  000600  0100               	movlb	0	; () banked
  4218  000602  B0D8               	btfsc	status,0,c
  4219  000604  D061               	goto	l252
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;user.c: 147: PIdata->Integral += PIdata->Error;
  4223  000606  0100               	movlb	0	; () banked
  4224  000608  EE20 F00F          	lfsr	2,15
  4225  00060C  51F0               	movf	CalcPI@PIdata& (0+255),w,b
  4226  00060E  26D9               	addwf	fsr2l,f,c
  4227  000610  51F1               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  4228  000612  22DA               	addwfc	fsr2h,f,c
  4229  000614  CFDE F0D5          	movff	postinc2,___ftadd@f1
  4230  000618  CFDE F0D6          	movff	postinc2,___ftadd@f1+1
  4231  00061C  CFDD F0D7          	movff	postdec2,___ftadd@f1+2
  4232  000620  0100               	movlb	0	; () banked
  4233  000622  EE20 F00C          	lfsr	2,12
  4234  000626  51F0               	movf	CalcPI@PIdata& (0+255),w,b
  4235  000628  26D9               	addwf	fsr2l,f,c
  4236  00062A  51F1               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  4237  00062C  22DA               	addwfc	fsr2h,f,c
  4238  00062E  CFDE F0D8          	movff	postinc2,___ftadd@f2
  4239  000632  CFDE F0D9          	movff	postinc2,___ftadd@f2+1
  4240  000636  CFDD F0DA          	movff	postdec2,___ftadd@f2+2
  4241  00063A  EC8E  F005         	call	___ftadd	;wreg free
  4242  00063E  D037               	goto	L40
  4243  000640                     l6892:
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;user.c: 149: else
  4247                           ;user.c: 150: {
  4248                           ;user.c: 151: if (PIdata->Integral > -32000)
  4249  000640  0E00               	movlw	0
  4250  000642  0100               	movlb	0	; () banked
  4251  000644  6FD5               	movwf	___ftge@ff1& (0+255),b
  4252  000646  0EFA               	movlw	250
  4253  000648  0100               	movlb	0	; () banked
  4254  00064A  6FD6               	movwf	(___ftge@ff1+1)& (0+255),b
  4255  00064C  0EC6               	movlw	198
  4256  00064E  0100               	movlb	0	; () banked
  4257  000650  6FD7               	movwf	(___ftge@ff1+2)& (0+255),b
  4258  000652  0100               	movlb	0	; () banked
  4259  000654  EE20 F00F          	lfsr	2,15
  4260  000658  51F0               	movf	CalcPI@PIdata& (0+255),w,b
  4261  00065A  26D9               	addwf	fsr2l,f,c
  4262  00065C  51F1               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  4263  00065E  22DA               	addwfc	fsr2h,f,c
  4264  000660  CFDE F0D8          	movff	postinc2,___ftge@ff2
  4265  000664  CFDE F0D9          	movff	postinc2,___ftge@ff2+1
  4266  000668  CFDD F0DA          	movff	postdec2,___ftge@ff2+2
  4267  00066C  ECD7  F013         	call	___ftge	;wreg free
  4268  000670  0100               	movlb	0	; () banked
  4269  000672  B0D8               	btfsc	status,0,c
  4270  000674  D029               	goto	l252
  4271                           
  4272                           ; BSR set to: 0
  4273                           ;user.c: 153: PIdata->Integral += PIdata->Error;
  4274  000676  0100               	movlb	0	; () banked
  4275  000678  EE20 F00F          	lfsr	2,15
  4276  00067C  51F0               	movf	CalcPI@PIdata& (0+255),w,b
  4277  00067E  26D9               	addwf	fsr2l,f,c
  4278  000680  51F1               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  4279  000682  22DA               	addwfc	fsr2h,f,c
  4280  000684  CFDE F0D5          	movff	postinc2,___ftadd@f1
  4281  000688  CFDE F0D6          	movff	postinc2,___ftadd@f1+1
  4282  00068C  CFDD F0D7          	movff	postdec2,___ftadd@f1+2
  4283  000690  0100               	movlb	0	; () banked
  4284  000692  EE20 F00C          	lfsr	2,12
  4285  000696  51F0               	movf	CalcPI@PIdata& (0+255),w,b
  4286  000698  26D9               	addwf	fsr2l,f,c
  4287  00069A  51F1               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  4288  00069C  22DA               	addwfc	fsr2h,f,c
  4289  00069E  CFDE F0D8          	movff	postinc2,___ftadd@f2
  4290  0006A2  CFDE F0D9          	movff	postinc2,___ftadd@f2+1
  4291  0006A6  CFDD F0DA          	movff	postdec2,___ftadd@f2+2
  4292  0006AA  EC8E  F005         	call	___ftadd	;wreg free
  4293  0006AE                     L40:
  4294  0006AE  0100               	movlb	0	; () banked
  4295  0006B0  EE20 F00F          	lfsr	2,15
  4296  0006B4  51F0               	movf	CalcPI@PIdata& (0+255),w,b
  4297  0006B6  26D9               	addwf	fsr2l,f,c
  4298  0006B8  51F1               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  4299  0006BA  22DA               	addwfc	fsr2h,f,c
  4300  0006BC  C0D5  FFDE         	movff	?___ftadd,postinc2
  4301  0006C0  C0D6  FFDE         	movff	?___ftadd+1,postinc2
  4302  0006C4  C0D7  FFDE         	movff	?___ftadd+2,postinc2
  4303  0006C8                     l252:
  4304                           
  4305                           ; BSR set to: 0
  4306                           ;user.c: 154: }
  4307                           ;user.c: 155: }
  4308                           ;user.c: 157: PIdata->Output = (PIdata->Error * PIdata->Kp + PIdata->Integral * PIdata->
      +                          Ki)/256;
  4309  0006C8  0100               	movlb	0	; () banked
  4310  0006CA  EE20 F00F          	lfsr	2,15
  4311  0006CE  51F0               	movf	CalcPI@PIdata& (0+255),w,b
  4312  0006D0  26D9               	addwf	fsr2l,f,c
  4313  0006D2  51F1               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  4314  0006D4  22DA               	addwfc	fsr2h,f,c
  4315  0006D6  CFDE F0C9          	movff	postinc2,___ftmul@f2
  4316  0006DA  CFDE F0CA          	movff	postinc2,___ftmul@f2+1
  4317  0006DE  CFDD F0CB          	movff	postdec2,___ftmul@f2+2
  4318  0006E2  0100               	movlb	0	; () banked
  4319  0006E4  EE20 F002          	lfsr	2,2
  4320  0006E8  51F0               	movf	CalcPI@PIdata& (0+255),w,b
  4321  0006EA  26D9               	addwf	fsr2l,f,c
  4322  0006EC  51F1               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  4323  0006EE  22DA               	addwfc	fsr2h,f,c
  4324  0006F0  CFDE F0C2          	movff	postinc2,___awtoft@c
  4325  0006F4  CFDD F0C3          	movff	postdec2,___awtoft@c+1
  4326  0006F8  EC23  F01A         	call	___awtoft	;wreg free
  4327  0006FC  C0C2  F0C6         	movff	?___awtoft,___ftmul@f1
  4328  000700  C0C3  F0C7         	movff	?___awtoft+1,___ftmul@f1+1
  4329  000704  C0C4  F0C8         	movff	?___awtoft+2,___ftmul@f1+2
  4330  000708  ECD2  F009         	call	___ftmul	;wreg free
  4331  00070C  C0C6  F0D8         	movff	?___ftmul,___ftadd@f2
  4332  000710  C0C7  F0D9         	movff	?___ftmul+1,___ftadd@f2+1
  4333  000714  C0C8  F0DA         	movff	?___ftmul+2,___ftadd@f2+2
  4334  000718  0100               	movlb	0	; () banked
  4335  00071A  EE20 F00C          	lfsr	2,12
  4336  00071E  51F0               	movf	CalcPI@PIdata& (0+255),w,b
  4337  000720  26D9               	addwf	fsr2l,f,c
  4338  000722  51F1               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  4339  000724  22DA               	addwfc	fsr2h,f,c
  4340  000726  CFDE F0C9          	movff	postinc2,___ftmul@f2
  4341  00072A  CFDE F0CA          	movff	postinc2,___ftmul@f2+1
  4342  00072E  CFDD F0CB          	movff	postdec2,___ftmul@f2+2
  4343  000732  C0F0  FFD9         	movff	CalcPI@PIdata,fsr2l
  4344  000736  C0F1  FFDA         	movff	CalcPI@PIdata+1,fsr2h
  4345  00073A  CFDE F0C2          	movff	postinc2,___awtoft@c
  4346  00073E  CFDD F0C3          	movff	postdec2,___awtoft@c+1
  4347  000742  EC23  F01A         	call	___awtoft	;wreg free
  4348  000746  C0C2  F0C6         	movff	?___awtoft,___ftmul@f1
  4349  00074A  C0C3  F0C7         	movff	?___awtoft+1,___ftmul@f1+1
  4350  00074E  C0C4  F0C8         	movff	?___awtoft+2,___ftmul@f1+2
  4351  000752  ECD2  F009         	call	___ftmul	;wreg free
  4352  000756  C0C6  F0D5         	movff	?___ftmul,___ftadd@f1
  4353  00075A  C0C7  F0D6         	movff	?___ftmul+1,___ftadd@f1+1
  4354  00075E  C0C8  F0D7         	movff	?___ftmul+2,___ftadd@f1+2
  4355  000762  EC8E  F005         	call	___ftadd	;wreg free
  4356  000766  C0D5  F0E1         	movff	?___ftadd,___ftdiv@f1
  4357  00076A  C0D6  F0E2         	movff	?___ftadd+1,___ftdiv@f1+1
  4358  00076E  C0D7  F0E3         	movff	?___ftadd+2,___ftdiv@f1+2
  4359  000772  0E00               	movlw	0
  4360  000774  0100               	movlb	0	; () banked
  4361  000776  6FE4               	movwf	___ftdiv@f2& (0+255),b
  4362  000778  0E80               	movlw	128
  4363  00077A  0100               	movlb	0	; () banked
  4364  00077C  6FE5               	movwf	(___ftdiv@f2+1)& (0+255),b
  4365  00077E  0E43               	movlw	67
  4366  000780  0100               	movlb	0	; () banked
  4367  000782  6FE6               	movwf	(___ftdiv@f2+2)& (0+255),b
  4368  000784  EC2D  F00B         	call	___ftdiv	;wreg free
  4369  000788  0100               	movlb	0	; () banked
  4370  00078A  EE20 F012          	lfsr	2,18
  4371  00078E  51F0               	movf	CalcPI@PIdata& (0+255),w,b
  4372  000790  26D9               	addwf	fsr2l,f,c
  4373  000792  51F1               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  4374  000794  22DA               	addwfc	fsr2h,f,c
  4375  000796  C0E1  FFDE         	movff	?___ftdiv,postinc2
  4376  00079A  C0E2  FFDE         	movff	?___ftdiv+1,postinc2
  4377  00079E  C0E3  FFDE         	movff	?___ftdiv+2,postinc2
  4378                           
  4379                           ;user.c: 161: if (PIdata->Output > PIdata->OutMax)
  4380  0007A2  0100               	movlb	0	; () banked
  4381  0007A4  EE20 F004          	lfsr	2,4
  4382  0007A8  51F0               	movf	CalcPI@PIdata& (0+255),w,b
  4383  0007AA  26D9               	addwf	fsr2l,f,c
  4384  0007AC  51F1               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  4385  0007AE  22DA               	addwfc	fsr2h,f,c
  4386  0007B0  CFDE F0C2          	movff	postinc2,___awtoft@c
  4387  0007B4  CFDD F0C3          	movff	postdec2,___awtoft@c+1
  4388  0007B8  EC23  F01A         	call	___awtoft	;wreg free
  4389  0007BC  C0C2  F0D5         	movff	?___awtoft,___ftge@ff1
  4390  0007C0  C0C3  F0D6         	movff	?___awtoft+1,___ftge@ff1+1
  4391  0007C4  C0C4  F0D7         	movff	?___awtoft+2,___ftge@ff1+2
  4392  0007C8  0100               	movlb	0	; () banked
  4393  0007CA  EE20 F012          	lfsr	2,18
  4394  0007CE  51F0               	movf	CalcPI@PIdata& (0+255),w,b
  4395  0007D0  26D9               	addwf	fsr2l,f,c
  4396  0007D2  51F1               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  4397  0007D4  22DA               	addwfc	fsr2h,f,c
  4398  0007D6  CFDE F0D8          	movff	postinc2,___ftge@ff2
  4399  0007DA  CFDE F0D9          	movff	postinc2,___ftge@ff2+1
  4400  0007DE  CFDD F0DA          	movff	postdec2,___ftge@ff2+2
  4401  0007E2  ECD7  F013         	call	___ftge	;wreg free
  4402  0007E6  0100               	movlb	0	; () banked
  4403  0007E8  B0D8               	btfsc	status,0,c
  4404  0007EA  D026               	goto	l6900
  4405                           
  4406                           ; BSR set to: 0
  4407                           ;user.c: 162: {
  4408                           ;user.c: 163: PIdata->Saturated = 1;
  4409  0007EC  0100               	movlb	0	; () banked
  4410  0007EE  EE20 F015          	lfsr	2,21
  4411  0007F2  51F0               	movf	CalcPI@PIdata& (0+255),w,b
  4412  0007F4  26D9               	addwf	fsr2l,f,c
  4413  0007F6  51F1               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  4414  0007F8  22DA               	addwfc	fsr2h,f,c
  4415  0007FA  0E01               	movlw	1
  4416  0007FC  6EDE               	movwf	postinc2,c
  4417  0007FE  0E00               	movlw	0
  4418  000800  6EDD               	movwf	postdec2,c
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;user.c: 164: PIdata->Output = PIdata->OutMax;
  4422  000802  0100               	movlb	0	; () banked
  4423  000804  EE20 F004          	lfsr	2,4
  4424  000808  51F0               	movf	CalcPI@PIdata& (0+255),w,b
  4425  00080A  26D9               	addwf	fsr2l,f,c
  4426  00080C  51F1               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  4427  00080E  22DA               	addwfc	fsr2h,f,c
  4428  000810  CFDE F0C2          	movff	postinc2,___awtoft@c
  4429  000814  CFDD F0C3          	movff	postdec2,___awtoft@c+1
  4430  000818  EC23  F01A         	call	___awtoft	;wreg free
  4431  00081C  0100               	movlb	0	; () banked
  4432  00081E  EE20 F012          	lfsr	2,18
  4433  000822  51F0               	movf	CalcPI@PIdata& (0+255),w,b
  4434  000824  26D9               	addwf	fsr2l,f,c
  4435  000826  51F1               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  4436  000828  22DA               	addwfc	fsr2h,f,c
  4437  00082A  C0C2  FFDE         	movff	?___awtoft,postinc2
  4438  00082E  C0C3  FFDE         	movff	?___awtoft+1,postinc2
  4439  000832  C0C4  FFDE         	movff	?___awtoft+2,postinc2
  4440                           
  4441                           ;user.c: 165: }
  4442  000836  0012               	return	
  4443  000838                     l6900:
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;user.c: 166: else if (PIdata->Output < 0)
  4447  000838  0100               	movlb	0	; () banked
  4448  00083A  EE20 F012          	lfsr	2,18
  4449  00083E  51F0               	movf	CalcPI@PIdata& (0+255),w,b
  4450  000840  26D9               	addwf	fsr2l,f,c
  4451  000842  51F1               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  4452  000844  22DA               	addwfc	fsr2h,f,c
  4453  000846  0E02               	movlw	2
  4454  000848  AEDB               	btfss	plusw2,7,c
  4455  00084A  D019               	goto	l6904
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;user.c: 167: {
  4459                           ;user.c: 168: PIdata->Saturated = 1;
  4460  00084C  0100               	movlb	0	; () banked
  4461  00084E  EE20 F015          	lfsr	2,21
  4462  000852  51F0               	movf	CalcPI@PIdata& (0+255),w,b
  4463  000854  26D9               	addwf	fsr2l,f,c
  4464  000856  51F1               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  4465  000858  22DA               	addwfc	fsr2h,f,c
  4466  00085A  0E01               	movlw	1
  4467  00085C  6EDE               	movwf	postinc2,c
  4468  00085E  0E00               	movlw	0
  4469  000860  6EDD               	movwf	postdec2,c
  4470                           
  4471                           ;user.c: 169: PIdata->Output = 0;
  4472  000862  0100               	movlb	0	; () banked
  4473  000864  EE20 F012          	lfsr	2,18
  4474  000868  51F0               	movf	CalcPI@PIdata& (0+255),w,b
  4475  00086A  26D9               	addwf	fsr2l,f,c
  4476  00086C  51F1               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  4477  00086E  22DA               	addwfc	fsr2h,f,c
  4478  000870  0E00               	movlw	0
  4479  000872  6EDE               	movwf	postinc2,c
  4480  000874  0E00               	movlw	0
  4481  000876  6EDE               	movwf	postinc2,c
  4482  000878  0E00               	movlw	0
  4483  00087A  6EDE               	movwf	postinc2,c
  4484                           
  4485                           ;user.c: 170: }
  4486  00087C  0012               	return	
  4487  00087E                     l6904:
  4488                           
  4489                           ; BSR set to: 0
  4490                           ;user.c: 171: else
  4491                           ;user.c: 172: PIdata->Saturated = 0;
  4492  00087E  0100               	movlb	0	; () banked
  4493  000880  EE20 F015          	lfsr	2,21
  4494  000884  51F0               	movf	CalcPI@PIdata& (0+255),w,b
  4495  000886  26D9               	addwf	fsr2l,f,c
  4496  000888  51F1               	movf	(CalcPI@PIdata+1)& (0+255),w,b
  4497  00088A  22DA               	addwfc	fsr2h,f,c
  4498  00088C  0E00               	movlw	0
  4499  00088E  6EDE               	movwf	postinc2,c
  4500  000890  0E00               	movlw	0
  4501  000892  6EDD               	movwf	postdec2,c
  4502                           
  4503                           ; BSR set to: 0
  4504                           
  4505                           ; BSR set to: 0
  4506  000894  0012               	return	
  4507  000896                     __end_of_CalcPI:
  4508                           	opt stack 0
  4509                           tblptru	equ	0xFF8
  4510                           tblptrh	equ	0xFF7
  4511                           tblptrl	equ	0xFF6
  4512                           tablat	equ	0xFF5
  4513                           postinc0	equ	0xFEE
  4514                           wreg	equ	0xFE8
  4515                           indf1	equ	0xFE7
  4516                           postdec1	equ	0xFE5
  4517                           fsr1h	equ	0xFE2
  4518                           fsr1l	equ	0xFE1
  4519                           indf2	equ	0xFDF
  4520                           postinc2	equ	0xFDE
  4521                           postdec2	equ	0xFDD
  4522                           plusw2	equ	0xFDB
  4523                           fsr2h	equ	0xFDA
  4524                           fsr2l	equ	0xFD9
  4525                           status	equ	0xFD8
  4526                           
  4527 ;; *************** function ___ftneg *****************
  4528 ;; Defined at:
  4529 ;;		line 15 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\ftneg.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;  f1              3    0[BANK0 ] float 
  4532 ;; Auto vars:     Size  Location     Type
  4533 ;;		None
  4534 ;; Return value:  Size  Location     Type
  4535 ;;                  3    0[BANK0 ] float 
  4536 ;; Registers used:
  4537 ;;		wreg, status,2, status,0
  4538 ;; Tracked objects:
  4539 ;;		On entry : 0/0
  4540 ;;		On exit  : 0/0
  4541 ;;		Unchanged: 0/0
  4542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4543 ;;      Params:         0       3       0       0       0       0       0       0       0
  4544 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4545 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4546 ;;      Totals:         0       3       0       0       0       0       0       0       0
  4547 ;;Total ram usage:        3 bytes
  4548 ;; Hardware stack levels used:    1
  4549 ;; Hardware stack levels required when called:   11
  4550 ;; This function calls:
  4551 ;;		Nothing
  4552 ;; This function is called by:
  4553 ;;		_CalcPI
  4554 ;; This function uses a non-reentrant model
  4555 ;;
  4556                           
  4557                           	psect	text14
  4558  00360C                     __ptext14:
  4559                           	opt stack 0
  4560  00360C                     ___ftneg:
  4561                           	opt stack 16
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;incstack = 0
  4565  00360C  0100               	movlb	0	; () banked
  4566  00360E  51BA               	movf	___ftneg@f1& (0+255),w,b
  4567  003610  0100               	movlb	0	; () banked
  4568  003612  11BB               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  4569  003614  0100               	movlb	0	; () banked
  4570  003616  11BC               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  4571  003618  B4D8               	btfsc	status,2,c
  4572  00361A  D009               	goto	l1323
  4573                           
  4574                           ; BSR set to: 0
  4575  00361C  0E00               	movlw	0
  4576  00361E  0100               	movlb	0	; () banked
  4577  003620  1BBA               	xorwf	___ftneg@f1& (0+255),f,b
  4578  003622  0E00               	movlw	0
  4579  003624  0100               	movlb	0	; () banked
  4580  003626  1BBB               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  4581  003628  0E80               	movlw	128
  4582  00362A  0100               	movlb	0	; () banked
  4583  00362C  1BBC               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  4584  00362E                     l1323:
  4585                           
  4586                           ; BSR set to: 0
  4587  00362E  C0BA  F0BA         	movff	___ftneg@f1,?___ftneg
  4588  003632  C0BB  F0BB         	movff	___ftneg@f1+1,?___ftneg+1
  4589  003636  C0BC  F0BC         	movff	___ftneg@f1+2,?___ftneg+2
  4590                           
  4591                           ; BSR set to: 0
  4592  00363A  0012               	return		;funcret
  4593  00363C                     __end_of___ftneg:
  4594                           	opt stack 0
  4595                           tblptru	equ	0xFF8
  4596                           tblptrh	equ	0xFF7
  4597                           tblptrl	equ	0xFF6
  4598                           tablat	equ	0xFF5
  4599                           postinc0	equ	0xFEE
  4600                           wreg	equ	0xFE8
  4601                           indf1	equ	0xFE7
  4602                           postdec1	equ	0xFE5
  4603                           fsr1h	equ	0xFE2
  4604                           fsr1l	equ	0xFE1
  4605                           indf2	equ	0xFDF
  4606                           postinc2	equ	0xFDE
  4607                           postdec2	equ	0xFDD
  4608                           plusw2	equ	0xFDB
  4609                           fsr2h	equ	0xFDA
  4610                           fsr2l	equ	0xFD9
  4611                           status	equ	0xFD8
  4612                           
  4613 ;; *************** function ___ftadd *****************
  4614 ;; Defined at:
  4615 ;;		line 86 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\ftadd.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;  f1              3   27[BANK0 ] float 
  4618 ;;  f2              3   30[BANK0 ] float 
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;  exp1            1   38[BANK0 ] unsigned char 
  4621 ;;  exp2            1   37[BANK0 ] unsigned char 
  4622 ;;  sign            1   36[BANK0 ] unsigned char 
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  3   27[BANK0 ] float 
  4625 ;; Registers used:
  4626 ;;		wreg, status,2, status,0, cstack
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4632 ;;      Params:         0       6       0       0       0       0       0       0       0
  4633 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4634 ;;      Temps:          0       3       0       0       0       0       0       0       0
  4635 ;;      Totals:         0      12       0       0       0       0       0       0       0
  4636 ;;Total ram usage:       12 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:   12
  4639 ;; This function calls:
  4640 ;;		___ftpack
  4641 ;; This function is called by:
  4642 ;;		_CalcPI
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           	psect	text15
  4647  000B1C                     __ptext15:
  4648                           	opt stack 0
  4649  000B1C                     ___ftadd:
  4650                           	opt stack 15
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;incstack = 0
  4654  000B1C  C0D7  F0DB         	movff	___ftadd@f1+2,??___ftadd
  4655  000B20  0100               	movlb	0	; () banked
  4656  000B22  6BDC               	clrf	(??___ftadd+1)& (0+255),b
  4657  000B24  6BDD               	clrf	(??___ftadd+2)& (0+255),b
  4658  000B26  0100               	movlb	0	; () banked
  4659  000B28  35D6               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  4660  000B2A  0100               	movlb	0	; () banked
  4661  000B2C  37DB               	rlcf	??___ftadd& (0+255),f,b
  4662  000B2E  E301               	bnc	u6571
  4663  000B30  81DC               	bsf	(??___ftadd+1)& (0+255),0,b
  4664  000B32                     u6571:
  4665  000B32  0100               	movlb	0	; () banked
  4666  000B34  51DB               	movf	??___ftadd& (0+255),w,b
  4667  000B36  0100               	movlb	0	; () banked
  4668  000B38  6FE0               	movwf	___ftadd@exp1& (0+255),b
  4669  000B3A  C0DA  F0DB         	movff	___ftadd@f2+2,??___ftadd
  4670  000B3E  0100               	movlb	0	; () banked
  4671  000B40  6BDC               	clrf	(??___ftadd+1)& (0+255),b
  4672  000B42  6BDD               	clrf	(??___ftadd+2)& (0+255),b
  4673  000B44  0100               	movlb	0	; () banked
  4674  000B46  35D9               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  4675  000B48  0100               	movlb	0	; () banked
  4676  000B4A  37DB               	rlcf	??___ftadd& (0+255),f,b
  4677  000B4C  E301               	bnc	u6581
  4678  000B4E  81DC               	bsf	(??___ftadd+1)& (0+255),0,b
  4679  000B50                     u6581:
  4680  000B50  0100               	movlb	0	; () banked
  4681  000B52  51DB               	movf	??___ftadd& (0+255),w,b
  4682  000B54  0100               	movlb	0	; () banked
  4683  000B56  6FDF               	movwf	___ftadd@exp2& (0+255),b
  4684                           
  4685                           ; BSR set to: 0
  4686  000B58  0100               	movlb	0	; () banked
  4687  000B5A  51E0               	movf	___ftadd@exp1& (0+255),w,b
  4688  000B5C  0100               	movlb	0	; () banked
  4689  000B5E  B4D8               	btfsc	status,2,c
  4690  000B60  D011               	goto	l1266
  4691                           
  4692                           ; BSR set to: 0
  4693  000B62  0100               	movlb	0	; () banked
  4694  000B64  51DF               	movf	___ftadd@exp2& (0+255),w,b
  4695  000B66  0100               	movlb	0	; () banked
  4696  000B68  5DE0               	subwf	___ftadd@exp1& (0+255),w,b
  4697  000B6A  B0D8               	btfsc	status,0,c
  4698  000B6C  D012               	goto	l6644
  4699                           
  4700                           ; BSR set to: 0
  4701  000B6E  0100               	movlb	0	; () banked
  4702  000B70  51E0               	movf	___ftadd@exp1& (0+255),w,b
  4703  000B72  0800               	sublw	0
  4704  000B74  0100               	movlb	0	; () banked
  4705  000B76  25DF               	addwf	___ftadd@exp2& (0+255),w,b
  4706  000B78  0100               	movlb	0	; () banked
  4707  000B7A  6FDB               	movwf	??___ftadd& (0+255),b
  4708  000B7C  0E18               	movlw	24
  4709  000B7E  0100               	movlb	0	; () banked
  4710  000B80  65DB               	cpfsgt	??___ftadd& (0+255),b
  4711  000B82  D007               	goto	l6644
  4712  000B84                     l1266:
  4713                           
  4714                           ; BSR set to: 0
  4715  000B84  C0D8  F0D5         	movff	___ftadd@f2,?___ftadd
  4716  000B88  C0D9  F0D6         	movff	___ftadd@f2+1,?___ftadd+1
  4717  000B8C  C0DA  F0D7         	movff	___ftadd@f2+2,?___ftadd+2
  4718  000B90  0012               	return	
  4719  000B92                     l6644:
  4720                           
  4721                           ; BSR set to: 0
  4722  000B92  0100               	movlb	0	; () banked
  4723  000B94  51DF               	movf	___ftadd@exp2& (0+255),w,b
  4724  000B96  0100               	movlb	0	; () banked
  4725  000B98  B4D8               	btfsc	status,2,c
  4726  000B9A  D011               	goto	l1270
  4727                           
  4728                           ; BSR set to: 0
  4729  000B9C  0100               	movlb	0	; () banked
  4730  000B9E  51E0               	movf	___ftadd@exp1& (0+255),w,b
  4731  000BA0  0100               	movlb	0	; () banked
  4732  000BA2  5DDF               	subwf	___ftadd@exp2& (0+255),w,b
  4733  000BA4  B0D8               	btfsc	status,0,c
  4734  000BA6  D012               	goto	l6650
  4735                           
  4736                           ; BSR set to: 0
  4737  000BA8  0100               	movlb	0	; () banked
  4738  000BAA  51DF               	movf	___ftadd@exp2& (0+255),w,b
  4739  000BAC  0800               	sublw	0
  4740  000BAE  0100               	movlb	0	; () banked
  4741  000BB0  25E0               	addwf	___ftadd@exp1& (0+255),w,b
  4742  000BB2  0100               	movlb	0	; () banked
  4743  000BB4  6FDB               	movwf	??___ftadd& (0+255),b
  4744  000BB6  0E18               	movlw	24
  4745  000BB8  0100               	movlb	0	; () banked
  4746  000BBA  65DB               	cpfsgt	??___ftadd& (0+255),b
  4747  000BBC  D007               	goto	l6650
  4748  000BBE                     l1270:
  4749                           
  4750                           ; BSR set to: 0
  4751  000BBE  C0D5  F0D5         	movff	___ftadd@f1,?___ftadd
  4752  000BC2  C0D6  F0D6         	movff	___ftadd@f1+1,?___ftadd+1
  4753  000BC6  C0D7  F0D7         	movff	___ftadd@f1+2,?___ftadd+2
  4754  000BCA  0012               	return	
  4755  000BCC                     l6650:
  4756                           
  4757                           ; BSR set to: 0
  4758  000BCC  0E06               	movlw	6
  4759  000BCE  0100               	movlb	0	; () banked
  4760  000BD0  6FDE               	movwf	___ftadd@sign& (0+255),b
  4761                           
  4762                           ; BSR set to: 0
  4763  000BD2  0100               	movlb	0	; () banked
  4764  000BD4  AFD7               	btfss	(___ftadd@f1+2)& (0+255),7,b
  4765  000BD6  D002               	goto	l6656
  4766                           
  4767                           ; BSR set to: 0
  4768  000BD8  0100               	movlb	0	; () banked
  4769  000BDA  8FDE               	bsf	___ftadd@sign& (0+255),7,b
  4770  000BDC                     l6656:
  4771                           
  4772                           ; BSR set to: 0
  4773  000BDC  0100               	movlb	0	; () banked
  4774  000BDE  AFDA               	btfss	(___ftadd@f2+2)& (0+255),7,b
  4775  000BE0  D002               	goto	l1272
  4776                           
  4777                           ; BSR set to: 0
  4778  000BE2  0100               	movlb	0	; () banked
  4779  000BE4  8DDE               	bsf	___ftadd@sign& (0+255),6,b
  4780  000BE6                     l1272:
  4781                           
  4782                           ; BSR set to: 0
  4783  000BE6  0100               	movlb	0	; () banked
  4784  000BE8  8FD6               	bsf	(___ftadd@f1+1)& (0+255),7,b
  4785                           
  4786                           ; BSR set to: 0
  4787  000BEA  0EFF               	movlw	255
  4788  000BEC  0100               	movlb	0	; () banked
  4789  000BEE  17D5               	andwf	___ftadd@f1& (0+255),f,b
  4790  000BF0  0EFF               	movlw	255
  4791  000BF2  0100               	movlb	0	; () banked
  4792  000BF4  17D6               	andwf	(___ftadd@f1+1)& (0+255),f,b
  4793  000BF6  0E00               	movlw	0
  4794  000BF8  0100               	movlb	0	; () banked
  4795  000BFA  17D7               	andwf	(___ftadd@f1+2)& (0+255),f,b
  4796  000BFC  0100               	movlb	0	; () banked
  4797  000BFE  8FD9               	bsf	(___ftadd@f2+1)& (0+255),7,b
  4798                           
  4799                           ; BSR set to: 0
  4800  000C00  0EFF               	movlw	255
  4801  000C02  0100               	movlb	0	; () banked
  4802  000C04  17D8               	andwf	___ftadd@f2& (0+255),f,b
  4803  000C06  0EFF               	movlw	255
  4804  000C08  0100               	movlb	0	; () banked
  4805  000C0A  17D9               	andwf	(___ftadd@f2+1)& (0+255),f,b
  4806  000C0C  0E00               	movlw	0
  4807  000C0E  0100               	movlb	0	; () banked
  4808  000C10  17DA               	andwf	(___ftadd@f2+2)& (0+255),f,b
  4809                           
  4810                           ; BSR set to: 0
  4811  000C12  0100               	movlb	0	; () banked
  4812  000C14  51DF               	movf	___ftadd@exp2& (0+255),w,b
  4813  000C16  0100               	movlb	0	; () banked
  4814  000C18  5DE0               	subwf	___ftadd@exp1& (0+255),w,b
  4815  000C1A  B0D8               	btfsc	status,0,c
  4816  000C1C  D025               	goto	l6676
  4817  000C1E                     l6666:
  4818                           
  4819                           ; BSR set to: 0
  4820  000C1E  0100               	movlb	0	; () banked
  4821  000C20  90D8               	bcf	status,0,c
  4822  000C22  37D8               	rlcf	___ftadd@f2& (0+255),f,b
  4823  000C24  37D9               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  4824  000C26  37DA               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  4825  000C28  0100               	movlb	0	; () banked
  4826  000C2A  07DF               	decf	___ftadd@exp2& (0+255),f,b
  4827                           
  4828                           ; BSR set to: 0
  4829  000C2C  0100               	movlb	0	; () banked
  4830  000C2E  51E0               	movf	___ftadd@exp1& (0+255),w,b
  4831  000C30  0100               	movlb	0	; () banked
  4832  000C32  19DF               	xorwf	___ftadd@exp2& (0+255),w,b
  4833  000C34  B4D8               	btfsc	status,2,c
  4834  000C36  D011               	goto	l6674
  4835                           
  4836                           ; BSR set to: 0
  4837  000C38  0100               	movlb	0	; () banked
  4838  000C3A  07DE               	decf	___ftadd@sign& (0+255),f,b
  4839  000C3C  C0DE  F0DB         	movff	___ftadd@sign,??___ftadd
  4840  000C40  0E07               	movlw	7
  4841  000C42  0100               	movlb	0	; () banked
  4842  000C44  17DB               	andwf	??___ftadd& (0+255),f,b
  4843  000C46  B4D8               	btfsc	status,2,c
  4844  000C48  D008               	goto	l6674
  4845  000C4A  D7E9               	goto	l6666
  4846  000C4C                     l6672:
  4847                           
  4848                           ; BSR set to: 0
  4849  000C4C  0100               	movlb	0	; () banked
  4850  000C4E  90D8               	bcf	status,0,c
  4851  000C50  33D7               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  4852  000C52  33D6               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  4853  000C54  33D5               	rrcf	___ftadd@f1& (0+255),f,b
  4854  000C56  0100               	movlb	0	; () banked
  4855  000C58  2BE0               	incf	___ftadd@exp1& (0+255),f,b
  4856  000C5A                     l6674:
  4857                           
  4858                           ; BSR set to: 0
  4859  000C5A  0100               	movlb	0	; () banked
  4860  000C5C  51DF               	movf	___ftadd@exp2& (0+255),w,b
  4861  000C5E  0100               	movlb	0	; () banked
  4862  000C60  19E0               	xorwf	___ftadd@exp1& (0+255),w,b
  4863  000C62  B4D8               	btfsc	status,2,c
  4864  000C64  D02B               	goto	l1281
  4865  000C66  D7F2               	goto	l6672
  4866  000C68                     l6676:
  4867                           
  4868                           ; BSR set to: 0
  4869  000C68  0100               	movlb	0	; () banked
  4870  000C6A  51E0               	movf	___ftadd@exp1& (0+255),w,b
  4871  000C6C  0100               	movlb	0	; () banked
  4872  000C6E  5DDF               	subwf	___ftadd@exp2& (0+255),w,b
  4873  000C70  B0D8               	btfsc	status,0,c
  4874  000C72  D024               	goto	l1281
  4875  000C74                     l6678:
  4876                           
  4877                           ; BSR set to: 0
  4878  000C74  0100               	movlb	0	; () banked
  4879  000C76  90D8               	bcf	status,0,c
  4880  000C78  37D5               	rlcf	___ftadd@f1& (0+255),f,b
  4881  000C7A  37D6               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  4882  000C7C  37D7               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  4883  000C7E  0100               	movlb	0	; () banked
  4884  000C80  07E0               	decf	___ftadd@exp1& (0+255),f,b
  4885                           
  4886                           ; BSR set to: 0
  4887  000C82  0100               	movlb	0	; () banked
  4888  000C84  51E0               	movf	___ftadd@exp1& (0+255),w,b
  4889  000C86  0100               	movlb	0	; () banked
  4890  000C88  19DF               	xorwf	___ftadd@exp2& (0+255),w,b
  4891  000C8A  B4D8               	btfsc	status,2,c
  4892  000C8C  D011               	goto	l6686
  4893                           
  4894                           ; BSR set to: 0
  4895  000C8E  0100               	movlb	0	; () banked
  4896  000C90  07DE               	decf	___ftadd@sign& (0+255),f,b
  4897  000C92  C0DE  F0DB         	movff	___ftadd@sign,??___ftadd
  4898  000C96  0E07               	movlw	7
  4899  000C98  0100               	movlb	0	; () banked
  4900  000C9A  17DB               	andwf	??___ftadd& (0+255),f,b
  4901  000C9C  B4D8               	btfsc	status,2,c
  4902  000C9E  D008               	goto	l6686
  4903  000CA0  D7E9               	goto	l6678
  4904  000CA2                     l6684:
  4905                           
  4906                           ; BSR set to: 0
  4907  000CA2  0100               	movlb	0	; () banked
  4908  000CA4  90D8               	bcf	status,0,c
  4909  000CA6  33DA               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  4910  000CA8  33D9               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  4911  000CAA  33D8               	rrcf	___ftadd@f2& (0+255),f,b
  4912  000CAC  0100               	movlb	0	; () banked
  4913  000CAE  2BDF               	incf	___ftadd@exp2& (0+255),f,b
  4914  000CB0                     l6686:
  4915                           
  4916                           ; BSR set to: 0
  4917  000CB0  0100               	movlb	0	; () banked
  4918  000CB2  51DF               	movf	___ftadd@exp2& (0+255),w,b
  4919  000CB4  0100               	movlb	0	; () banked
  4920  000CB6  19E0               	xorwf	___ftadd@exp1& (0+255),w,b
  4921  000CB8  A4D8               	btfss	status,2,c
  4922  000CBA  D7F3               	goto	l6684
  4923  000CBC                     l1281:
  4924                           
  4925                           ; BSR set to: 0
  4926  000CBC  0100               	movlb	0	; () banked
  4927  000CBE  AFDE               	btfss	___ftadd@sign& (0+255),7,b
  4928  000CC0  D012               	goto	l1290
  4929                           
  4930                           ; BSR set to: 0
  4931  000CC2  0EFF               	movlw	255
  4932  000CC4  0100               	movlb	0	; () banked
  4933  000CC6  1BD5               	xorwf	___ftadd@f1& (0+255),f,b
  4934  000CC8  0EFF               	movlw	255
  4935  000CCA  0100               	movlb	0	; () banked
  4936  000CCC  1BD6               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  4937  000CCE  0EFF               	movlw	255
  4938  000CD0  0100               	movlb	0	; () banked
  4939  000CD2  1BD7               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  4940  000CD4  0E01               	movlw	1
  4941  000CD6  0100               	movlb	0	; () banked
  4942  000CD8  27D5               	addwf	___ftadd@f1& (0+255),f,b
  4943  000CDA  0E00               	movlw	0
  4944  000CDC  0100               	movlb	0	; () banked
  4945  000CDE  23D6               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  4946  000CE0  0E00               	movlw	0
  4947  000CE2  0100               	movlb	0	; () banked
  4948  000CE4  23D7               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  4949  000CE6                     l1290:
  4950                           
  4951                           ; BSR set to: 0
  4952  000CE6  0100               	movlb	0	; () banked
  4953  000CE8  ADDE               	btfss	___ftadd@sign& (0+255),6,b
  4954  000CEA  D012               	goto	l6692
  4955                           
  4956                           ; BSR set to: 0
  4957  000CEC  0EFF               	movlw	255
  4958  000CEE  0100               	movlb	0	; () banked
  4959  000CF0  1BD8               	xorwf	___ftadd@f2& (0+255),f,b
  4960  000CF2  0EFF               	movlw	255
  4961  000CF4  0100               	movlb	0	; () banked
  4962  000CF6  1BD9               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  4963  000CF8  0EFF               	movlw	255
  4964  000CFA  0100               	movlb	0	; () banked
  4965  000CFC  1BDA               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  4966  000CFE  0E01               	movlw	1
  4967  000D00  0100               	movlb	0	; () banked
  4968  000D02  27D8               	addwf	___ftadd@f2& (0+255),f,b
  4969  000D04  0E00               	movlw	0
  4970  000D06  0100               	movlb	0	; () banked
  4971  000D08  23D9               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  4972  000D0A  0E00               	movlw	0
  4973  000D0C  0100               	movlb	0	; () banked
  4974  000D0E  23DA               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  4975  000D10                     l6692:
  4976                           
  4977                           ; BSR set to: 0
  4978  000D10  0E00               	movlw	0
  4979  000D12  0100               	movlb	0	; () banked
  4980  000D14  6FDE               	movwf	___ftadd@sign& (0+255),b
  4981                           
  4982                           ; BSR set to: 0
  4983  000D16  0100               	movlb	0	; () banked
  4984  000D18  51D5               	movf	___ftadd@f1& (0+255),w,b
  4985  000D1A  0100               	movlb	0	; () banked
  4986  000D1C  27D8               	addwf	___ftadd@f2& (0+255),f,b
  4987  000D1E  0100               	movlb	0	; () banked
  4988  000D20  51D6               	movf	(___ftadd@f1+1)& (0+255),w,b
  4989  000D22  0100               	movlb	0	; () banked
  4990  000D24  23D9               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  4991  000D26  0100               	movlb	0	; () banked
  4992  000D28  51D7               	movf	(___ftadd@f1+2)& (0+255),w,b
  4993  000D2A  0100               	movlb	0	; () banked
  4994  000D2C  23DA               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  4995                           
  4996                           ; BSR set to: 0
  4997  000D2E  0100               	movlb	0	; () banked
  4998  000D30  AFDA               	btfss	(___ftadd@f2+2)& (0+255),7,b
  4999  000D32  D015               	goto	l6702
  5000                           
  5001                           ; BSR set to: 0
  5002  000D34  0EFF               	movlw	255
  5003  000D36  0100               	movlb	0	; () banked
  5004  000D38  1BD8               	xorwf	___ftadd@f2& (0+255),f,b
  5005  000D3A  0EFF               	movlw	255
  5006  000D3C  0100               	movlb	0	; () banked
  5007  000D3E  1BD9               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  5008  000D40  0EFF               	movlw	255
  5009  000D42  0100               	movlb	0	; () banked
  5010  000D44  1BDA               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  5011  000D46  0E01               	movlw	1
  5012  000D48  0100               	movlb	0	; () banked
  5013  000D4A  27D8               	addwf	___ftadd@f2& (0+255),f,b
  5014  000D4C  0E00               	movlw	0
  5015  000D4E  0100               	movlb	0	; () banked
  5016  000D50  23D9               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  5017  000D52  0E00               	movlw	0
  5018  000D54  0100               	movlb	0	; () banked
  5019  000D56  23DA               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  5020                           
  5021                           ; BSR set to: 0
  5022  000D58  0E01               	movlw	1
  5023  000D5A  0100               	movlb	0	; () banked
  5024  000D5C  6FDE               	movwf	___ftadd@sign& (0+255),b
  5025  000D5E                     l6702:
  5026                           
  5027                           ; BSR set to: 0
  5028  000D5E  C0D8  F0BA         	movff	___ftadd@f2,___ftpack@arg
  5029  000D62  C0D9  F0BB         	movff	___ftadd@f2+1,___ftpack@arg+1
  5030  000D66  C0DA  F0BC         	movff	___ftadd@f2+2,___ftpack@arg+2
  5031  000D6A  C0E0  F0BD         	movff	___ftadd@exp1,___ftpack@exp
  5032  000D6E  C0DE  F0BE         	movff	___ftadd@sign,___ftpack@sign
  5033  000D72  EC34  F00E         	call	___ftpack	;wreg free
  5034  000D76  C0BA  F0D5         	movff	?___ftpack,?___ftadd
  5035  000D7A  C0BB  F0D6         	movff	?___ftpack+1,?___ftadd+1
  5036  000D7E  C0BC  F0D7         	movff	?___ftpack+2,?___ftadd+2
  5037  000D82  0012               	return	
  5038  000D84                     __end_of___ftadd:
  5039                           	opt stack 0
  5040                           tblptru	equ	0xFF8
  5041                           tblptrh	equ	0xFF7
  5042                           tblptrl	equ	0xFF6
  5043                           tablat	equ	0xFF5
  5044                           postinc0	equ	0xFEE
  5045                           wreg	equ	0xFE8
  5046                           indf1	equ	0xFE7
  5047                           postdec1	equ	0xFE5
  5048                           fsr1h	equ	0xFE2
  5049                           fsr1l	equ	0xFE1
  5050                           indf2	equ	0xFDF
  5051                           postinc2	equ	0xFDE
  5052                           postdec2	equ	0xFDD
  5053                           plusw2	equ	0xFDB
  5054                           fsr2h	equ	0xFDA
  5055                           fsr2l	equ	0xFD9
  5056                           status	equ	0xFD8
  5057                           
  5058 ;; *************** function _select_Program *****************
  5059 ;; Defined at:
  5060 ;;		line 213 in file "user.c"
  5061 ;; Parameters:    Size  Location     Type
  5062 ;;		None
  5063 ;; Auto vars:     Size  Location     Type
  5064 ;;		None
  5065 ;; Return value:  Size  Location     Type
  5066 ;;		None               void
  5067 ;; Registers used:
  5068 ;;		None
  5069 ;; Tracked objects:
  5070 ;;		On entry : 0/0
  5071 ;;		On exit  : 0/0
  5072 ;;		Unchanged: 0/0
  5073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5074 ;;      Params:         0       0       0       0       0       0       0       0       0
  5075 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5076 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5077 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5078 ;;Total ram usage:        0 bytes
  5079 ;; Hardware stack levels used:    1
  5080 ;; Hardware stack levels required when called:   11
  5081 ;; This function calls:
  5082 ;;		Nothing
  5083 ;; This function is called by:
  5084 ;;		_main
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087                           
  5088                           	psect	text16
  5089  0037D6                     __ptext16:
  5090                           	opt stack 0
  5091  0037D6                     _select_Program:
  5092                           	opt stack 19
  5093                           
  5094                           ;incstack = 0
  5095  0037D6  0012               	return		;funcret
  5096  0037D8                     __end_of_select_Program:
  5097                           	opt stack 0
  5098                           tblptru	equ	0xFF8
  5099                           tblptrh	equ	0xFF7
  5100                           tblptrl	equ	0xFF6
  5101                           tablat	equ	0xFF5
  5102                           postinc0	equ	0xFEE
  5103                           wreg	equ	0xFE8
  5104                           indf1	equ	0xFE7
  5105                           postdec1	equ	0xFE5
  5106                           fsr1h	equ	0xFE2
  5107                           fsr1l	equ	0xFE1
  5108                           indf2	equ	0xFDF
  5109                           postinc2	equ	0xFDE
  5110                           postdec2	equ	0xFDD
  5111                           plusw2	equ	0xFDB
  5112                           fsr2h	equ	0xFDA
  5113                           fsr2l	equ	0xFD9
  5114                           status	equ	0xFD8
  5115                           
  5116 ;; *************** function _select_Battery *****************
  5117 ;; Defined at:
  5118 ;;		line 189 in file "user.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;		None
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;		None
  5123 ;; Return value:  Size  Location     Type
  5124 ;;		None               void
  5125 ;; Registers used:
  5126 ;;		None
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5132 ;;      Params:         0       0       0       0       0       0       0       0       0
  5133 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5134 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5135 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5136 ;;Total ram usage:        0 bytes
  5137 ;; Hardware stack levels used:    1
  5138 ;; Hardware stack levels required when called:   11
  5139 ;; This function calls:
  5140 ;;		Nothing
  5141 ;; This function is called by:
  5142 ;;		_main
  5143 ;; This function uses a non-reentrant model
  5144 ;;
  5145                           
  5146                           	psect	text17
  5147  0037D8                     __ptext17:
  5148                           	opt stack 0
  5149  0037D8                     _select_Battery:
  5150                           	opt stack 19
  5151                           
  5152                           ;incstack = 0
  5153  0037D8  0012               	return		;funcret
  5154  0037DA                     __end_of_select_Battery:
  5155                           	opt stack 0
  5156                           tblptru	equ	0xFF8
  5157                           tblptrh	equ	0xFF7
  5158                           tblptrl	equ	0xFF6
  5159                           tablat	equ	0xFF5
  5160                           postinc0	equ	0xFEE
  5161                           wreg	equ	0xFE8
  5162                           indf1	equ	0xFE7
  5163                           postdec1	equ	0xFE5
  5164                           fsr1h	equ	0xFE2
  5165                           fsr1l	equ	0xFE1
  5166                           indf2	equ	0xFDF
  5167                           postinc2	equ	0xFDE
  5168                           postdec2	equ	0xFDD
  5169                           plusw2	equ	0xFDB
  5170                           fsr2h	equ	0xFDA
  5171                           fsr2l	equ	0xFD9
  5172                           status	equ	0xFD8
  5173                           
  5174 ;; *************** function _select_Action *****************
  5175 ;; Defined at:
  5176 ;;		line 201 in file "user.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;		None
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;		None
  5181 ;; Return value:  Size  Location     Type
  5182 ;;		None               void
  5183 ;; Registers used:
  5184 ;;		None
  5185 ;; Tracked objects:
  5186 ;;		On entry : 0/0
  5187 ;;		On exit  : 0/0
  5188 ;;		Unchanged: 0/0
  5189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5190 ;;      Params:         0       0       0       0       0       0       0       0       0
  5191 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5192 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5193 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5194 ;;Total ram usage:        0 bytes
  5195 ;; Hardware stack levels used:    1
  5196 ;; Hardware stack levels required when called:   11
  5197 ;; This function calls:
  5198 ;;		Nothing
  5199 ;; This function is called by:
  5200 ;;		_main
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           	psect	text18
  5205  0037DA                     __ptext18:
  5206                           	opt stack 0
  5207  0037DA                     _select_Action:
  5208                           	opt stack 19
  5209                           
  5210                           ;incstack = 0
  5211  0037DA  0012               	return		;funcret
  5212  0037DC                     __end_of_select_Action:
  5213                           	opt stack 0
  5214                           tblptru	equ	0xFF8
  5215                           tblptrh	equ	0xFF7
  5216                           tblptrl	equ	0xFF6
  5217                           tablat	equ	0xFF5
  5218                           postinc0	equ	0xFEE
  5219                           wreg	equ	0xFE8
  5220                           indf1	equ	0xFE7
  5221                           postdec1	equ	0xFE5
  5222                           fsr1h	equ	0xFE2
  5223                           fsr1l	equ	0xFE1
  5224                           indf2	equ	0xFDF
  5225                           postinc2	equ	0xFDE
  5226                           postdec2	equ	0xFDD
  5227                           plusw2	equ	0xFDB
  5228                           fsr2h	equ	0xFDA
  5229                           fsr2l	equ	0xFD9
  5230                           status	equ	0xFD8
  5231                           
  5232 ;; *************** function _list_Program *****************
  5233 ;; Defined at:
  5234 ;;		line 207 in file "user.c"
  5235 ;; Parameters:    Size  Location     Type
  5236 ;;		None
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;		None
  5239 ;; Return value:  Size  Location     Type
  5240 ;;                  2    0[BANK0 ] short 
  5241 ;; Registers used:
  5242 ;;		wreg, status,2
  5243 ;; Tracked objects:
  5244 ;;		On entry : 0/0
  5245 ;;		On exit  : 0/0
  5246 ;;		Unchanged: 0/0
  5247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5248 ;;      Params:         0       2       0       0       0       0       0       0       0
  5249 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5250 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5251 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5252 ;;Total ram usage:        2 bytes
  5253 ;; Hardware stack levels used:    1
  5254 ;; Hardware stack levels required when called:   11
  5255 ;; This function calls:
  5256 ;;		Nothing
  5257 ;; This function is called by:
  5258 ;;		_main
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           	psect	text19
  5263  003780                     __ptext19:
  5264                           	opt stack 0
  5265  003780                     _list_Program:
  5266                           	opt stack 19
  5267                           
  5268                           ;user.c: 209: return OK;
  5269                           
  5270                           ;incstack = 0
  5271  003780  0E00               	movlw	0
  5272  003782  0100               	movlb	0	; () banked
  5273  003784  6FBB               	movwf	(?_list_Program+1)& (0+255),b
  5274  003786  0E00               	movlw	0
  5275  003788  6FBA               	movwf	?_list_Program& (0+255),b
  5276  00378A  0012               	return	
  5277  00378C                     __end_of_list_Program:
  5278                           	opt stack 0
  5279                           tblptru	equ	0xFF8
  5280                           tblptrh	equ	0xFF7
  5281                           tblptrl	equ	0xFF6
  5282                           tablat	equ	0xFF5
  5283                           postinc0	equ	0xFEE
  5284                           wreg	equ	0xFE8
  5285                           indf1	equ	0xFE7
  5286                           postdec1	equ	0xFE5
  5287                           fsr1h	equ	0xFE2
  5288                           fsr1l	equ	0xFE1
  5289                           indf2	equ	0xFDF
  5290                           postinc2	equ	0xFDE
  5291                           postdec2	equ	0xFDD
  5292                           plusw2	equ	0xFDB
  5293                           fsr2h	equ	0xFDA
  5294                           fsr2l	equ	0xFD9
  5295                           status	equ	0xFD8
  5296                           
  5297 ;; *************** function _list_Battery *****************
  5298 ;; Defined at:
  5299 ;;		line 183 in file "user.c"
  5300 ;; Parameters:    Size  Location     Type
  5301 ;;		None
  5302 ;; Auto vars:     Size  Location     Type
  5303 ;;		None
  5304 ;; Return value:  Size  Location     Type
  5305 ;;                  2    0[BANK0 ] short 
  5306 ;; Registers used:
  5307 ;;		wreg, status,2
  5308 ;; Tracked objects:
  5309 ;;		On entry : 0/0
  5310 ;;		On exit  : 0/0
  5311 ;;		Unchanged: 0/0
  5312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5313 ;;      Params:         0       2       0       0       0       0       0       0       0
  5314 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5315 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5316 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5317 ;;Total ram usage:        2 bytes
  5318 ;; Hardware stack levels used:    1
  5319 ;; Hardware stack levels required when called:   11
  5320 ;; This function calls:
  5321 ;;		Nothing
  5322 ;; This function is called by:
  5323 ;;		_main
  5324 ;; This function uses a non-reentrant model
  5325 ;;
  5326                           
  5327                           	psect	text20
  5328  00378C                     __ptext20:
  5329                           	opt stack 0
  5330  00378C                     _list_Battery:
  5331                           	opt stack 19
  5332                           
  5333                           ;user.c: 185: return OK;
  5334                           
  5335                           ; BSR set to: 0
  5336                           ;incstack = 0
  5337  00378C  0E00               	movlw	0
  5338  00378E  0100               	movlb	0	; () banked
  5339  003790  6FBB               	movwf	(?_list_Battery+1)& (0+255),b
  5340  003792  0E00               	movlw	0
  5341  003794  6FBA               	movwf	?_list_Battery& (0+255),b
  5342  003796  0012               	return	
  5343  003798                     __end_of_list_Battery:
  5344                           	opt stack 0
  5345                           tblptru	equ	0xFF8
  5346                           tblptrh	equ	0xFF7
  5347                           tblptrl	equ	0xFF6
  5348                           tablat	equ	0xFF5
  5349                           postinc0	equ	0xFEE
  5350                           wreg	equ	0xFE8
  5351                           indf1	equ	0xFE7
  5352                           postdec1	equ	0xFE5
  5353                           fsr1h	equ	0xFE2
  5354                           fsr1l	equ	0xFE1
  5355                           indf2	equ	0xFDF
  5356                           postinc2	equ	0xFDE
  5357                           postdec2	equ	0xFDD
  5358                           plusw2	equ	0xFDB
  5359                           fsr2h	equ	0xFDA
  5360                           fsr2l	equ	0xFD9
  5361                           status	equ	0xFD8
  5362                           
  5363 ;; *************** function _list_Action *****************
  5364 ;; Defined at:
  5365 ;;		line 195 in file "user.c"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;		None
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;		None
  5370 ;; Return value:  Size  Location     Type
  5371 ;;                  2    0[BANK0 ] short 
  5372 ;; Registers used:
  5373 ;;		wreg, status,2
  5374 ;; Tracked objects:
  5375 ;;		On entry : 0/0
  5376 ;;		On exit  : 0/0
  5377 ;;		Unchanged: 0/0
  5378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5379 ;;      Params:         0       2       0       0       0       0       0       0       0
  5380 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5381 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5382 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5383 ;;Total ram usage:        2 bytes
  5384 ;; Hardware stack levels used:    1
  5385 ;; Hardware stack levels required when called:   11
  5386 ;; This function calls:
  5387 ;;		Nothing
  5388 ;; This function is called by:
  5389 ;;		_main
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393                           	psect	text21
  5394  003798                     __ptext21:
  5395                           	opt stack 0
  5396  003798                     _list_Action:
  5397                           	opt stack 19
  5398                           
  5399                           ;user.c: 197: return OK;
  5400                           
  5401                           ; BSR set to: 0
  5402                           ;incstack = 0
  5403  003798  0E00               	movlw	0
  5404  00379A  0100               	movlb	0	; () banked
  5405  00379C  6FBB               	movwf	(?_list_Action+1)& (0+255),b
  5406  00379E  0E00               	movlw	0
  5407  0037A0  6FBA               	movwf	?_list_Action& (0+255),b
  5408  0037A2  0012               	return	
  5409  0037A4                     __end_of_list_Action:
  5410                           	opt stack 0
  5411                           tblptru	equ	0xFF8
  5412                           tblptrh	equ	0xFF7
  5413                           tblptrl	equ	0xFF6
  5414                           tablat	equ	0xFF5
  5415                           postinc0	equ	0xFEE
  5416                           wreg	equ	0xFE8
  5417                           indf1	equ	0xFE7
  5418                           postdec1	equ	0xFE5
  5419                           fsr1h	equ	0xFE2
  5420                           fsr1l	equ	0xFE1
  5421                           indf2	equ	0xFDF
  5422                           postinc2	equ	0xFDE
  5423                           postdec2	equ	0xFDD
  5424                           plusw2	equ	0xFDB
  5425                           fsr2h	equ	0xFDA
  5426                           fsr2l	equ	0xFD9
  5427                           status	equ	0xFD8
  5428                           
  5429 ;; *************** function _initialize *****************
  5430 ;; Defined at:
  5431 ;;		line 177 in file "user.c"
  5432 ;; Parameters:    Size  Location     Type
  5433 ;;		None
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;		None
  5436 ;; Return value:  Size  Location     Type
  5437 ;;                  2    0[BANK0 ] short 
  5438 ;; Registers used:
  5439 ;;		wreg, status,2
  5440 ;; Tracked objects:
  5441 ;;		On entry : 0/0
  5442 ;;		On exit  : 0/0
  5443 ;;		Unchanged: 0/0
  5444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5445 ;;      Params:         0       2       0       0       0       0       0       0       0
  5446 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5447 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5448 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5449 ;;Total ram usage:        2 bytes
  5450 ;; Hardware stack levels used:    1
  5451 ;; Hardware stack levels required when called:   11
  5452 ;; This function calls:
  5453 ;;		Nothing
  5454 ;; This function is called by:
  5455 ;;		_main
  5456 ;; This function uses a non-reentrant model
  5457 ;;
  5458                           
  5459                           	psect	text22
  5460  0037A4                     __ptext22:
  5461                           	opt stack 0
  5462  0037A4                     _initialize:
  5463                           	opt stack 19
  5464                           
  5465                           ;user.c: 179: return OK;
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;incstack = 0
  5469  0037A4  0E00               	movlw	0
  5470  0037A6  0100               	movlb	0	; () banked
  5471  0037A8  6FBB               	movwf	(?_initialize+1)& (0+255),b
  5472  0037AA  0E00               	movlw	0
  5473  0037AC  6FBA               	movwf	?_initialize& (0+255),b
  5474  0037AE  0012               	return	
  5475  0037B0                     __end_of_initialize:
  5476                           	opt stack 0
  5477                           tblptru	equ	0xFF8
  5478                           tblptrh	equ	0xFF7
  5479                           tblptrl	equ	0xFF6
  5480                           tablat	equ	0xFF5
  5481                           postinc0	equ	0xFEE
  5482                           wreg	equ	0xFE8
  5483                           indf1	equ	0xFE7
  5484                           postdec1	equ	0xFE5
  5485                           fsr1h	equ	0xFE2
  5486                           fsr1l	equ	0xFE1
  5487                           indf2	equ	0xFDF
  5488                           postinc2	equ	0xFDE
  5489                           postdec2	equ	0xFDD
  5490                           plusw2	equ	0xFDB
  5491                           fsr2h	equ	0xFDA
  5492                           fsr2l	equ	0xFD9
  5493                           status	equ	0xFD8
  5494                           
  5495 ;; *************** function _end_Charge *****************
  5496 ;; Defined at:
  5497 ;;		line 435 in file "user.c"
  5498 ;; Parameters:    Size  Location     Type
  5499 ;;		None
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;		None
  5502 ;; Return value:  Size  Location     Type
  5503 ;;		None               void
  5504 ;; Registers used:
  5505 ;;		None
  5506 ;; Tracked objects:
  5507 ;;		On entry : 0/0
  5508 ;;		On exit  : 0/0
  5509 ;;		Unchanged: 0/0
  5510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5511 ;;      Params:         0       0       0       0       0       0       0       0       0
  5512 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5513 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5514 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5515 ;;Total ram usage:        0 bytes
  5516 ;; Hardware stack levels used:    1
  5517 ;; Hardware stack levels required when called:   11
  5518 ;; This function calls:
  5519 ;;		Nothing
  5520 ;; This function is called by:
  5521 ;;		_main
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525                           	psect	text23
  5526  0037DC                     __ptext23:
  5527                           	opt stack 0
  5528  0037DC                     _end_Charge:
  5529                           	opt stack 19
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;incstack = 0
  5533  0037DC  0012               	return		;funcret
  5534  0037DE                     __end_of_end_Charge:
  5535                           	opt stack 0
  5536                           tblptru	equ	0xFF8
  5537                           tblptrh	equ	0xFF7
  5538                           tblptrl	equ	0xFF6
  5539                           tablat	equ	0xFF5
  5540                           postinc0	equ	0xFEE
  5541                           wreg	equ	0xFE8
  5542                           indf1	equ	0xFE7
  5543                           postdec1	equ	0xFE5
  5544                           fsr1h	equ	0xFE2
  5545                           fsr1l	equ	0xFE1
  5546                           indf2	equ	0xFDF
  5547                           postinc2	equ	0xFDE
  5548                           postdec2	equ	0xFDD
  5549                           plusw2	equ	0xFDB
  5550                           fsr2h	equ	0xFDA
  5551                           fsr2l	equ	0xFD9
  5552                           status	equ	0xFD8
  5553                           
  5554 ;; *************** function _check_Precondition *****************
  5555 ;; Defined at:
  5556 ;;		line 229 in file "user.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;  precondition    2   60[BANK0 ] PTR short 
  5559 ;;		 -> main@precondition(2), 
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;  voltage         3   64[BANK0 ] float 
  5562 ;;  res             2   62[BANK0 ] short 
  5563 ;; Return value:  Size  Location     Type
  5564 ;;                  2   60[BANK0 ] short 
  5565 ;; Registers used:
  5566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5567 ;; Tracked objects:
  5568 ;;		On entry : 0/0
  5569 ;;		On exit  : 0/0
  5570 ;;		Unchanged: 0/0
  5571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5572 ;;      Params:         0       2       0       0       0       0       0       0       0
  5573 ;;      Locals:         0       5       0       0       0       0       0       0       0
  5574 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5575 ;;      Totals:         0       7       0       0       0       0       0       0       0
  5576 ;;Total ram usage:        7 bytes
  5577 ;; Hardware stack levels used:    1
  5578 ;; Hardware stack levels required when called:   14
  5579 ;; This function calls:
  5580 ;;		_V_Eval
  5581 ;;		___ftge
  5582 ;;		___ftmul
  5583 ;;		___lwtoft
  5584 ;;		_usb_send
  5585 ;; This function is called by:
  5586 ;;		_main
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           	psect	text24
  5591  002120                     __ptext24:
  5592                           	opt stack 0
  5593  002120                     _check_Precondition:
  5594                           	opt stack 16
  5595                           
  5596                           ;user.c: 231: signed float voltage = 0;
  5597                           
  5598                           ;incstack = 0
  5599  002120  0E00               	movlw	0
  5600  002122  0100               	movlb	0	; () banked
  5601  002124  6FFA               	movwf	check_Precondition@voltage& (0+255),b
  5602  002126  0E00               	movlw	0
  5603  002128  0100               	movlb	0	; () banked
  5604  00212A  6FFB               	movwf	(check_Precondition@voltage+1)& (0+255),b
  5605  00212C  0E00               	movlw	0
  5606  00212E  0100               	movlb	0	; () banked
  5607  002130  6FFC               	movwf	(check_Precondition@voltage+2)& (0+255),b
  5608                           
  5609                           ; BSR set to: 0
  5610                           ;user.c: 232: short res;
  5611                           ;user.c: 234: res = V_Eval(0b10000111,&voltage);
  5612  002132  0EFA               	movlw	low check_Precondition@voltage
  5613  002134  0100               	movlb	0	; () banked
  5614  002136  6FF0               	movwf	V_Eval@voltage& (0+255),b
  5615  002138  0E00               	movlw	high check_Precondition@voltage
  5616  00213A  0100               	movlb	0	; () banked
  5617  00213C  6FF1               	movwf	(V_Eval@voltage+1)& (0+255),b
  5618  00213E  0E87               	movlw	135
  5619  002140  EC69  F011         	call	_V_Eval
  5620  002144  C0F0  F0F8         	movff	?_V_Eval,check_Precondition@res
  5621  002148  C0F1  F0F9         	movff	?_V_Eval+1,check_Precondition@res+1
  5622                           
  5623                           ;user.c: 235: if (res != OK)
  5624  00214C  0100               	movlb	0	; () banked
  5625  00214E  51F8               	movf	check_Precondition@res& (0+255),w,b
  5626  002150  0100               	movlb	0	; () banked
  5627  002152  11F9               	iorwf	(check_Precondition@res+1)& (0+255),w,b
  5628  002154  B4D8               	btfsc	status,2,c
  5629  002156  D006               	goto	l7472
  5630                           
  5631                           ; BSR set to: 0
  5632                           ;user.c: 236: {
  5633                           ;user.c: 237: return KO;
  5634  002158  0E00               	movlw	0
  5635  00215A  0100               	movlb	0	; () banked
  5636  00215C  6FF7               	movwf	(?_check_Precondition+1)& (0+255),b
  5637  00215E  0E01               	movlw	1
  5638  002160  6FF6               	movwf	?_check_Precondition& (0+255),b
  5639                           
  5640                           ; BSR set to: 0
  5641  002162  0012               	return	
  5642  002164                     l7472:
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;user.c: 238: }
  5646                           ;user.c: 240: if (voltage < battery.charge.restore_Lowest_Voltage * battery.number_of_ce
      +                          lls)
  5647  002164  C0FA  F0D5         	movff	check_Precondition@voltage,___ftge@ff1
  5648  002168  C0FB  F0D6         	movff	check_Precondition@voltage+1,___ftge@ff1+1
  5649  00216C  C0FC  F0D7         	movff	check_Precondition@voltage+2,___ftge@ff1+2
  5650  002170  C1A2  F0C9         	movff	_battery+41,___ftmul@f2
  5651  002174  C1A3  F0CA         	movff	_battery+42,___ftmul@f2+1
  5652  002178  C1A4  F0CB         	movff	_battery+43,___ftmul@f2+2
  5653  00217C  C188  F0C2         	movff	_battery+15,___lwtoft@c
  5654  002180  C189  F0C3         	movff	_battery+16,___lwtoft@c+1
  5655  002184  EC61  F01B         	call	___lwtoft	;wreg free
  5656  002188  C0C2  F0C6         	movff	?___lwtoft,___ftmul@f1
  5657  00218C  C0C3  F0C7         	movff	?___lwtoft+1,___ftmul@f1+1
  5658  002190  C0C4  F0C8         	movff	?___lwtoft+2,___ftmul@f1+2
  5659  002194  ECD2  F009         	call	___ftmul	;wreg free
  5660  002198  C0C6  F0D8         	movff	?___ftmul,___ftge@ff2
  5661  00219C  C0C7  F0D9         	movff	?___ftmul+1,___ftge@ff2+1
  5662  0021A0  C0C8  F0DA         	movff	?___ftmul+2,___ftge@ff2+2
  5663  0021A4  ECD7  F013         	call	___ftge	;wreg free
  5664  0021A8  0100               	movlb	0	; () banked
  5665  0021AA  B0D8               	btfsc	status,0,c
  5666  0021AC  D006               	goto	l7476
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;user.c: 241: {
  5670                           ;user.c: 242: *precondition = 1;
  5671  0021AE  C0F6  FFD9         	movff	check_Precondition@precondition,fsr2l
  5672  0021B2  C0F7  FFDA         	movff	check_Precondition@precondition+1,fsr2h
  5673  0021B6  0E01               	movlw	1
  5674  0021B8  D005               	goto	L41
  5675  0021BA                     l7476:
  5676                           
  5677                           ; BSR set to: 0
  5678                           ;user.c: 244: else
  5679                           ;user.c: 245: {
  5680                           ;user.c: 246: *precondition = 0;
  5681  0021BA  C0F6  FFD9         	movff	check_Precondition@precondition,fsr2l
  5682  0021BE  C0F7  FFDA         	movff	check_Precondition@precondition+1,fsr2h
  5683  0021C2  0E00               	movlw	0
  5684  0021C4                     L41:
  5685  0021C4  6EDE               	movwf	postinc2,c
  5686  0021C6  0E00               	movlw	0
  5687  0021C8  6EDD               	movwf	postdec2,c
  5688                           
  5689                           ; BSR set to: 0
  5690                           ;user.c: 247: }
  5691                           ;user.c: 249: usb_send("voltage : %f, precondition : %hd",voltage,precondition);
  5692                           
  5693                           ; BSR set to: 0
  5694  0021CA  0E6A               	movlw	low STR_28
  5695  0021CC  0100               	movlb	0	; () banked
  5696  0021CE  6FDA               	movwf	usb_send@format& (0+255),b
  5697  0021D0  0E7E               	movlw	high STR_28
  5698  0021D2  0100               	movlb	0	; () banked
  5699  0021D4  6FDB               	movwf	(usb_send@format+1)& (0+255),b
  5700  0021D6  C0FA  F0DC         	movff	check_Precondition@voltage,?_usb_send+2
  5701  0021DA  C0FB  F0DD         	movff	check_Precondition@voltage+1,?_usb_send+3
  5702  0021DE  C0FC  F0DE         	movff	check_Precondition@voltage+2,?_usb_send+4
  5703  0021E2  C0F6  F0DF         	movff	check_Precondition@precondition,?_usb_send+5
  5704  0021E6  C0F7  F0E0         	movff	check_Precondition@precondition+1,?_usb_send+6
  5705  0021EA  EC09  F018         	call	_usb_send	;wreg free
  5706                           
  5707                           ;user.c: 251: return OK;
  5708  0021EE  0E00               	movlw	0
  5709  0021F0  0100               	movlb	0	; () banked
  5710  0021F2  6FF7               	movwf	(?_check_Precondition+1)& (0+255),b
  5711  0021F4  0E00               	movlw	0
  5712  0021F6  6FF6               	movwf	?_check_Precondition& (0+255),b
  5713  0021F8  0012               	return	
  5714  0021FA                     __end_of_check_Precondition:
  5715                           	opt stack 0
  5716                           tblptru	equ	0xFF8
  5717                           tblptrh	equ	0xFF7
  5718                           tblptrl	equ	0xFF6
  5719                           tablat	equ	0xFF5
  5720                           postinc0	equ	0xFEE
  5721                           wreg	equ	0xFE8
  5722                           indf1	equ	0xFE7
  5723                           postdec1	equ	0xFE5
  5724                           fsr1h	equ	0xFE2
  5725                           fsr1l	equ	0xFE1
  5726                           indf2	equ	0xFDF
  5727                           postinc2	equ	0xFDE
  5728                           postdec2	equ	0xFDD
  5729                           plusw2	equ	0xFDB
  5730                           fsr2h	equ	0xFDA
  5731                           fsr2l	equ	0xFD9
  5732                           status	equ	0xFD8
  5733                           
  5734 ;; *************** function _usb_send *****************
  5735 ;; Defined at:
  5736 ;;		line 27 in file "usb_comm.c"
  5737 ;; Parameters:    Size  Location     Type
  5738 ;;  format          2   32[BANK0 ] PTR const unsigned char 
  5739 ;;		 -> STR_28(33), 
  5740 ;; Auto vars:     Size  Location     Type
  5741 ;;  args            2   39[BANK0 ] PTR void [1]
  5742 ;;		 -> ?_usb_send(0), 
  5743 ;; Return value:  Size  Location     Type
  5744 ;;		None               void
  5745 ;; Registers used:
  5746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5747 ;; Tracked objects:
  5748 ;;		On entry : 0/0
  5749 ;;		On exit  : 0/0
  5750 ;;		Unchanged: 0/0
  5751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5752 ;;      Params:         0       7       0       0       0       0       0       0       0
  5753 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5754 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5755 ;;      Totals:         0       9       0       0       0       0       0       0       0
  5756 ;;Total ram usage:        9 bytes
  5757 ;; Hardware stack levels used:    1
  5758 ;; Hardware stack levels required when called:   13
  5759 ;; This function calls:
  5760 ;;		_CDCTxService
  5761 ;;		_putUSBUSART
  5762 ;;		_sprintf
  5763 ;;		_strlen
  5764 ;; This function is called by:
  5765 ;;		_check_Precondition
  5766 ;; This function uses a non-reentrant model
  5767 ;;
  5768                           
  5769                           	psect	text25
  5770  003012                     __ptext25:
  5771                           	opt stack 0
  5772  003012                     _usb_send:
  5773                           	opt stack 16
  5774                           
  5775                           ;usb_comm.c: 30: static unsigned char usb_msg[64];
  5776                           ;usb_comm.c: 32: va_list args;
  5777                           ;usb_comm.c: 33: *args = __va_start();
  5778                           
  5779                           ; BSR set to: 0
  5780                           ;incstack = 0
  5781  003012  0EDC               	movlw	low (?_usb_send+2)
  5782  003014  0100               	movlb	0	; () banked
  5783  003016  6FE1               	movwf	usb_send@args& (0+255),b
  5784  003018  0E00               	movlw	high (?_usb_send+2)
  5785  00301A  0100               	movlb	0	; () banked
  5786  00301C  6FE2               	movwf	(usb_send@args+1)& (0+255),b
  5787                           
  5788                           ; BSR set to: 0
  5789                           ;usb_comm.c: 34: sprintf(usb_msg,format,args);
  5790  00301E  0E00               	movlw	low usb_send@usb_msg
  5791  003020  0100               	movlb	0	; () banked
  5792  003022  6FC1               	movwf	sprintf@sp& (0+255),b
  5793  003024  0E02               	movlw	high usb_send@usb_msg
  5794  003026  0100               	movlb	0	; () banked
  5795  003028  6FC2               	movwf	(sprintf@sp+1)& (0+255),b
  5796  00302A  C0DA  F0C3         	movff	usb_send@format,sprintf@f
  5797  00302E  C0DB  F0C4         	movff	usb_send@format+1,sprintf@f+1
  5798  003032  0EE1               	movlw	low usb_send@args
  5799  003034  0100               	movlb	0	; () banked
  5800  003036  6FC5               	movwf	(?_sprintf+4)& (0+255),b
  5801  003038  0E00               	movlw	high usb_send@args
  5802  00303A  0100               	movlb	0	; () banked
  5803  00303C  6FC6               	movwf	(?_sprintf+5)& (0+255),b
  5804  00303E  EC0D  F000         	call	_sprintf	;wreg free
  5805                           
  5806                           ;usb_comm.c: 35: if (( USBDeviceState < CONFIGURED_STATE ) || ( UCONbits.SUSPND == 1 ))
  5807  003042  0E1F               	movlw	31
  5808  003044  0100               	movlb	0	; () banked
  5809  003046  659F               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
  5810  003048  0012               	return	
  5811                           
  5812                           ; BSR set to: 0
  5813  00304A  B26D               	btfsc	3949,1,c	;volatile
  5814  00304C  0012               	return	
  5815                           
  5816                           ; BSR set to: 0
  5817                           ;usb_comm.c: 39: else
  5818                           ;usb_comm.c: 40: {
  5819                           ;usb_comm.c: 41: if ((cdc_trf_state == 0))
  5820                           
  5821                           ; BSR set to: 0
  5822                           
  5823                           ; BSR set to: 0
  5824                           ;usb_comm.c: 38: }
  5825                           
  5826                           ; BSR set to: 0
  5827                           ;usb_comm.c: 36: {
  5828                           ;usb_comm.c: 37: return;
  5829  00304E  0100               	movlb	0	; () banked
  5830  003050  51A1               	movf	_cdc_trf_state& (0+255),w,b
  5831  003052  A4D8               	btfss	status,2,c
  5832  003054  D014               	goto	l7388
  5833                           
  5834                           ; BSR set to: 0
  5835                           ;usb_comm.c: 42: {
  5836                           ;usb_comm.c: 43: putUSBUSART(usb_msg,strlen(usb_msg));
  5837  003056  0E00               	movlw	low usb_send@usb_msg
  5838  003058  0100               	movlb	0	; () banked
  5839  00305A  6FC0               	movwf	putUSBUSART@data& (0+255),b
  5840  00305C  0E02               	movlw	high usb_send@usb_msg
  5841  00305E  0100               	movlb	0	; () banked
  5842  003060  6FC1               	movwf	(putUSBUSART@data+1)& (0+255),b
  5843  003062  0E00               	movlw	low usb_send@usb_msg
  5844  003064  0100               	movlb	0	; () banked
  5845  003066  6FBA               	movwf	strlen@s& (0+255),b
  5846  003068  0E02               	movlw	high usb_send@usb_msg
  5847  00306A  0100               	movlb	0	; () banked
  5848  00306C  6FBB               	movwf	(strlen@s+1)& (0+255),b
  5849  00306E  ECFE  F019         	call	_strlen	;wreg free
  5850  003072  0100               	movlb	0	; () banked
  5851  003074  51BA               	movf	?_strlen& (0+255),w,b
  5852  003076  0100               	movlb	0	; () banked
  5853  003078  6FC2               	movwf	putUSBUSART@length& (0+255),b
  5854  00307A  EC8B  F01B         	call	_putUSBUSART	;wreg free
  5855  00307E                     l7388:
  5856                           
  5857                           ;usb_comm.c: 44: }
  5858                           ;usb_comm.c: 45: CDCTxService();
  5859  00307E  EC0E  F009         	call	_CDCTxService	;wreg free
  5860  003082  0012               	return	
  5861  003084                     __end_of_usb_send:
  5862                           	opt stack 0
  5863                           tblptru	equ	0xFF8
  5864                           tblptrh	equ	0xFF7
  5865                           tblptrl	equ	0xFF6
  5866                           tablat	equ	0xFF5
  5867                           postinc0	equ	0xFEE
  5868                           wreg	equ	0xFE8
  5869                           indf1	equ	0xFE7
  5870                           postdec1	equ	0xFE5
  5871                           fsr1h	equ	0xFE2
  5872                           fsr1l	equ	0xFE1
  5873                           indf2	equ	0xFDF
  5874                           postinc2	equ	0xFDE
  5875                           postdec2	equ	0xFDD
  5876                           plusw2	equ	0xFDB
  5877                           fsr2h	equ	0xFDA
  5878                           fsr2l	equ	0xFD9
  5879                           status	equ	0xFD8
  5880                           
  5881 ;; *************** function _strlen *****************
  5882 ;; Defined at:
  5883 ;;		line 4 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\strlen.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  5886 ;;		 -> usb_send@usb_msg(64), 
  5887 ;; Auto vars:     Size  Location     Type
  5888 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
  5889 ;;		 -> usb_send@usb_msg(64), 
  5890 ;; Return value:  Size  Location     Type
  5891 ;;                  2    0[BANK0 ] unsigned int 
  5892 ;; Registers used:
  5893 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5894 ;; Tracked objects:
  5895 ;;		On entry : 0/0
  5896 ;;		On exit  : 0/0
  5897 ;;		Unchanged: 0/0
  5898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5899 ;;      Params:         0       2       0       0       0       0       0       0       0
  5900 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5901 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5902 ;;      Totals:         0       6       0       0       0       0       0       0       0
  5903 ;;Total ram usage:        6 bytes
  5904 ;; Hardware stack levels used:    1
  5905 ;; Hardware stack levels required when called:   11
  5906 ;; This function calls:
  5907 ;;		Nothing
  5908 ;; This function is called by:
  5909 ;;		_usb_send
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           	psect	text26
  5914  0033FC                     __ptext26:
  5915                           	opt stack 0
  5916  0033FC                     _strlen:
  5917                           	opt stack 17
  5918                           
  5919                           ;incstack = 0
  5920  0033FC  C0BA  F0BE         	movff	strlen@s,strlen@cp
  5921  003400  C0BB  F0BF         	movff	strlen@s+1,strlen@cp+1
  5922  003404  D003               	goto	l7072
  5923  003406                     l7070:
  5924  003406  0100               	movlb	0	; () banked
  5925  003408  4BBE               	infsnz	strlen@cp& (0+255),f,b
  5926  00340A  2BBF               	incf	(strlen@cp+1)& (0+255),f,b
  5927  00340C                     l7072:
  5928  00340C  C0BE  FFD9         	movff	strlen@cp,fsr2l
  5929  003410  C0BF  FFDA         	movff	strlen@cp+1,fsr2h
  5930  003414  50DF               	movf	indf2,w,c
  5931  003416  A4D8               	btfss	status,2,c
  5932  003418  D7F6               	goto	l7070
  5933  00341A  C0BA  F0BC         	movff	strlen@s,??_strlen
  5934  00341E  C0BB  F0BD         	movff	strlen@s+1,??_strlen+1
  5935  003422  0100               	movlb	0	; () banked
  5936  003424  1FBC               	comf	??_strlen& (0+255),f,b
  5937  003426  1FBD               	comf	(??_strlen+1)& (0+255),f,b
  5938  003428  4BBC               	infsnz	??_strlen& (0+255),f,b
  5939  00342A  2BBD               	incf	(??_strlen+1)& (0+255),f,b
  5940  00342C  0100               	movlb	0	; () banked
  5941  00342E  51BE               	movf	strlen@cp& (0+255),w,b
  5942  003430  0100               	movlb	0	; () banked
  5943  003432  25BC               	addwf	??_strlen& (0+255),w,b
  5944  003434  0100               	movlb	0	; () banked
  5945  003436  6FBA               	movwf	?_strlen& (0+255),b
  5946  003438  0100               	movlb	0	; () banked
  5947  00343A  51BF               	movf	(strlen@cp+1)& (0+255),w,b
  5948  00343C  0100               	movlb	0	; () banked
  5949  00343E  21BD               	addwfc	(??_strlen+1)& (0+255),w,b
  5950  003440  0100               	movlb	0	; () banked
  5951  003442  6FBB               	movwf	(?_strlen+1)& (0+255),b
  5952  003444  0012               	return	
  5953  003446                     __end_of_strlen:
  5954                           	opt stack 0
  5955                           tblptru	equ	0xFF8
  5956                           tblptrh	equ	0xFF7
  5957                           tblptrl	equ	0xFF6
  5958                           tablat	equ	0xFF5
  5959                           postinc0	equ	0xFEE
  5960                           wreg	equ	0xFE8
  5961                           indf1	equ	0xFE7
  5962                           postdec1	equ	0xFE5
  5963                           fsr1h	equ	0xFE2
  5964                           fsr1l	equ	0xFE1
  5965                           indf2	equ	0xFDF
  5966                           postinc2	equ	0xFDE
  5967                           postdec2	equ	0xFDD
  5968                           plusw2	equ	0xFDB
  5969                           fsr2h	equ	0xFDA
  5970                           fsr2l	equ	0xFD9
  5971                           status	equ	0xFD8
  5972                           
  5973 ;; *************** function _sprintf *****************
  5974 ;; Defined at:
  5975 ;;		line 492 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\doprnt.c"
  5976 ;; Parameters:    Size  Location     Type
  5977 ;;  sp              2    7[BANK0 ] PTR unsigned char 
  5978 ;;		 -> usb_send@usb_msg(64), 
  5979 ;;  f               2    9[BANK0 ] PTR const unsigned char 
  5980 ;;		 -> STR_28(33), 
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;  idx             1   17[BANK0 ] unsigned char 
  5983 ;;  tmpval          4    0        struct .
  5984 ;;  width           2   28[BANK0 ] int 
  5985 ;;  flag            2   26[BANK0 ] unsigned short 
  5986 ;;  len             2   24[BANK0 ] unsigned int 
  5987 ;;  val             2   22[BANK0 ] unsigned int 
  5988 ;;  cp              2   20[BANK0 ] PTR const unsigned char 
  5989 ;;		 -> sprintf@c(1), 
  5990 ;;  ap              2   18[BANK0 ] PTR void [1]
  5991 ;;		 -> ?_sprintf(2), 
  5992 ;;  c               1   31[BANK0 ] char 
  5993 ;;  prec            1   30[BANK0 ] char 
  5994 ;; Return value:  Size  Location     Type
  5995 ;;                  2    7[BANK0 ] int 
  5996 ;; Registers used:
  5997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5998 ;; Tracked objects:
  5999 ;;		On entry : 0/0
  6000 ;;		On exit  : 0/0
  6001 ;;		Unchanged: 0/0
  6002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6003 ;;      Params:         0       6       0       0       0       0       0       0       0
  6004 ;;      Locals:         0      15       0       0       0       0       0       0       0
  6005 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6006 ;;      Totals:         0      25       0       0       0       0       0       0       0
  6007 ;;Total ram usage:       25 bytes
  6008 ;; Hardware stack levels used:    1
  6009 ;; Hardware stack levels required when called:   12
  6010 ;; This function calls:
  6011 ;;		___lwdiv
  6012 ;;		___wmul
  6013 ;;		_isdigit
  6014 ;; This function is called by:
  6015 ;;		_usb_send
  6016 ;; This function uses a non-reentrant model
  6017 ;;
  6018                           
  6019                           	psect	text27
  6020  00001A                     __ptext27:
  6021                           	opt stack 0
  6022  00001A                     _sprintf:
  6023                           	opt stack 16
  6024                           
  6025                           ;doprnt.c: 494: va_list ap;
  6026                           ;doprnt.c: 499: signed char c;
  6027                           ;doprnt.c: 501: int width;
  6028                           ;doprnt.c: 506: signed char prec;
  6029                           ;doprnt.c: 508: unsigned short flag;
  6030                           ;doprnt.c: 523: union {
  6031                           ;doprnt.c: 524: unsigned long vd;
  6032                           ;doprnt.c: 525: double integ;
  6033                           ;doprnt.c: 526: } tmpval;
  6034                           ;doprnt.c: 528: unsigned int val;
  6035                           ;doprnt.c: 529: unsigned len;
  6036                           ;doprnt.c: 530: const char * cp;
  6037                           ;doprnt.c: 533: *ap = __va_start();
  6038                           
  6039                           ; BSR set to: 0
  6040                           ;incstack = 0
  6041  00001A  0EC5               	movlw	low (?_sprintf+4)
  6042  00001C  0100               	movlb	0	; () banked
  6043  00001E  6FCC               	movwf	sprintf@ap& (0+255),b
  6044  000020  0E00               	movlw	high (?_sprintf+4)
  6045  000022  0100               	movlb	0	; () banked
  6046  000024  6FCD               	movwf	(sprintf@ap+1)& (0+255),b
  6047                           
  6048                           ;doprnt.c: 536: while(c = *f++) {
  6049  000026  D232               	goto	l7062
  6050  000028                     l6908:
  6051                           
  6052                           ; BSR set to: 0
  6053                           ;doprnt.c: 538: if(c != '%')
  6054  000028  0E25               	movlw	37
  6055  00002A  0100               	movlb	0	; () banked
  6056  00002C  19D9               	xorwf	sprintf@c& (0+255),w,b
  6057  00002E  B4D8               	btfsc	status,2,c
  6058  000030  D00A               	goto	l6914
  6059                           
  6060                           ; BSR set to: 0
  6061                           ;doprnt.c: 540: {
  6062                           ;doprnt.c: 541: ((*sp++ = (c)));
  6063  000032  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  6064  000036  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  6065  00003A  C0D9  FFDF         	movff	sprintf@c,indf2
  6066                           
  6067                           ; BSR set to: 0
  6068  00003E  0100               	movlb	0	; () banked
  6069  000040  4BC1               	infsnz	sprintf@sp& (0+255),f,b
  6070  000042  2BC2               	incf	(sprintf@sp+1)& (0+255),f,b
  6071                           
  6072                           ;doprnt.c: 542: continue;
  6073  000044  D223               	goto	l7062
  6074  000046                     l6914:
  6075                           
  6076                           ; BSR set to: 0
  6077                           ;doprnt.c: 543: }
  6078                           ;doprnt.c: 546: width = 0;
  6079  000046  0E00               	movlw	0
  6080  000048  0100               	movlb	0	; () banked
  6081  00004A  6FD7               	movwf	(sprintf@width+1)& (0+255),b
  6082  00004C  0E00               	movlw	0
  6083  00004E  6FD6               	movwf	sprintf@width& (0+255),b
  6084                           
  6085                           ;doprnt.c: 548: flag = 0;
  6086  000050  0E00               	movlw	0
  6087  000052  0100               	movlb	0	; () banked
  6088  000054  6FD5               	movwf	(sprintf@flag+1)& (0+255),b
  6089  000056  0E00               	movlw	0
  6090  000058  6FD4               	movwf	sprintf@flag& (0+255),b
  6091                           
  6092                           ; BSR set to: 0
  6093                           ;doprnt.c: 551: switch(*f) {
  6094                           
  6095                           ;doprnt.c: 550: for(;;) {
  6096  00005A  D005               	goto	l6920
  6097  00005C                     l6916:
  6098                           
  6099                           ;doprnt.c: 554: flag |= 0x08;
  6100  00005C  0100               	movlb	0	; () banked
  6101  00005E  87D4               	bsf	sprintf@flag& (0+255),3,b
  6102                           
  6103                           ;doprnt.c: 555: f++;
  6104  000060  0100               	movlb	0	; () banked
  6105  000062  4BC3               	infsnz	sprintf@f& (0+255),f,b
  6106  000064  2BC4               	incf	(sprintf@f+1)& (0+255),f,b
  6107  000066                     l6920:
  6108  000066  C0C3  FFF6         	movff	sprintf@f,tblptrl
  6109  00006A  C0C4  FFF7         	movff	sprintf@f+1,tblptrh
  6110  00006E                     	if	0	;tblptru may be non-zero
  6111  00006E                     	endif
  6112  00006E                     	if	0	;tblptru may be non-zero
  6113  00006E                     	endif
  6114  00006E  0008               	tblrd		*
  6115  000070  50F5               	movf	tablat,w,c
  6116                           
  6117                           ; Switch size 1, requested type "space"
  6118                           ; Number of cases is 1, Range of values is 45 to 45
  6119                           ; switch strategies available:
  6120                           ; Name         Instructions Cycles
  6121                           ; simple_byte            4     3 (average)
  6122                           ;	Chosen strategy is simple_byte
  6123  000072  0A2D               	xorlw	45	; case 45
  6124  000074  B4D8               	btfsc	status,2,c
  6125  000076  D7F2               	goto	l6916
  6126                           
  6127                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6128                           
  6129                           ;doprnt.c: 586: }
  6130                           
  6131                           ;doprnt.c: 585: break;
  6132  000078  C0C3  FFF6         	movff	sprintf@f,tblptrl
  6133  00007C  C0C4  FFF7         	movff	sprintf@f+1,tblptrh
  6134  000080                     	if	0	;tblptru may be non-zero
  6135  000080                     	endif
  6136  000080                     	if	0	;tblptru may be non-zero
  6137  000080                     	endif
  6138  000080  0008               	tblrd		*
  6139  000082  50F5               	movf	tablat,w,c
  6140  000084  EC4C  F01B         	call	_isdigit
  6141  000088  A0D8               	btfss	status,0,c
  6142  00008A  D040               	goto	l6934
  6143                           
  6144                           ;doprnt.c: 598: width = 0;
  6145  00008C  0E00               	movlw	0
  6146  00008E  0100               	movlb	0	; () banked
  6147  000090  6FD7               	movwf	(sprintf@width+1)& (0+255),b
  6148  000092  0E00               	movlw	0
  6149  000094  6FD6               	movwf	sprintf@width& (0+255),b
  6150  000096                     l6926:
  6151                           
  6152                           ;doprnt.c: 600: width *= 10;
  6153  000096  C0D6  F0BA         	movff	sprintf@width,___wmul@multiplier
  6154  00009A  C0D7  F0BB         	movff	sprintf@width+1,___wmul@multiplier+1
  6155  00009E  0E00               	movlw	0
  6156  0000A0  0100               	movlb	0	; () banked
  6157  0000A2  6FBD               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6158  0000A4  0E0A               	movlw	10
  6159  0000A6  6FBC               	movwf	___wmul@multiplicand& (0+255),b
  6160  0000A8  EC84  F01A         	call	___wmul	;wreg free
  6161  0000AC  C0BA  F0D6         	movff	?___wmul,sprintf@width
  6162  0000B0  C0BB  F0D7         	movff	?___wmul+1,sprintf@width+1
  6163                           
  6164                           ;doprnt.c: 601: width += *f++ - '0';
  6165  0000B4  0ED0               	movlw	208
  6166  0000B6  0100               	movlb	0	; () banked
  6167  0000B8  6FC7               	movwf	??_sprintf& (0+255),b
  6168  0000BA  0EFF               	movlw	255
  6169  0000BC  0100               	movlb	0	; () banked
  6170  0000BE  6FC8               	movwf	(??_sprintf+1)& (0+255),b
  6171  0000C0  C0C3  FFF6         	movff	sprintf@f,tblptrl
  6172  0000C4  C0C4  FFF7         	movff	sprintf@f+1,tblptrh
  6173  0000C8                     	if	0	;tblptru may be non-zero
  6174  0000C8                     	endif
  6175  0000C8                     	if	0	;tblptru may be non-zero
  6176  0000C8                     	endif
  6177  0000C8  0008               	tblrd		*
  6178  0000CA  50F5               	movf	tablat,w,c
  6179  0000CC  0100               	movlb	0	; () banked
  6180  0000CE  6FC9               	movwf	(??_sprintf+2)& (0+255),b
  6181  0000D0  6BCA               	clrf	(??_sprintf+3)& (0+255),b
  6182  0000D2  0100               	movlb	0	; () banked
  6183  0000D4  51C7               	movf	??_sprintf& (0+255),w,b
  6184  0000D6  0100               	movlb	0	; () banked
  6185  0000D8  27C9               	addwf	(??_sprintf+2)& (0+255),f,b
  6186  0000DA  0100               	movlb	0	; () banked
  6187  0000DC  51C8               	movf	(??_sprintf+1)& (0+255),w,b
  6188  0000DE  0100               	movlb	0	; () banked
  6189  0000E0  23CA               	addwfc	(??_sprintf+3)& (0+255),f,b
  6190  0000E2  0100               	movlb	0	; () banked
  6191  0000E4  51C9               	movf	(??_sprintf+2)& (0+255),w,b
  6192  0000E6  0100               	movlb	0	; () banked
  6193  0000E8  27D6               	addwf	sprintf@width& (0+255),f,b
  6194  0000EA  0100               	movlb	0	; () banked
  6195  0000EC  51CA               	movf	(??_sprintf+3)& (0+255),w,b
  6196  0000EE  0100               	movlb	0	; () banked
  6197  0000F0  23D7               	addwfc	(sprintf@width+1)& (0+255),f,b
  6198                           
  6199                           ; BSR set to: 0
  6200  0000F2  0100               	movlb	0	; () banked
  6201  0000F4  4BC3               	infsnz	sprintf@f& (0+255),f,b
  6202  0000F6  2BC4               	incf	(sprintf@f+1)& (0+255),f,b
  6203                           
  6204                           ; BSR set to: 0
  6205                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6206  0000F8  C0C3  FFF6         	movff	sprintf@f,tblptrl
  6207  0000FC  C0C4  FFF7         	movff	sprintf@f+1,tblptrh
  6208  000100                     	if	0	;tblptru may be non-zero
  6209  000100                     	endif
  6210  000100                     	if	0	;tblptru may be non-zero
  6211  000100                     	endif
  6212  000100  0008               	tblrd		*
  6213  000102  50F5               	movf	tablat,w,c
  6214  000104  EC4C  F01B         	call	_isdigit
  6215  000108  B0D8               	btfsc	status,0,c
  6216  00010A  D7C5               	goto	l6926
  6217  00010C                     l6934:
  6218                           
  6219                           ;doprnt.c: 608: }
  6220                           ;doprnt.c: 611: if(*f == '.') {
  6221  00010C  C0C3  FFF6         	movff	sprintf@f,tblptrl
  6222  000110  C0C4  FFF7         	movff	sprintf@f+1,tblptrh
  6223  000114                     	if	0	;tblptru may be non-zero
  6224  000114                     	endif
  6225  000114                     	if	0	;tblptru may be non-zero
  6226  000114                     	endif
  6227  000114  0008               	tblrd		*
  6228  000116  50F5               	movf	tablat,w,c
  6229  000118  0A2E               	xorlw	46
  6230  00011A  A4D8               	btfss	status,2,c
  6231  00011C  D027               	goto	l6946
  6232                           
  6233                           ;doprnt.c: 612: flag |= 0x4000;
  6234  00011E  0100               	movlb	0	; () banked
  6235  000120  8DD5               	bsf	(sprintf@flag+1)& (0+255),6,b
  6236                           
  6237                           ;doprnt.c: 613: f++;
  6238  000122  0100               	movlb	0	; () banked
  6239  000124  4BC3               	infsnz	sprintf@f& (0+255),f,b
  6240  000126  2BC4               	incf	(sprintf@f+1)& (0+255),f,b
  6241                           
  6242                           ; BSR set to: 0
  6243                           ;doprnt.c: 620: {
  6244                           ;doprnt.c: 621: prec = 0;
  6245  000128  0E00               	movlw	0
  6246  00012A  0100               	movlb	0	; () banked
  6247  00012C  6FD8               	movwf	sprintf@prec& (0+255),b
  6248                           
  6249                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6250  00012E  D013               	goto	l6944
  6251  000130                     l6940:
  6252                           
  6253                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6254  000130  C0C3  FFF6         	movff	sprintf@f,tblptrl
  6255  000134  C0C4  FFF7         	movff	sprintf@f+1,tblptrh
  6256  000138                     	if	0	;tblptru may be non-zero
  6257  000138                     	endif
  6258  000138                     	if	0	;tblptru may be non-zero
  6259  000138                     	endif
  6260  000138  0008               	tblrd		*
  6261  00013A  CFF5 F0C7          	movff	tablat,??_sprintf
  6262  00013E  0100               	movlb	0	; () banked
  6263  000140  51D8               	movf	sprintf@prec& (0+255),w,b
  6264  000142  0D0A               	mullw	10
  6265  000144  50F3               	movf	prodl,w,c
  6266  000146  0100               	movlb	0	; () banked
  6267  000148  25C7               	addwf	??_sprintf& (0+255),w,b
  6268  00014A  0FD0               	addlw	208
  6269  00014C  0100               	movlb	0	; () banked
  6270  00014E  6FD8               	movwf	sprintf@prec& (0+255),b
  6271                           
  6272                           ; BSR set to: 0
  6273  000150  0100               	movlb	0	; () banked
  6274  000152  4BC3               	infsnz	sprintf@f& (0+255),f,b
  6275  000154  2BC4               	incf	(sprintf@f+1)& (0+255),f,b
  6276  000156                     l6944:
  6277                           
  6278                           ; BSR set to: 0
  6279  000156  C0C3  FFF6         	movff	sprintf@f,tblptrl
  6280  00015A  C0C4  FFF7         	movff	sprintf@f+1,tblptrh
  6281  00015E                     	if	0	;tblptru may be non-zero
  6282  00015E                     	endif
  6283  00015E                     	if	0	;tblptru may be non-zero
  6284  00015E                     	endif
  6285  00015E  0008               	tblrd		*
  6286  000160  50F5               	movf	tablat,w,c
  6287  000162  EC4C  F01B         	call	_isdigit
  6288  000166  A0D8               	btfss	status,0,c
  6289  000168  D095               	goto	l6994
  6290  00016A  D7E2               	goto	l6940
  6291  00016C                     l6946:
  6292                           
  6293                           ;doprnt.c: 626: prec = 0;
  6294  00016C  0E00               	movlw	0
  6295  00016E  0100               	movlb	0	; () banked
  6296  000170  6FD8               	movwf	sprintf@prec& (0+255),b
  6297                           
  6298                           ; BSR set to: 0
  6299                           ;doprnt.c: 630: }
  6300                           ;doprnt.c: 635: switch(c = *f++) {
  6301  000172  D090               	goto	l6994
  6302  000174                     l6948:
  6303                           
  6304                           ; BSR set to: 0
  6305                           ;doprnt.c: 707: flag |= 0x2000;
  6306  000174  0100               	movlb	0	; () banked
  6307  000176  8BD5               	bsf	(sprintf@flag+1)& (0+255),5,b
  6308                           
  6309                           ; BSR set to: 0
  6310                           ;doprnt.c: 723: break;
  6311                           
  6312                           ;doprnt.c: 718: case 'x':
  6313  000178  D0A2               	goto	l6996
  6314  00017A                     l6950:
  6315                           
  6316                           ; BSR set to: 0
  6317                           ;doprnt.c: 753: if(prec && prec < len)
  6318  00017A  0100               	movlb	0	; () banked
  6319  00017C  51D8               	movf	sprintf@prec& (0+255),w,b
  6320  00017E  0100               	movlb	0	; () banked
  6321  000180  B4D8               	btfsc	status,2,c
  6322  000182  D017               	goto	l6956
  6323                           
  6324                           ; BSR set to: 0
  6325  000184  C0D8  F0C7         	movff	sprintf@prec,??_sprintf
  6326  000188  0100               	movlb	0	; () banked
  6327  00018A  6BC8               	clrf	(??_sprintf+1)& (0+255),b
  6328  00018C  BFC7               	btfsc	??_sprintf& (0+255),7,b
  6329  00018E  07C8               	decf	(??_sprintf+1)& (0+255),f,b
  6330  000190  0100               	movlb	0	; () banked
  6331  000192  51D2               	movf	sprintf@len& (0+255),w,b
  6332  000194  0100               	movlb	0	; () banked
  6333  000196  5DC7               	subwf	??_sprintf& (0+255),w,b
  6334  000198  0100               	movlb	0	; () banked
  6335  00019A  51D3               	movf	(sprintf@len+1)& (0+255),w,b
  6336  00019C  0100               	movlb	0	; () banked
  6337  00019E  59C8               	subwfb	(??_sprintf+1)& (0+255),w,b
  6338  0001A0  B0D8               	btfsc	status,0,c
  6339  0001A2  D007               	goto	l6956
  6340                           
  6341                           ; BSR set to: 0
  6342                           ;doprnt.c: 754: len = prec;
  6343  0001A4  0100               	movlb	0	; () banked
  6344  0001A6  51D8               	movf	sprintf@prec& (0+255),w,b
  6345  0001A8  0100               	movlb	0	; () banked
  6346  0001AA  6FD2               	movwf	sprintf@len& (0+255),b
  6347  0001AC  6BD3               	clrf	(sprintf@len+1)& (0+255),b
  6348  0001AE  BFD2               	btfsc	sprintf@len& (0+255),7,b
  6349  0001B0  07D3               	decf	(sprintf@len+1)& (0+255),f,b
  6350  0001B2                     l6956:
  6351                           
  6352                           ; BSR set to: 0
  6353                           ;doprnt.c: 757: if(width > len)
  6354  0001B2  0100               	movlb	0	; () banked
  6355  0001B4  51D6               	movf	sprintf@width& (0+255),w,b
  6356  0001B6  0100               	movlb	0	; () banked
  6357  0001B8  5DD2               	subwf	sprintf@len& (0+255),w,b
  6358  0001BA  0100               	movlb	0	; () banked
  6359  0001BC  51D7               	movf	(sprintf@width+1)& (0+255),w,b
  6360  0001BE  0100               	movlb	0	; () banked
  6361  0001C0  59D3               	subwfb	(sprintf@len+1)& (0+255),w,b
  6362  0001C2  B0D8               	btfsc	status,0,c
  6363  0001C4  D009               	goto	l6960
  6364                           
  6365                           ; BSR set to: 0
  6366                           ;doprnt.c: 758: width -= len;
  6367  0001C6  0100               	movlb	0	; () banked
  6368  0001C8  51D2               	movf	sprintf@len& (0+255),w,b
  6369  0001CA  0100               	movlb	0	; () banked
  6370  0001CC  5FD6               	subwf	sprintf@width& (0+255),f,b
  6371  0001CE  0100               	movlb	0	; () banked
  6372  0001D0  51D3               	movf	(sprintf@len+1)& (0+255),w,b
  6373  0001D2  0100               	movlb	0	; () banked
  6374  0001D4  5BD7               	subwfb	(sprintf@width+1)& (0+255),f,b
  6375  0001D6  D005               	goto	l6962
  6376  0001D8                     l6960:
  6377                           
  6378                           ; BSR set to: 0
  6379                           ;doprnt.c: 759: else
  6380                           ;doprnt.c: 760: width = 0;
  6381  0001D8  0E00               	movlw	0
  6382  0001DA  0100               	movlb	0	; () banked
  6383  0001DC  6FD7               	movwf	(sprintf@width+1)& (0+255),b
  6384  0001DE  0E00               	movlw	0
  6385  0001E0  6FD6               	movwf	sprintf@width& (0+255),b
  6386  0001E2                     l6962:
  6387                           
  6388                           ; BSR set to: 0
  6389                           ;doprnt.c: 762: if(!(flag & 0x08))
  6390  0001E2  0100               	movlb	0	; () banked
  6391  0001E4  A7D4               	btfss	sprintf@flag& (0+255),3,b
  6392  0001E6  D00A               	goto	l6970
  6393  0001E8  D025               	goto	l6978
  6394  0001EA                     l6966:
  6395                           
  6396                           ; BSR set to: 0
  6397                           ;doprnt.c: 765: ((*sp++ = (' ')));
  6398  0001EA  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  6399  0001EE  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  6400  0001F2  0E20               	movlw	32
  6401  0001F4  6EDF               	movwf	indf2,c
  6402                           
  6403                           ; BSR set to: 0
  6404  0001F6  0100               	movlb	0	; () banked
  6405  0001F8  4BC1               	infsnz	sprintf@sp& (0+255),f,b
  6406  0001FA  2BC2               	incf	(sprintf@sp+1)& (0+255),f,b
  6407  0001FC                     l6970:
  6408                           
  6409                           ; BSR set to: 0
  6410  0001FC  0100               	movlb	0	; () banked
  6411  0001FE  07D6               	decf	sprintf@width& (0+255),f,b
  6412  000200  A0D8               	btfss	status,0,c
  6413  000202  07D7               	decf	(sprintf@width+1)& (0+255),f,b
  6414  000204  0100               	movlb	0	; () banked
  6415  000206  29D6               	incf	sprintf@width& (0+255),w,b
  6416  000208  E1F0               	bnz	l6966
  6417  00020A  0100               	movlb	0	; () banked
  6418  00020C  29D7               	incf	(sprintf@width+1)& (0+255),w,b
  6419  00020E  B4D8               	btfsc	status,2,c
  6420  000210  D011               	goto	l6978
  6421  000212  D7EB               	goto	l6966
  6422  000214                     l6972:
  6423                           
  6424                           ; BSR set to: 0
  6425                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
  6426  000214  C0CE  FFD9         	movff	sprintf@cp,fsr2l
  6427  000218  C0CF  FFDA         	movff	sprintf@cp+1,fsr2h
  6428  00021C  C0C1  FFE1         	movff	sprintf@sp,fsr1l
  6429  000220  C0C2  FFE2         	movff	sprintf@sp+1,fsr1h
  6430  000224  CFDF FFE7          	movff	indf2,indf1
  6431                           
  6432                           ; BSR set to: 0
  6433  000228  0100               	movlb	0	; () banked
  6434  00022A  4BCE               	infsnz	sprintf@cp& (0+255),f,b
  6435  00022C  2BCF               	incf	(sprintf@cp+1)& (0+255),f,b
  6436                           
  6437                           ; BSR set to: 0
  6438  00022E  0100               	movlb	0	; () banked
  6439  000230  4BC1               	infsnz	sprintf@sp& (0+255),f,b
  6440  000232  2BC2               	incf	(sprintf@sp+1)& (0+255),f,b
  6441  000234                     l6978:
  6442                           
  6443                           ; BSR set to: 0
  6444  000234  0100               	movlb	0	; () banked
  6445  000236  07D2               	decf	sprintf@len& (0+255),f,b
  6446  000238  A0D8               	btfss	status,0,c
  6447  00023A  07D3               	decf	(sprintf@len+1)& (0+255),f,b
  6448  00023C  0100               	movlb	0	; () banked
  6449  00023E  29D2               	incf	sprintf@len& (0+255),w,b
  6450  000240  E1E9               	bnz	l6972
  6451  000242  0100               	movlb	0	; () banked
  6452  000244  29D3               	incf	(sprintf@len+1)& (0+255),w,b
  6453  000246  A4D8               	btfss	status,2,c
  6454  000248  D7E5               	goto	l6972
  6455                           
  6456                           ; BSR set to: 0
  6457                           ;doprnt.c: 770: if(flag & 0x08)
  6458  00024A  0100               	movlb	0	; () banked
  6459  00024C  B7D4               	btfsc	sprintf@flag& (0+255),3,b
  6460  00024E  D00A               	goto	l6986
  6461  000250  D11D               	goto	l7062
  6462  000252                     l6982:
  6463                           
  6464                           ; BSR set to: 0
  6465                           ;doprnt.c: 772: ((*sp++ = (' ')));
  6466  000252  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  6467  000256  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  6468  00025A  0E20               	movlw	32
  6469  00025C  6EDF               	movwf	indf2,c
  6470                           
  6471                           ; BSR set to: 0
  6472  00025E  0100               	movlb	0	; () banked
  6473  000260  4BC1               	infsnz	sprintf@sp& (0+255),f,b
  6474  000262  2BC2               	incf	(sprintf@sp+1)& (0+255),f,b
  6475  000264                     l6986:
  6476                           
  6477                           ; BSR set to: 0
  6478  000264  0100               	movlb	0	; () banked
  6479  000266  07D6               	decf	sprintf@width& (0+255),f,b
  6480  000268  A0D8               	btfss	status,0,c
  6481  00026A  07D7               	decf	(sprintf@width+1)& (0+255),f,b
  6482  00026C  0100               	movlb	0	; () banked
  6483  00026E  29D6               	incf	sprintf@width& (0+255),w,b
  6484  000270  E1F0               	bnz	l6982
  6485  000272  0100               	movlb	0	; () banked
  6486  000274  29D7               	incf	(sprintf@width+1)& (0+255),w,b
  6487  000276  B4D8               	btfsc	status,2,c
  6488  000278  D109               	goto	l7062
  6489  00027A  D7EB               	goto	l6982
  6490  00027C                     l6988:
  6491                           
  6492                           ; BSR set to: 0
  6493                           ;doprnt.c: 805: cp = (char *)&c;
  6494  00027C  0ED9               	movlw	low sprintf@c
  6495  00027E  0100               	movlb	0	; () banked
  6496  000280  6FCE               	movwf	sprintf@cp& (0+255),b
  6497  000282  0E00               	movlw	high sprintf@c
  6498  000284  0100               	movlb	0	; () banked
  6499  000286  6FCF               	movwf	(sprintf@cp+1)& (0+255),b
  6500                           
  6501                           ; BSR set to: 0
  6502                           ;doprnt.c: 806: len = 1;
  6503  000288  0E00               	movlw	0
  6504  00028A  0100               	movlb	0	; () banked
  6505  00028C  6FD3               	movwf	(sprintf@len+1)& (0+255),b
  6506  00028E  0E01               	movlw	1
  6507  000290  6FD2               	movwf	sprintf@len& (0+255),b
  6508                           
  6509                           ;doprnt.c: 807: goto dostring;
  6510  000292  D773               	goto	l6950
  6511  000294                     l6994:
  6512  000294  C0C3  FFF6         	movff	sprintf@f,tblptrl
  6513  000298  C0C4  FFF7         	movff	sprintf@f+1,tblptrh
  6514  00029C  0100               	movlb	0	; () banked
  6515  00029E  4BC3               	infsnz	sprintf@f& (0+255),f,b
  6516  0002A0  2BC4               	incf	(sprintf@f+1)& (0+255),f,b
  6517  0002A2                     	if	0	;tblptru may be non-zero
  6518  0002A2                     	endif
  6519  0002A2                     	if	0	;tblptru may be non-zero
  6520  0002A2                     	endif
  6521  0002A2  0008               	tblrd		*
  6522  0002A4  CFF5 F0D9          	movff	tablat,sprintf@c
  6523  0002A8  0100               	movlb	0	; () banked
  6524  0002AA  51D9               	movf	sprintf@c& (0+255),w,b
  6525                           
  6526                           ; Switch size 1, requested type "space"
  6527                           ; Number of cases is 3, Range of values is 0 to 120
  6528                           ; switch strategies available:
  6529                           ; Name         Instructions Cycles
  6530                           ; simple_byte           10     6 (average)
  6531                           ;	Chosen strategy is simple_byte
  6532  0002AC  0A00               	xorlw	0	; case 0
  6533  0002AE  B4D8               	btfsc	status,2,c
  6534  0002B0  D0FB               	goto	l7064
  6535  0002B2  0A70               	xorlw	112	; case 112
  6536  0002B4  B4D8               	btfsc	status,2,c
  6537  0002B6  D75E               	goto	l6948
  6538  0002B8  0A08               	xorlw	8	; case 120
  6539  0002BA  A4D8               	btfss	status,2,c
  6540  0002BC  D7DF               	goto	l6988
  6541  0002BE                     l6996:
  6542                           
  6543                           ; BSR set to: 0
  6544                           ;doprnt.c: 1273: {
  6545                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  6546  0002BE  C0CC  FFD9         	movff	sprintf@ap,fsr2l
  6547  0002C2  C0CD  FFDA         	movff	sprintf@ap+1,fsr2h
  6548  0002C6  CFDE F0D0          	movff	postinc2,sprintf@val
  6549  0002CA  CFDD F0D1          	movff	postdec2,sprintf@val+1
  6550                           
  6551                           ; BSR set to: 0
  6552  0002CE  0E02               	movlw	2
  6553  0002D0  0100               	movlb	0	; () banked
  6554  0002D2  27CC               	addwf	sprintf@ap& (0+255),f,b
  6555  0002D4  0E00               	movlw	0
  6556  0002D6  23CD               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6557                           
  6558                           ; BSR set to: 0
  6559                           ;doprnt.c: 1287: }
  6560                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  6561  0002D8  0100               	movlb	0	; () banked
  6562  0002DA  51D8               	movf	sprintf@prec& (0+255),w,b
  6563  0002DC  0100               	movlb	0	; () banked
  6564  0002DE  A4D8               	btfss	status,2,c
  6565  0002E0  D008               	goto	l7006
  6566                           
  6567                           ; BSR set to: 0
  6568  0002E2  0100               	movlb	0	; () banked
  6569  0002E4  51D0               	movf	sprintf@val& (0+255),w,b
  6570  0002E6  0100               	movlb	0	; () banked
  6571  0002E8  11D1               	iorwf	(sprintf@val+1)& (0+255),w,b
  6572  0002EA  A4D8               	btfss	status,2,c
  6573  0002EC  D002               	goto	l7006
  6574                           
  6575                           ; BSR set to: 0
  6576                           ;doprnt.c: 1291: prec++;
  6577  0002EE  0100               	movlb	0	; () banked
  6578  0002F0  2BD8               	incf	sprintf@prec& (0+255),f,b
  6579  0002F2                     l7006:
  6580                           
  6581                           ; BSR set to: 0
  6582                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  6583  0002F2  0E01               	movlw	1
  6584  0002F4  0100               	movlb	0	; () banked
  6585  0002F6  6FD9               	movwf	sprintf@c& (0+255),b
  6586  0002F8                     l7008:
  6587                           
  6588                           ; BSR set to: 0
  6589  0002F8  0E04               	movlw	4
  6590  0002FA  0100               	movlb	0	; () banked
  6591  0002FC  19D9               	xorwf	sprintf@c& (0+255),w,b
  6592  0002FE  B4D8               	btfsc	status,2,c
  6593  000300  D016               	goto	l7020
  6594                           
  6595                           ; BSR set to: 0
  6596                           ;doprnt.c: 1317: if(val < hexpowers[c])
  6597                           
  6598                           ; BSR set to: 0
  6599                           
  6600                           ; BSR set to: 0
  6601  000302  0100               	movlb	0	; () banked
  6602  000304  51D9               	movf	sprintf@c& (0+255),w,b
  6603  000306  0D02               	mullw	2
  6604  000308  0E59               	movlw	low _hexpowers
  6605  00030A  24F3               	addwf	prodl,w,c
  6606  00030C  6EF6               	movwf	tblptrl,c
  6607  00030E  0E7D               	movlw	high _hexpowers
  6608  000310  20F4               	addwfc	prodh,w,c
  6609  000312  6EF7               	movwf	tblptrh,c
  6610  000314                     	if	0	;There are less than 3 active tblptr bytes
  6611  000314                     	endif
  6612  000314  0009               	tblrd		*+
  6613  000316  50F5               	movf	tablat,w,c
  6614  000318  0100               	movlb	0	; () banked
  6615  00031A  5DD0               	subwf	sprintf@val& (0+255),w,b
  6616  00031C  0009               	tblrd		*+
  6617  00031E  50F5               	movf	tablat,w,c
  6618  000320  0100               	movlb	0	; () banked
  6619  000322  59D1               	subwfb	(sprintf@val+1)& (0+255),w,b
  6620  000324  A0D8               	btfss	status,0,c
  6621  000326  D003               	goto	l7020
  6622                           
  6623                           ; BSR set to: 0
  6624                           
  6625                           ; BSR set to: 0
  6626                           
  6627                           ; BSR set to: 0
  6628                           ;doprnt.c: 1318: break;
  6629  000328  0100               	movlb	0	; () banked
  6630  00032A  2BD9               	incf	sprintf@c& (0+255),f,b
  6631  00032C  D7E5               	goto	l7008
  6632  00032E                     l7020:
  6633                           
  6634                           ; BSR set to: 0
  6635                           ;doprnt.c: 1339: if(c < prec)
  6636  00032E  0100               	movlb	0	; () banked
  6637  000330  51D9               	movf	sprintf@c& (0+255),w,b
  6638  000332  0A80               	xorlw	128
  6639  000334  0100               	movlb	0	; () banked
  6640  000336  6FC7               	movwf	??_sprintf& (0+255),b
  6641  000338  0100               	movlb	0	; () banked
  6642  00033A  51D8               	movf	sprintf@prec& (0+255),w,b
  6643  00033C  0A80               	xorlw	128
  6644  00033E  0100               	movlb	0	; () banked
  6645  000340  5DC7               	subwf	??_sprintf& (0+255),w,b
  6646  000342  B0D8               	btfsc	status,0,c
  6647  000344  D003               	goto	l7024
  6648                           
  6649                           ; BSR set to: 0
  6650                           ;doprnt.c: 1340: c = prec;
  6651  000346  C0D8  F0D9         	movff	sprintf@prec,sprintf@c
  6652  00034A  D00D               	goto	l7028
  6653  00034C                     l7024:
  6654                           
  6655                           ; BSR set to: 0
  6656                           ;doprnt.c: 1341: else if(prec < c)
  6657  00034C  0100               	movlb	0	; () banked
  6658  00034E  51D8               	movf	sprintf@prec& (0+255),w,b
  6659  000350  0A80               	xorlw	128
  6660  000352  0100               	movlb	0	; () banked
  6661  000354  6FC7               	movwf	??_sprintf& (0+255),b
  6662  000356  0100               	movlb	0	; () banked
  6663  000358  51D9               	movf	sprintf@c& (0+255),w,b
  6664  00035A  0A80               	xorlw	128
  6665  00035C  0100               	movlb	0	; () banked
  6666  00035E  5DC7               	subwf	??_sprintf& (0+255),w,b
  6667  000360  A0D8               	btfss	status,0,c
  6668                           
  6669                           ; BSR set to: 0
  6670                           ;doprnt.c: 1342: prec = c;
  6671  000362  C0D9  F0D8         	movff	sprintf@c,sprintf@prec
  6672  000366                     l7028:
  6673                           
  6674                           ; BSR set to: 0
  6675                           ;doprnt.c: 1381: if(width > c)
  6676  000366  0E80               	movlw	128
  6677  000368  0100               	movlb	0	; () banked
  6678  00036A  BFD9               	btfsc	sprintf@c& (0+255),7,b
  6679  00036C  0E7F               	movlw	127
  6680  00036E  0100               	movlb	0	; () banked
  6681  000370  6FC7               	movwf	??_sprintf& (0+255),b
  6682  000372  0100               	movlb	0	; () banked
  6683  000374  51D6               	movf	sprintf@width& (0+255),w,b
  6684  000376  0100               	movlb	0	; () banked
  6685  000378  5DD9               	subwf	sprintf@c& (0+255),w,b
  6686  00037A  0100               	movlb	0	; () banked
  6687  00037C  51D7               	movf	(sprintf@width+1)& (0+255),w,b
  6688  00037E  0A80               	xorlw	128
  6689  000380  0100               	movlb	0	; () banked
  6690  000382  59C7               	subwfb	??_sprintf& (0+255),w,b
  6691  000384  B0D8               	btfsc	status,0,c
  6692  000386  D00B               	goto	l7032
  6693                           
  6694                           ; BSR set to: 0
  6695                           ;doprnt.c: 1382: width -= c;
  6696  000388  0100               	movlb	0	; () banked
  6697  00038A  51D9               	movf	sprintf@c& (0+255),w,b
  6698  00038C  0100               	movlb	0	; () banked
  6699  00038E  5FD6               	subwf	sprintf@width& (0+255),f,b
  6700  000390  0E00               	movlw	0
  6701  000392  0100               	movlb	0	; () banked
  6702  000394  BFD9               	btfsc	sprintf@c& (0+255),7,b
  6703  000396  0EFF               	movlw	255
  6704  000398  0100               	movlb	0	; () banked
  6705  00039A  5BD7               	subwfb	(sprintf@width+1)& (0+255),f,b
  6706  00039C  D005               	goto	l7034
  6707  00039E                     l7032:
  6708                           
  6709                           ; BSR set to: 0
  6710                           ;doprnt.c: 1383: else
  6711                           ;doprnt.c: 1384: width = 0;
  6712  00039E  0E00               	movlw	0
  6713  0003A0  0100               	movlb	0	; () banked
  6714  0003A2  6FD7               	movwf	(sprintf@width+1)& (0+255),b
  6715  0003A4  0E00               	movlw	0
  6716  0003A6  6FD6               	movwf	sprintf@width& (0+255),b
  6717  0003A8                     l7034:
  6718                           
  6719                           ; BSR set to: 0
  6720                           ;doprnt.c: 1422: {
  6721                           ;doprnt.c: 1424: if(width
  6722                           ;doprnt.c: 1426: && !(flag & 0x08)
  6723                           ;doprnt.c: 1428: )
  6724  0003A8  0100               	movlb	0	; () banked
  6725  0003AA  51D6               	movf	sprintf@width& (0+255),w,b
  6726  0003AC  0100               	movlb	0	; () banked
  6727  0003AE  11D7               	iorwf	(sprintf@width+1)& (0+255),w,b
  6728  0003B0  B4D8               	btfsc	status,2,c
  6729  0003B2  D046               	goto	l7052
  6730                           
  6731                           ; BSR set to: 0
  6732  0003B4  0100               	movlb	0	; () banked
  6733  0003B6  B7D4               	btfsc	sprintf@flag& (0+255),3,b
  6734  0003B8  D043               	goto	l7052
  6735  0003BA                     l7038:
  6736                           
  6737                           ; BSR set to: 0
  6738                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  6739  0003BA  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  6740  0003BE  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  6741  0003C2  0E20               	movlw	32
  6742  0003C4  6EDF               	movwf	indf2,c
  6743                           
  6744                           ; BSR set to: 0
  6745  0003C6  0100               	movlb	0	; () banked
  6746  0003C8  4BC1               	infsnz	sprintf@sp& (0+255),f,b
  6747  0003CA  2BC2               	incf	(sprintf@sp+1)& (0+255),f,b
  6748                           
  6749                           ; BSR set to: 0
  6750                           ;doprnt.c: 1431: while(--width);
  6751  0003CC  0100               	movlb	0	; () banked
  6752  0003CE  07D6               	decf	sprintf@width& (0+255),f,b
  6753  0003D0  A0D8               	btfss	status,0,c
  6754  0003D2  07D7               	decf	(sprintf@width+1)& (0+255),f,b
  6755  0003D4  0100               	movlb	0	; () banked
  6756  0003D6  51D6               	movf	sprintf@width& (0+255),w,b
  6757  0003D8  0100               	movlb	0	; () banked
  6758  0003DA  11D7               	iorwf	(sprintf@width+1)& (0+255),w,b
  6759  0003DC  B4D8               	btfsc	status,2,c
  6760  0003DE  D030               	goto	l7052
  6761  0003E0  D7EC               	goto	l7038
  6762  0003E2                     l7044:
  6763                           
  6764                           ; BSR set to: 0
  6765                           ;doprnt.c: 1478: {
  6766                           ;doprnt.c: 1499: {
  6767                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  6768  0003E2  C0D0  F0BA         	movff	sprintf@val,___lwdiv@dividend
  6769  0003E6  C0D1  F0BB         	movff	sprintf@val+1,___lwdiv@dividend+1
  6770  0003EA  0100               	movlb	0	; () banked
  6771  0003EC  51D8               	movf	sprintf@prec& (0+255),w,b
  6772  0003EE  0D02               	mullw	2
  6773  0003F0  0E59               	movlw	low _hexpowers
  6774  0003F2  24F3               	addwf	prodl,w,c
  6775  0003F4  6EF6               	movwf	tblptrl,c
  6776  0003F6  0E7D               	movlw	high _hexpowers
  6777  0003F8  20F4               	addwfc	prodh,w,c
  6778  0003FA  6EF7               	movwf	tblptrh,c
  6779  0003FC                     	if	0	;There are less than 3 active tblptr bytes
  6780  0003FC                     	endif
  6781  0003FC  0009               	tblrd		*+
  6782  0003FE  CFF5 F0BC          	movff	tablat,___lwdiv@divisor
  6783  000402  000A               	tblrd		*-
  6784  000404  CFF5 F0BD          	movff	tablat,___lwdiv@divisor+1
  6785  000408  ECCD  F017         	call	___lwdiv	;wreg free
  6786  00040C  0100               	movlb	0	; () banked
  6787  00040E  51BA               	movf	?___lwdiv& (0+255),w,b
  6788  000410  0B0F               	andlw	15
  6789  000412  0100               	movlb	0	; () banked
  6790  000414  6FCB               	movwf	sprintf@idx& (0+255),b
  6791                           
  6792                           ; BSR set to: 0
  6793                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  6794  000416  0100               	movlb	0	; () banked
  6795  000418  51CB               	movf	sprintf@idx& (0+255),w,b
  6796  00041A  0D01               	mullw	1
  6797  00041C  0EC6               	movlw	low STR_38
  6798  00041E  24F3               	addwf	prodl,w,c
  6799  000420  6EF6               	movwf	tblptrl,c
  6800  000422  0E7F               	movlw	high STR_38
  6801  000424  20F4               	addwfc	prodh,w,c
  6802  000426  6EF7               	movwf	tblptrh,c
  6803  000428                     	if	0	;There are less than 3 active tblptr bytes
  6804  000428                     	endif
  6805  000428  0008               	tblrd		*
  6806  00042A  CFF5 F0D9          	movff	tablat,sprintf@c
  6807                           
  6808                           ; BSR set to: 0
  6809                           ;doprnt.c: 1508: }
  6810                           ;doprnt.c: 1523: }
  6811                           ;doprnt.c: 1524: ((*sp++ = (c)));
  6812  00042E  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  6813  000432  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  6814  000436  C0D9  FFDF         	movff	sprintf@c,indf2
  6815                           
  6816                           ; BSR set to: 0
  6817  00043A  0100               	movlb	0	; () banked
  6818  00043C  4BC1               	infsnz	sprintf@sp& (0+255),f,b
  6819  00043E  2BC2               	incf	(sprintf@sp+1)& (0+255),f,b
  6820  000440                     l7052:
  6821                           
  6822                           ; BSR set to: 0
  6823  000440  0100               	movlb	0	; () banked
  6824  000442  07D8               	decf	sprintf@prec& (0+255),f,b
  6825  000444  0100               	movlb	0	; () banked
  6826  000446  29D8               	incf	sprintf@prec& (0+255),w,b
  6827  000448  A4D8               	btfss	status,2,c
  6828  00044A  D7CB               	goto	l7044
  6829                           
  6830                           ; BSR set to: 0
  6831                           ;doprnt.c: 1525: }
  6832                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
  6833  00044C  0100               	movlb	0	; () banked
  6834  00044E  A7D4               	btfss	sprintf@flag& (0+255),3,b
  6835  000450  D01D               	goto	l7062
  6836                           
  6837                           ; BSR set to: 0
  6838  000452  0100               	movlb	0	; () banked
  6839  000454  BFD7               	btfsc	(sprintf@width+1)& (0+255),7,b
  6840  000456  D01A               	goto	l7062
  6841  000458  0100               	movlb	0	; () banked
  6842  00045A  51D7               	movf	(sprintf@width+1)& (0+255),w,b
  6843  00045C  E104               	bnz	l7056
  6844  00045E  0100               	movlb	0	; () banked
  6845  000460  05D6               	decf	sprintf@width& (0+255),w,b
  6846  000462  A0D8               	btfss	status,0,c
  6847  000464  D013               	goto	l7062
  6848  000466                     l7056:
  6849                           
  6850                           ; BSR set to: 0
  6851                           ;doprnt.c: 1530: ((*sp++ = (' ')));
  6852  000466  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  6853  00046A  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  6854  00046E  0E20               	movlw	32
  6855  000470  6EDF               	movwf	indf2,c
  6856                           
  6857                           ; BSR set to: 0
  6858  000472  0100               	movlb	0	; () banked
  6859  000474  4BC1               	infsnz	sprintf@sp& (0+255),f,b
  6860  000476  2BC2               	incf	(sprintf@sp+1)& (0+255),f,b
  6861                           
  6862                           ; BSR set to: 0
  6863                           ;doprnt.c: 1531: while(--width);
  6864  000478  0100               	movlb	0	; () banked
  6865  00047A  07D6               	decf	sprintf@width& (0+255),f,b
  6866  00047C  A0D8               	btfss	status,0,c
  6867  00047E  07D7               	decf	(sprintf@width+1)& (0+255),f,b
  6868  000480  0100               	movlb	0	; () banked
  6869  000482  51D6               	movf	sprintf@width& (0+255),w,b
  6870  000484  0100               	movlb	0	; () banked
  6871  000486  11D7               	iorwf	(sprintf@width+1)& (0+255),w,b
  6872  000488  A4D8               	btfss	status,2,c
  6873  00048A  D7ED               	goto	l7056
  6874  00048C                     l7062:
  6875                           
  6876                           ; BSR set to: 0
  6877  00048C  C0C3  FFF6         	movff	sprintf@f,tblptrl
  6878  000490  C0C4  FFF7         	movff	sprintf@f+1,tblptrh
  6879  000494  0100               	movlb	0	; () banked
  6880  000496  4BC3               	infsnz	sprintf@f& (0+255),f,b
  6881  000498  2BC4               	incf	(sprintf@f+1)& (0+255),f,b
  6882  00049A                     	if	0	;tblptru may be non-zero
  6883  00049A                     	endif
  6884  00049A                     	if	0	;tblptru may be non-zero
  6885  00049A                     	endif
  6886  00049A  0008               	tblrd		*
  6887  00049C  CFF5 F0D9          	movff	tablat,sprintf@c
  6888  0004A0  0100               	movlb	0	; () banked
  6889  0004A2  51D9               	movf	sprintf@c& (0+255),w,b
  6890  0004A4  A4D8               	btfss	status,2,c
  6891  0004A6  D5C0               	goto	l6908
  6892  0004A8                     l7064:
  6893                           
  6894                           ; BSR set to: 0
  6895                           ;doprnt.c: 1538: *sp = 0;
  6896  0004A8  C0C1  FFD9         	movff	sprintf@sp,fsr2l
  6897  0004AC  C0C2  FFDA         	movff	sprintf@sp+1,fsr2h
  6898  0004B0  0E00               	movlw	0
  6899  0004B2  6EDF               	movwf	indf2,c
  6900  0004B4  0012               	return	
  6901  0004B6                     __end_of_sprintf:
  6902                           	opt stack 0
  6903                           tblptru	equ	0xFF8
  6904                           tblptrh	equ	0xFF7
  6905                           tblptrl	equ	0xFF6
  6906                           tablat	equ	0xFF5
  6907                           prodh	equ	0xFF4
  6908                           prodl	equ	0xFF3
  6909                           postinc0	equ	0xFEE
  6910                           wreg	equ	0xFE8
  6911                           indf1	equ	0xFE7
  6912                           postdec1	equ	0xFE5
  6913                           fsr1h	equ	0xFE2
  6914                           fsr1l	equ	0xFE1
  6915                           indf2	equ	0xFDF
  6916                           postinc2	equ	0xFDE
  6917                           postdec2	equ	0xFDD
  6918                           plusw2	equ	0xFDB
  6919                           fsr2h	equ	0xFDA
  6920                           fsr2l	equ	0xFD9
  6921                           status	equ	0xFD8
  6922                           
  6923 ;; *************** function _isdigit *****************
  6924 ;; Defined at:
  6925 ;;		line 8 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\isdigit.c"
  6926 ;; Parameters:    Size  Location     Type
  6927 ;;  c               1    wreg     unsigned char 
  6928 ;; Auto vars:     Size  Location     Type
  6929 ;;  c               1    2[BANK0 ] unsigned char 
  6930 ;; Return value:  Size  Location     Type
  6931 ;;		None               void
  6932 ;; Registers used:
  6933 ;;		wreg, status,2, status,0
  6934 ;; Tracked objects:
  6935 ;;		On entry : 0/0
  6936 ;;		On exit  : 0/0
  6937 ;;		Unchanged: 0/0
  6938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6939 ;;      Params:         0       0       0       0       0       0       0       0       0
  6940 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6941 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6942 ;;      Totals:         0       3       0       0       0       0       0       0       0
  6943 ;;Total ram usage:        3 bytes
  6944 ;; Hardware stack levels used:    1
  6945 ;; Hardware stack levels required when called:   11
  6946 ;; This function calls:
  6947 ;;		Nothing
  6948 ;; This function is called by:
  6949 ;;		_sprintf
  6950 ;; This function uses a non-reentrant model
  6951 ;;
  6952                           
  6953                           	psect	text28
  6954  003698                     __ptext28:
  6955                           	opt stack 0
  6956  003698                     _isdigit:
  6957                           	opt stack 16
  6958                           
  6959                           ; BSR set to: 0
  6960                           ;incstack = 0
  6961                           ;isdigit@c stored from wreg
  6962  003698  0100               	movlb	0	; () banked
  6963  00369A  6FBC               	movwf	isdigit@c& (0+255),b
  6964  00369C  0E00               	movlw	0
  6965  00369E  0100               	movlb	0	; () banked
  6966  0036A0  6FBB               	movwf	_isdigit$3249& (0+255),b
  6967                           
  6968                           ; BSR set to: 0
  6969  0036A2  0E3A               	movlw	58
  6970  0036A4  0100               	movlb	0	; () banked
  6971  0036A6  61BC               	cpfslt	isdigit@c& (0+255),b
  6972  0036A8  D007               	goto	l6626
  6973                           
  6974                           ; BSR set to: 0
  6975  0036AA  0E2F               	movlw	47
  6976  0036AC  0100               	movlb	0	; () banked
  6977  0036AE  65BC               	cpfsgt	isdigit@c& (0+255),b
  6978  0036B0  D003               	goto	l6626
  6979                           
  6980                           ; BSR set to: 0
  6981  0036B2  0E01               	movlw	1
  6982  0036B4  0100               	movlb	0	; () banked
  6983  0036B6  6FBB               	movwf	_isdigit$3249& (0+255),b
  6984  0036B8                     l6626:
  6985                           
  6986                           ; BSR set to: 0
  6987  0036B8  C0BB  F0BA         	movff	_isdigit$3249,??_isdigit
  6988  0036BC  0100               	movlb	0	; () banked
  6989  0036BE  31BA               	rrcf	??_isdigit& (0+255),w,b
  6990  0036C0  0012               	return	
  6991  0036C2                     __end_of_isdigit:
  6992                           	opt stack 0
  6993                           tblptru	equ	0xFF8
  6994                           tblptrh	equ	0xFF7
  6995                           tblptrl	equ	0xFF6
  6996                           tablat	equ	0xFF5
  6997                           prodh	equ	0xFF4
  6998                           prodl	equ	0xFF3
  6999                           postinc0	equ	0xFEE
  7000                           wreg	equ	0xFE8
  7001                           indf1	equ	0xFE7
  7002                           postdec1	equ	0xFE5
  7003                           fsr1h	equ	0xFE2
  7004                           fsr1l	equ	0xFE1
  7005                           indf2	equ	0xFDF
  7006                           postinc2	equ	0xFDE
  7007                           postdec2	equ	0xFDD
  7008                           plusw2	equ	0xFDB
  7009                           fsr2h	equ	0xFDA
  7010                           fsr2l	equ	0xFD9
  7011                           status	equ	0xFD8
  7012                           
  7013 ;; *************** function ___wmul *****************
  7014 ;; Defined at:
  7015 ;;		line 15 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\Umul16.c"
  7016 ;; Parameters:    Size  Location     Type
  7017 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7018 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;  product         2    4[BANK0 ] unsigned int 
  7021 ;; Return value:  Size  Location     Type
  7022 ;;                  2    0[BANK0 ] unsigned int 
  7023 ;; Registers used:
  7024 ;;		wreg, status,2, status,0, prodl, prodh
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/0
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7030 ;;      Params:         0       4       0       0       0       0       0       0       0
  7031 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7032 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7033 ;;      Totals:         0       6       0       0       0       0       0       0       0
  7034 ;;Total ram usage:        6 bytes
  7035 ;; Hardware stack levels used:    1
  7036 ;; Hardware stack levels required when called:   11
  7037 ;; This function calls:
  7038 ;;		Nothing
  7039 ;; This function is called by:
  7040 ;;		_sprintf
  7041 ;; This function uses a non-reentrant model
  7042 ;;
  7043                           
  7044                           	psect	text29
  7045  003508                     __ptext29:
  7046                           	opt stack 0
  7047  003508                     ___wmul:
  7048                           	opt stack 16
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;incstack = 0
  7052  003508  0100               	movlb	0	; () banked
  7053  00350A  51BA               	movf	___wmul@multiplier& (0+255),w,b
  7054  00350C  0100               	movlb	0	; () banked
  7055  00350E  03BC               	mulwf	___wmul@multiplicand& (0+255),b
  7056  003510  CFF3 F0BE          	movff	prodl,___wmul@product
  7057  003514  CFF4 F0BF          	movff	prodh,___wmul@product+1
  7058  003518  0100               	movlb	0	; () banked
  7059  00351A  51BA               	movf	___wmul@multiplier& (0+255),w,b
  7060  00351C  0100               	movlb	0	; () banked
  7061  00351E  03BD               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  7062  003520  50F3               	movf	prodl,w,c
  7063  003522  0100               	movlb	0	; () banked
  7064  003524  27BF               	addwf	(___wmul@product+1)& (0+255),f,b
  7065  003526  0100               	movlb	0	; () banked
  7066  003528  51BB               	movf	(___wmul@multiplier+1)& (0+255),w,b
  7067  00352A  0100               	movlb	0	; () banked
  7068  00352C  03BC               	mulwf	___wmul@multiplicand& (0+255),b
  7069  00352E  50F3               	movf	prodl,w,c
  7070  003530  0100               	movlb	0	; () banked
  7071  003532  27BF               	addwf	(___wmul@product+1)& (0+255),f,b
  7072                           
  7073                           ; BSR set to: 0
  7074  003534  C0BE  F0BA         	movff	___wmul@product,?___wmul
  7075  003538  C0BF  F0BB         	movff	___wmul@product+1,?___wmul+1
  7076  00353C  0012               	return	
  7077  00353E                     __end_of___wmul:
  7078                           	opt stack 0
  7079                           tblptru	equ	0xFF8
  7080                           tblptrh	equ	0xFF7
  7081                           tblptrl	equ	0xFF6
  7082                           tablat	equ	0xFF5
  7083                           prodh	equ	0xFF4
  7084                           prodl	equ	0xFF3
  7085                           postinc0	equ	0xFEE
  7086                           wreg	equ	0xFE8
  7087                           indf1	equ	0xFE7
  7088                           postdec1	equ	0xFE5
  7089                           fsr1h	equ	0xFE2
  7090                           fsr1l	equ	0xFE1
  7091                           indf2	equ	0xFDF
  7092                           postinc2	equ	0xFDE
  7093                           postdec2	equ	0xFDD
  7094                           plusw2	equ	0xFDB
  7095                           fsr2h	equ	0xFDA
  7096                           fsr2l	equ	0xFD9
  7097                           status	equ	0xFD8
  7098                           
  7099 ;; *************** function ___lwdiv *****************
  7100 ;; Defined at:
  7101 ;;		line 8 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\lwdiv.c"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;  dividend        2    0[BANK0 ] unsigned int 
  7104 ;;  divisor         2    2[BANK0 ] unsigned int 
  7105 ;; Auto vars:     Size  Location     Type
  7106 ;;  quotient        2    5[BANK0 ] unsigned int 
  7107 ;;  counter         1    4[BANK0 ] unsigned char 
  7108 ;; Return value:  Size  Location     Type
  7109 ;;                  2    0[BANK0 ] unsigned int 
  7110 ;; Registers used:
  7111 ;;		wreg, status,2, status,0
  7112 ;; Tracked objects:
  7113 ;;		On entry : 0/0
  7114 ;;		On exit  : 0/0
  7115 ;;		Unchanged: 0/0
  7116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7117 ;;      Params:         0       4       0       0       0       0       0       0       0
  7118 ;;      Locals:         0       3       0       0       0       0       0       0       0
  7119 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7120 ;;      Totals:         0       7       0       0       0       0       0       0       0
  7121 ;;Total ram usage:        7 bytes
  7122 ;; Hardware stack levels used:    1
  7123 ;; Hardware stack levels required when called:   11
  7124 ;; This function calls:
  7125 ;;		Nothing
  7126 ;; This function is called by:
  7127 ;;		_sprintf
  7128 ;; This function uses a non-reentrant model
  7129 ;;
  7130                           
  7131                           	psect	text30
  7132  002F9A                     __ptext30:
  7133                           	opt stack 0
  7134  002F9A                     ___lwdiv:
  7135                           	opt stack 16
  7136                           
  7137                           ; BSR set to: 0
  7138                           ;incstack = 0
  7139  002F9A  0E00               	movlw	0
  7140  002F9C  0100               	movlb	0	; () banked
  7141  002F9E  6FC0               	movwf	(___lwdiv@quotient+1)& (0+255),b
  7142  002FA0  0E00               	movlw	0
  7143  002FA2  6FBF               	movwf	___lwdiv@quotient& (0+255),b
  7144                           
  7145                           ; BSR set to: 0
  7146  002FA4  0100               	movlb	0	; () banked
  7147  002FA6  51BC               	movf	___lwdiv@divisor& (0+255),w,b
  7148  002FA8  0100               	movlb	0	; () banked
  7149  002FAA  11BD               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  7150  002FAC  B4D8               	btfsc	status,2,c
  7151  002FAE  D02C               	goto	l1426
  7152                           
  7153                           ; BSR set to: 0
  7154  002FB0  0E01               	movlw	1
  7155  002FB2  0100               	movlb	0	; () banked
  7156  002FB4  6FBE               	movwf	___lwdiv@counter& (0+255),b
  7157  002FB6  D006               	goto	l6842
  7158  002FB8                     l6840:
  7159                           
  7160                           ; BSR set to: 0
  7161  002FB8  0100               	movlb	0	; () banked
  7162  002FBA  90D8               	bcf	status,0,c
  7163  002FBC  37BC               	rlcf	___lwdiv@divisor& (0+255),f,b
  7164  002FBE  37BD               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  7165  002FC0  0100               	movlb	0	; () banked
  7166  002FC2  2BBE               	incf	___lwdiv@counter& (0+255),f,b
  7167  002FC4                     l6842:
  7168                           
  7169                           ; BSR set to: 0
  7170  002FC4  0100               	movlb	0	; () banked
  7171  002FC6  AFBD               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  7172  002FC8  D7F7               	goto	l6840
  7173  002FCA                     l6844:
  7174                           
  7175                           ; BSR set to: 0
  7176  002FCA  0100               	movlb	0	; () banked
  7177  002FCC  90D8               	bcf	status,0,c
  7178  002FCE  37BF               	rlcf	___lwdiv@quotient& (0+255),f,b
  7179  002FD0  37C0               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  7180                           
  7181                           ; BSR set to: 0
  7182  002FD2  0100               	movlb	0	; () banked
  7183  002FD4  51BC               	movf	___lwdiv@divisor& (0+255),w,b
  7184  002FD6  0100               	movlb	0	; () banked
  7185  002FD8  5DBA               	subwf	___lwdiv@dividend& (0+255),w,b
  7186  002FDA  0100               	movlb	0	; () banked
  7187  002FDC  51BD               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7188  002FDE  0100               	movlb	0	; () banked
  7189  002FE0  59BB               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  7190  002FE2  A0D8               	btfss	status,0,c
  7191  002FE4  D00A               	goto	l6852
  7192                           
  7193                           ; BSR set to: 0
  7194  002FE6  0100               	movlb	0	; () banked
  7195  002FE8  51BC               	movf	___lwdiv@divisor& (0+255),w,b
  7196  002FEA  0100               	movlb	0	; () banked
  7197  002FEC  5FBA               	subwf	___lwdiv@dividend& (0+255),f,b
  7198  002FEE  0100               	movlb	0	; () banked
  7199  002FF0  51BD               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  7200  002FF2  0100               	movlb	0	; () banked
  7201  002FF4  5BBB               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  7202                           
  7203                           ; BSR set to: 0
  7204  002FF6  0100               	movlb	0	; () banked
  7205  002FF8  81BF               	bsf	___lwdiv@quotient& (0+255),0,b
  7206  002FFA                     l6852:
  7207                           
  7208                           ; BSR set to: 0
  7209  002FFA  0100               	movlb	0	; () banked
  7210  002FFC  90D8               	bcf	status,0,c
  7211  002FFE  33BD               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  7212  003000  33BC               	rrcf	___lwdiv@divisor& (0+255),f,b
  7213                           
  7214                           ; BSR set to: 0
  7215  003002  0100               	movlb	0	; () banked
  7216  003004  2FBE               	decfsz	___lwdiv@counter& (0+255),f,b
  7217  003006  D7E1               	goto	l6844
  7218  003008                     l1426:
  7219                           
  7220                           ; BSR set to: 0
  7221  003008  C0BF  F0BA         	movff	___lwdiv@quotient,?___lwdiv
  7222  00300C  C0C0  F0BB         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7223                           
  7224                           ; BSR set to: 0
  7225  003010  0012               	return		;funcret
  7226  003012                     __end_of___lwdiv:
  7227                           	opt stack 0
  7228                           tblptru	equ	0xFF8
  7229                           tblptrh	equ	0xFF7
  7230                           tblptrl	equ	0xFF6
  7231                           tablat	equ	0xFF5
  7232                           prodh	equ	0xFF4
  7233                           prodl	equ	0xFF3
  7234                           postinc0	equ	0xFEE
  7235                           wreg	equ	0xFE8
  7236                           indf1	equ	0xFE7
  7237                           postdec1	equ	0xFE5
  7238                           fsr1h	equ	0xFE2
  7239                           fsr1l	equ	0xFE1
  7240                           indf2	equ	0xFDF
  7241                           postinc2	equ	0xFDE
  7242                           postdec2	equ	0xFDD
  7243                           plusw2	equ	0xFDB
  7244                           fsr2h	equ	0xFDA
  7245                           fsr2l	equ	0xFD9
  7246                           status	equ	0xFD8
  7247                           
  7248 ;; *************** function _putUSBUSART *****************
  7249 ;; Defined at:
  7250 ;;		line 621 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_de
      +vice_cdc.c"
  7251 ;; Parameters:    Size  Location     Type
  7252 ;;  data            2    6[BANK0 ] PTR unsigned char 
  7253 ;;		 -> usb_send@usb_msg(64), 
  7254 ;;  length          1    8[BANK0 ] unsigned char 
  7255 ;; Auto vars:     Size  Location     Type
  7256 ;;		None
  7257 ;; Return value:  Size  Location     Type
  7258 ;;		None               void
  7259 ;; Registers used:
  7260 ;;		wreg, status,2, status,0
  7261 ;; Tracked objects:
  7262 ;;		On entry : 0/0
  7263 ;;		On exit  : 0/0
  7264 ;;		Unchanged: 0/0
  7265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7266 ;;      Params:         0       3       0       0       0       0       0       0       0
  7267 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7269 ;;      Totals:         0       3       0       0       0       0       0       0       0
  7270 ;;Total ram usage:        3 bytes
  7271 ;; Hardware stack levels used:    1
  7272 ;; Hardware stack levels required when called:   11
  7273 ;; This function calls:
  7274 ;;		Nothing
  7275 ;; This function is called by:
  7276 ;;		_usb_send
  7277 ;; This function uses a non-reentrant model
  7278 ;;
  7279                           
  7280                           	psect	text31
  7281  003716                     __ptext31:
  7282                           	opt stack 0
  7283  003716                     _putUSBUSART:
  7284                           	opt stack 17
  7285                           
  7286                           ;usb_device_cdc.c: 646: {PIE2bits.USBIE = 0;};
  7287                           
  7288                           ; BSR set to: 0
  7289                           ;incstack = 0
  7290  003716  9AA0               	bcf	4000,5,c	;volatile
  7291                           
  7292                           ;usb_device_cdc.c: 647: if(cdc_trf_state == 0)
  7293  003718  0100               	movlb	0	; () banked
  7294  00371A  51A1               	movf	_cdc_trf_state& (0+255),w,b
  7295  00371C  A4D8               	btfss	status,2,c
  7296  00371E  D00C               	goto	l7090
  7297                           
  7298                           ; BSR set to: 0
  7299                           ;usb_device_cdc.c: 648: {
  7300                           ;usb_device_cdc.c: 649: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
  7301  003720  C0C0  F094         	movff	putUSBUSART@data,_pCDCSrc
  7302  003724  C0C1  F095         	movff	putUSBUSART@data+1,_pCDCSrc+1
  7303                           
  7304                           ; BSR set to: 0
  7305  003728  C0C2  F0A2         	movff	putUSBUSART@length,_cdc_tx_len
  7306                           
  7307                           ; BSR set to: 0
  7308  00372C  0E01               	movlw	1
  7309  00372E  0100               	movlb	0	; () banked
  7310  003730  6FA0               	movwf	_cdc_mem_type& (0+255),b
  7311                           
  7312                           ; BSR set to: 0
  7313  003732  0E01               	movlw	1
  7314  003734  0100               	movlb	0	; () banked
  7315  003736  6FA1               	movwf	_cdc_trf_state& (0+255),b
  7316  003738                     l7090:
  7317                           
  7318                           ; BSR set to: 0
  7319                           ;usb_device_cdc.c: 650: }
  7320                           ;usb_device_cdc.c: 651: {PIE2bits.USBIE = 1;};
  7321  003738  8AA0               	bsf	4000,5,c	;volatile
  7322                           
  7323                           ; BSR set to: 0
  7324  00373A  0012               	return		;funcret
  7325  00373C                     __end_of_putUSBUSART:
  7326                           	opt stack 0
  7327                           tblptru	equ	0xFF8
  7328                           tblptrh	equ	0xFF7
  7329                           tblptrl	equ	0xFF6
  7330                           tablat	equ	0xFF5
  7331                           prodh	equ	0xFF4
  7332                           prodl	equ	0xFF3
  7333                           postinc0	equ	0xFEE
  7334                           wreg	equ	0xFE8
  7335                           indf1	equ	0xFE7
  7336                           postdec1	equ	0xFE5
  7337                           fsr1h	equ	0xFE2
  7338                           fsr1l	equ	0xFE1
  7339                           indf2	equ	0xFDF
  7340                           postinc2	equ	0xFDE
  7341                           postdec2	equ	0xFDD
  7342                           plusw2	equ	0xFDB
  7343                           fsr2h	equ	0xFDA
  7344                           fsr2l	equ	0xFD9
  7345                           status	equ	0xFD8
  7346                           
  7347 ;; *************** function _CDCTxService *****************
  7348 ;; Defined at:
  7349 ;;		line 901 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_de
      +vice_cdc.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;		None
  7352 ;; Auto vars:     Size  Location     Type
  7353 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
  7354 ;;  i               1   10[BANK0 ] unsigned char 
  7355 ;; Return value:  Size  Location     Type
  7356 ;;		None               void
  7357 ;; Registers used:
  7358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7359 ;; Tracked objects:
  7360 ;;		On entry : 0/0
  7361 ;;		On exit  : 0/0
  7362 ;;		Unchanged: 0/0
  7363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7364 ;;      Params:         0       0       0       0       0       0       0       0       0
  7365 ;;      Locals:         0       4       0       0       0       0       0       0       0
  7366 ;;      Temps:          0       1       0       0       0       0       0       0       0
  7367 ;;      Totals:         0       5       0       0       0       0       0       0       0
  7368 ;;Total ram usage:        5 bytes
  7369 ;; Hardware stack levels used:    1
  7370 ;; Hardware stack levels required when called:   12
  7371 ;; This function calls:
  7372 ;;		_USBTransferOnePacket
  7373 ;; This function is called by:
  7374 ;;		_usb_send
  7375 ;; This function uses a non-reentrant model
  7376 ;;
  7377                           
  7378                           	psect	text32
  7379  00121C                     __ptext32:
  7380                           	opt stack 0
  7381  00121C                     _CDCTxService:
  7382                           	opt stack 16
  7383                           
  7384                           ;usb_device_cdc.c: 903: uint8_t byte_to_send;
  7385                           ;usb_device_cdc.c: 904: uint8_t i;
  7386                           ;usb_device_cdc.c: 906: {PIE2bits.USBIE = 0;};
  7387                           
  7388                           ; BSR set to: 0
  7389                           ;incstack = 0
  7390  00121C  9AA0               	bcf	4000,5,c	;volatile
  7391                           
  7392                           ;usb_device_cdc.c: 908: {};
  7393                           ;usb_device_cdc.c: 910: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
  7394  00121E  0100               	movlb	0	; () banked
  7395  001220  519A               	movf	_CDCDataInHandle& (0+255),w,b
  7396  001222  0100               	movlb	0	; () banked
  7397  001224  119B               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
  7398  001226  B4D8               	btfsc	status,2,c
  7399  001228  D013               	goto	l7098
  7400                           
  7401                           ; BSR set to: 0
  7402  00122A  C09A  FFD9         	movff	_CDCDataInHandle,fsr2l
  7403  00122E  C09B  FFDA         	movff	_CDCDataInHandle+1,fsr2h
  7404  001232  0100               	movlb	0	; () banked
  7405  001234  AEDF               	btfss	indf2,7,c
  7406  001236  D004               	goto	u7400
  7407  001238  0100               	movlb	0	; () banked
  7408  00123A  6BC1               	clrf	??_CDCTxService& (0+255),b
  7409  00123C  2BC1               	incf	??_CDCTxService& (0+255),f,b
  7410  00123E  D002               	goto	u7408
  7411  001240                     u7400:
  7412  001240  0100               	movlb	0	; () banked
  7413  001242  6BC1               	clrf	??_CDCTxService& (0+255),b
  7414  001244                     u7408:
  7415  001244  0100               	movlb	0	; () banked
  7416  001246  51C1               	movf	??_CDCTxService& (0+255),w,b
  7417  001248  0100               	movlb	0	; () banked
  7418  00124A  6FC2               	movwf	_CDCTxService$2586& (0+255),b
  7419  00124C  6BC3               	clrf	(_CDCTxService$2586+1)& (0+255),b
  7420  00124E  D005               	goto	l7100
  7421  001250                     l7098:
  7422                           
  7423                           ; BSR set to: 0
  7424  001250  0E00               	movlw	0
  7425  001252  0100               	movlb	0	; () banked
  7426  001254  6FC3               	movwf	(_CDCTxService$2586+1)& (0+255),b
  7427  001256  0E00               	movlw	0
  7428  001258  6FC2               	movwf	_CDCTxService$2586& (0+255),b
  7429  00125A                     l7100:
  7430                           
  7431                           ; BSR set to: 0
  7432  00125A  0100               	movlb	0	; () banked
  7433  00125C  51C2               	movf	_CDCTxService$2586& (0+255),w,b
  7434  00125E  0100               	movlb	0	; () banked
  7435  001260  11C3               	iorwf	(_CDCTxService$2586+1)& (0+255),w,b
  7436  001262  B4D8               	btfsc	status,2,c
  7437  001264  D002               	goto	l7104
  7438                           
  7439                           ; BSR set to: 0
  7440                           ;usb_device_cdc.c: 911: {
  7441                           ;usb_device_cdc.c: 912: {PIE2bits.USBIE = 1;};
  7442  001266  8AA0               	bsf	4000,5,c	;volatile
  7443                           
  7444                           ;usb_device_cdc.c: 913: return;
  7445  001268  0012               	return	
  7446  00126A                     l7104:
  7447                           
  7448                           ; BSR set to: 0
  7449                           ;usb_device_cdc.c: 914: }
  7450                           ;usb_device_cdc.c: 921: if(cdc_trf_state == 3)
  7451  00126A  0E03               	movlw	3
  7452  00126C  0100               	movlb	0	; () banked
  7453  00126E  19A1               	xorwf	_cdc_trf_state& (0+255),w,b
  7454  001270  A4D8               	btfss	status,2,c
  7455  001272  D003               	goto	l876
  7456                           
  7457                           ; BSR set to: 0
  7458                           ;usb_device_cdc.c: 922: cdc_trf_state = 0;
  7459  001274  0E00               	movlw	0
  7460  001276  0100               	movlb	0	; () banked
  7461  001278  6FA1               	movwf	_cdc_trf_state& (0+255),b
  7462  00127A                     l876:
  7463                           
  7464                           ; BSR set to: 0
  7465                           ;usb_device_cdc.c: 927: if(cdc_trf_state == 0)
  7466  00127A  0100               	movlb	0	; () banked
  7467  00127C  51A1               	movf	_cdc_trf_state& (0+255),w,b
  7468  00127E  A4D8               	btfss	status,2,c
  7469  001280  D002               	goto	l7110
  7470                           
  7471                           ; BSR set to: 0
  7472                           ;usb_device_cdc.c: 928: {
  7473                           ;usb_device_cdc.c: 929: {PIE2bits.USBIE = 1;};
  7474  001282  8AA0               	bsf	4000,5,c	;volatile
  7475                           
  7476                           ;usb_device_cdc.c: 930: return;
  7477  001284  0012               	return	
  7478  001286                     l7110:
  7479                           
  7480                           ; BSR set to: 0
  7481                           ;usb_device_cdc.c: 931: }
  7482                           ;usb_device_cdc.c: 936: if(cdc_trf_state == 2)
  7483  001286  0E02               	movlw	2
  7484  001288  0100               	movlb	0	; () banked
  7485  00128A  19A1               	xorwf	_cdc_trf_state& (0+255),w,b
  7486  00128C  A4D8               	btfss	status,2,c
  7487  00128E  D017               	goto	l7116
  7488                           
  7489                           ; BSR set to: 0
  7490                           ;usb_device_cdc.c: 937: {
  7491                           ;usb_device_cdc.c: 938: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
  7492  001290  0E01               	movlw	1
  7493  001292  0100               	movlb	0	; () banked
  7494  001294  6FBA               	movwf	USBTransferOnePacket@dir& (0+255),b
  7495  001296  0E00               	movlw	0
  7496  001298  0100               	movlb	0	; () banked
  7497  00129A  6FBB               	movwf	USBTransferOnePacket@data& (0+255),b
  7498  00129C  0E00               	movlw	0
  7499  00129E  0100               	movlb	0	; () banked
  7500  0012A0  6FBC               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  7501  0012A2  0E00               	movlw	0
  7502  0012A4  0100               	movlb	0	; () banked
  7503  0012A6  6FBD               	movwf	USBTransferOnePacket@len& (0+255),b
  7504  0012A8  0E02               	movlw	2
  7505  0012AA  ECFD  F010         	call	_USBTransferOnePacket
  7506  0012AE  C0BA  F09A         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  7507  0012B2  C0BB  F09B         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  7508                           
  7509                           ;usb_device_cdc.c: 940: cdc_trf_state = 3;
  7510  0012B6  0E03               	movlw	3
  7511  0012B8  0100               	movlb	0	; () banked
  7512  0012BA  6FA1               	movwf	_cdc_trf_state& (0+255),b
  7513                           
  7514                           ;usb_device_cdc.c: 941: }
  7515  0012BC  D071               	goto	l7160
  7516  0012BE                     l7116:
  7517                           
  7518                           ; BSR set to: 0
  7519                           ;usb_device_cdc.c: 942: else if(cdc_trf_state == 1)
  7520  0012BE  0100               	movlb	0	; () banked
  7521  0012C0  05A1               	decf	_cdc_trf_state& (0+255),w,b
  7522  0012C2  A4D8               	btfss	status,2,c
  7523  0012C4  D06D               	goto	l7160
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;usb_device_cdc.c: 943: {
  7527                           ;usb_device_cdc.c: 947: if(cdc_tx_len > sizeof(cdc_data_tx))
  7528  0012C6  0E40               	movlw	64
  7529  0012C8  0100               	movlb	0	; () banked
  7530  0012CA  65A2               	cpfsgt	_cdc_tx_len& (0+255),b
  7531  0012CC  D004               	goto	l881
  7532                           
  7533                           ; BSR set to: 0
  7534                           ;usb_device_cdc.c: 948: byte_to_send = sizeof(cdc_data_tx);
  7535  0012CE  0E40               	movlw	64
  7536  0012D0  0100               	movlb	0	; () banked
  7537  0012D2  6FC5               	movwf	CDCTxService@byte_to_send& (0+255),b
  7538  0012D4  D002               	goto	l7122
  7539  0012D6                     l881:
  7540                           
  7541                           ; BSR set to: 0
  7542                           ;usb_device_cdc.c: 949: else
  7543                           ;usb_device_cdc.c: 950: byte_to_send = cdc_tx_len;
  7544  0012D6  C0A2  F0C5         	movff	_cdc_tx_len,CDCTxService@byte_to_send
  7545  0012DA                     l7122:
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;usb_device_cdc.c: 955: cdc_tx_len = cdc_tx_len - byte_to_send;
  7549  0012DA  0100               	movlb	0	; () banked
  7550  0012DC  51C5               	movf	CDCTxService@byte_to_send& (0+255),w,b
  7551  0012DE  0800               	sublw	0
  7552  0012E0  0100               	movlb	0	; () banked
  7553  0012E2  25A2               	addwf	_cdc_tx_len& (0+255),w,b
  7554  0012E4  0100               	movlb	0	; () banked
  7555  0012E6  6FA2               	movwf	_cdc_tx_len& (0+255),b
  7556                           
  7557                           ;usb_device_cdc.c: 957: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
  7558  0012E8  0E00               	movlw	0
  7559  0012EA  0100               	movlb	0	; () banked
  7560  0012EC  6F91               	movwf	_pCDCDst& (0+255),b
  7561  0012EE  0E05               	movlw	5
  7562  0012F0  0100               	movlb	0	; () banked
  7563  0012F2  6F92               	movwf	(_pCDCDst+1)& (0+255),b
  7564                           
  7565                           ; BSR set to: 0
  7566                           ;usb_device_cdc.c: 959: i = byte_to_send;
  7567  0012F4  C0C5  F0C4         	movff	CDCTxService@byte_to_send,CDCTxService@i
  7568                           
  7569                           ; BSR set to: 0
  7570                           ;usb_device_cdc.c: 960: if(cdc_mem_type == 0x00)
  7571  0012F8  0100               	movlb	0	; () banked
  7572  0012FA  51A0               	movf	_cdc_mem_type& (0+255),w,b
  7573  0012FC  B4D8               	btfsc	status,2,c
  7574  0012FE  D013               	goto	l7138
  7575  001300  D02A               	goto	l7148
  7576  001302                     l7130:
  7577                           
  7578                           ; BSR set to: 0
  7579                           ;usb_device_cdc.c: 963: {
  7580                           ;usb_device_cdc.c: 964: *pCDCDst.bRam = *pCDCSrc.bRom;
  7581  001302  C094  FFD9         	movff	_pCDCSrc,fsr2l
  7582  001306  C095  FFDA         	movff	_pCDCSrc+1,fsr2h
  7583  00130A  C091  FFE1         	movff	_pCDCDst,fsr1l
  7584  00130E  C092  FFE2         	movff	_pCDCDst+1,fsr1h
  7585  001312  CFDF FFE7          	movff	indf2,indf1
  7586                           
  7587                           ; BSR set to: 0
  7588                           ;usb_device_cdc.c: 965: pCDCDst.bRam++;
  7589  001316  0100               	movlb	0	; () banked
  7590  001318  4B91               	infsnz	_pCDCDst& (0+255),f,b
  7591  00131A  2B92               	incf	(_pCDCDst+1)& (0+255),f,b
  7592                           
  7593                           ; BSR set to: 0
  7594                           ;usb_device_cdc.c: 966: pCDCSrc.bRom++;
  7595  00131C  0100               	movlb	0	; () banked
  7596  00131E  4B94               	infsnz	_pCDCSrc& (0+255),f,b
  7597  001320  2B95               	incf	(_pCDCSrc+1)& (0+255),f,b
  7598                           
  7599                           ; BSR set to: 0
  7600                           ;usb_device_cdc.c: 967: i--;
  7601  001322  0100               	movlb	0	; () banked
  7602  001324  07C4               	decf	CDCTxService@i& (0+255),f,b
  7603  001326                     l7138:
  7604                           
  7605                           ; BSR set to: 0
  7606  001326  0100               	movlb	0	; () banked
  7607  001328  51C4               	movf	CDCTxService@i& (0+255),w,b
  7608  00132A  0100               	movlb	0	; () banked
  7609  00132C  B4D8               	btfsc	status,2,c
  7610  00132E  D018               	goto	l7150
  7611  001330  D7E8               	goto	l7130
  7612  001332                     l7140:
  7613                           
  7614                           ; BSR set to: 0
  7615                           ;usb_device_cdc.c: 973: {
  7616                           ;usb_device_cdc.c: 974: *pCDCDst.bRam = *pCDCSrc.bRam;
  7617  001332  C094  FFD9         	movff	_pCDCSrc,fsr2l
  7618  001336  C095  FFDA         	movff	_pCDCSrc+1,fsr2h
  7619  00133A  C091  FFE1         	movff	_pCDCDst,fsr1l
  7620  00133E  C092  FFE2         	movff	_pCDCDst+1,fsr1h
  7621  001342  CFDF FFE7          	movff	indf2,indf1
  7622                           
  7623                           ; BSR set to: 0
  7624                           ;usb_device_cdc.c: 975: pCDCDst.bRam++;
  7625  001346  0100               	movlb	0	; () banked
  7626  001348  4B91               	infsnz	_pCDCDst& (0+255),f,b
  7627  00134A  2B92               	incf	(_pCDCDst+1)& (0+255),f,b
  7628                           
  7629                           ; BSR set to: 0
  7630                           ;usb_device_cdc.c: 976: pCDCSrc.bRam++;
  7631  00134C  0100               	movlb	0	; () banked
  7632  00134E  4B94               	infsnz	_pCDCSrc& (0+255),f,b
  7633  001350  2B95               	incf	(_pCDCSrc+1)& (0+255),f,b
  7634                           
  7635                           ; BSR set to: 0
  7636                           ;usb_device_cdc.c: 977: i--;
  7637  001352  0100               	movlb	0	; () banked
  7638  001354  07C4               	decf	CDCTxService@i& (0+255),f,b
  7639  001356                     l7148:
  7640                           
  7641                           ; BSR set to: 0
  7642  001356  0100               	movlb	0	; () banked
  7643  001358  51C4               	movf	CDCTxService@i& (0+255),w,b
  7644  00135A  0100               	movlb	0	; () banked
  7645  00135C  A4D8               	btfss	status,2,c
  7646  00135E  D7E9               	goto	l7140
  7647  001360                     l7150:
  7648                           
  7649                           ; BSR set to: 0
  7650                           ;usb_device_cdc.c: 978: }
  7651                           ;usb_device_cdc.c: 979: }
  7652                           ;usb_device_cdc.c: 985: if(cdc_tx_len == 0)
  7653  001360  0100               	movlb	0	; () banked
  7654  001362  51A2               	movf	_cdc_tx_len& (0+255),w,b
  7655  001364  A4D8               	btfss	status,2,c
  7656  001366  D00A               	goto	l7158
  7657                           
  7658                           ; BSR set to: 0
  7659                           ;usb_device_cdc.c: 986: {
  7660                           ;usb_device_cdc.c: 987: if(byte_to_send == 64)
  7661  001368  0E40               	movlw	64
  7662  00136A  0100               	movlb	0	; () banked
  7663  00136C  19C5               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
  7664  00136E  A4D8               	btfss	status,2,c
  7665  001370  D002               	goto	l7156
  7666                           
  7667                           ; BSR set to: 0
  7668                           ;usb_device_cdc.c: 988: cdc_trf_state = 2;
  7669  001372  0E02               	movlw	2
  7670  001374  D001               	goto	L42
  7671  001376                     l7156:
  7672                           
  7673                           ; BSR set to: 0
  7674                           ;usb_device_cdc.c: 989: else
  7675                           ;usb_device_cdc.c: 990: cdc_trf_state = 3;
  7676  001376  0E03               	movlw	3
  7677  001378                     L42:
  7678  001378  0100               	movlb	0	; () banked
  7679  00137A  6FA1               	movwf	_cdc_trf_state& (0+255),b
  7680  00137C                     l7158:
  7681                           
  7682                           ; BSR set to: 0
  7683                           ;usb_device_cdc.c: 991: }
  7684                           ;usb_device_cdc.c: 992: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
  7685  00137C  0E01               	movlw	1
  7686  00137E  0100               	movlb	0	; () banked
  7687  001380  6FBA               	movwf	USBTransferOnePacket@dir& (0+255),b
  7688  001382  0E00               	movlw	0
  7689  001384  0100               	movlb	0	; () banked
  7690  001386  6FBB               	movwf	USBTransferOnePacket@data& (0+255),b
  7691  001388  0E05               	movlw	5
  7692  00138A  0100               	movlb	0	; () banked
  7693  00138C  6FBC               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  7694  00138E  C0C5  F0BD         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
  7695  001392  0E02               	movlw	2
  7696  001394  ECFD  F010         	call	_USBTransferOnePacket
  7697  001398  C0BA  F09A         	movff	?_USBTransferOnePacket,_CDCDataInHandle
  7698  00139C  C0BB  F09B         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
  7699  0013A0                     l7160:
  7700                           
  7701                           ;usb_device_cdc.c: 994: }
  7702                           ;usb_device_cdc.c: 996: {PIE2bits.USBIE = 1;};
  7703  0013A0  8AA0               	bsf	4000,5,c	;volatile
  7704  0013A2  0012               	return		;funcret
  7705  0013A4                     __end_of_CDCTxService:
  7706                           	opt stack 0
  7707                           tblptru	equ	0xFF8
  7708                           tblptrh	equ	0xFF7
  7709                           tblptrl	equ	0xFF6
  7710                           tablat	equ	0xFF5
  7711                           prodh	equ	0xFF4
  7712                           prodl	equ	0xFF3
  7713                           postinc0	equ	0xFEE
  7714                           wreg	equ	0xFE8
  7715                           indf1	equ	0xFE7
  7716                           postdec1	equ	0xFE5
  7717                           fsr1h	equ	0xFE2
  7718                           fsr1l	equ	0xFE1
  7719                           indf2	equ	0xFDF
  7720                           postinc2	equ	0xFDE
  7721                           postdec2	equ	0xFDD
  7722                           plusw2	equ	0xFDB
  7723                           fsr2h	equ	0xFDA
  7724                           fsr2l	equ	0xFD9
  7725                           status	equ	0xFD8
  7726                           
  7727 ;; *************** function _USBTransferOnePacket *****************
  7728 ;; Defined at:
  7729 ;;		line 995 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_de
      +vice.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;  ep              1    wreg     unsigned char 
  7732 ;;  dir             1    0[BANK0 ] unsigned char 
  7733 ;;  data            2    1[BANK0 ] PTR unsigned char 
  7734 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  7735 ;;  len             1    3[BANK0 ] unsigned char 
  7736 ;; Auto vars:     Size  Location     Type
  7737 ;;  ep              1    4[BANK0 ] unsigned char 
  7738 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
  7739 ;;		 -> NULL(0), BDT(48), 
  7740 ;; Return value:  Size  Location     Type
  7741 ;;                  2    0[BANK0 ] PTR void 
  7742 ;; Registers used:
  7743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7744 ;; Tracked objects:
  7745 ;;		On entry : 0/0
  7746 ;;		On exit  : 0/0
  7747 ;;		Unchanged: 0/0
  7748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7749 ;;      Params:         0       4       0       0       0       0       0       0       0
  7750 ;;      Locals:         0       3       0       0       0       0       0       0       0
  7751 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7752 ;;      Totals:         0       7       0       0       0       0       0       0       0
  7753 ;;Total ram usage:        7 bytes
  7754 ;; Hardware stack levels used:    1
  7755 ;; Hardware stack levels required when called:   11
  7756 ;; This function calls:
  7757 ;;		Nothing
  7758 ;; This function is called by:
  7759 ;;		_CDCTxService
  7760 ;;		_USBCDCEventHandler
  7761 ;;		_getsUSBUSART
  7762 ;; This function uses a non-reentrant model
  7763 ;;
  7764                           
  7765                           	psect	text33
  7766  0021FA                     __ptext33:
  7767                           	opt stack 0
  7768  0021FA                     _USBTransferOnePacket:
  7769                           	opt stack 16
  7770                           
  7771                           ;incstack = 0
  7772                           ;USBTransferOnePacket@ep stored from wreg
  7773  0021FA  0100               	movlb	0	; () banked
  7774  0021FC  6FBE               	movwf	USBTransferOnePacket@ep& (0+255),b
  7775                           
  7776                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  7777                           ;usb_device.c: 1000: if(dir != 0)
  7778  0021FE  0100               	movlb	0	; () banked
  7779  002200  51BA               	movf	USBTransferOnePacket@dir& (0+255),w,b
  7780  002202  0100               	movlb	0	; () banked
  7781  002204  B4D8               	btfsc	status,2,c
  7782  002206  D008               	goto	l6592
  7783                           
  7784                           ; BSR set to: 0
  7785                           ;usb_device.c: 1001: {
  7786                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  7787  002208  0100               	movlb	0	; () banked
  7788  00220A  51BE               	movf	USBTransferOnePacket@ep& (0+255),w,b
  7789  00220C  0D02               	mullw	2
  7790  00220E  0E78               	movlw	low _pBDTEntryIn
  7791  002210  24F3               	addwf	prodl,w,c
  7792  002212  6ED9               	movwf	fsr2l,c
  7793  002214  0E00               	movlw	high _pBDTEntryIn
  7794  002216  D007               	goto	L43
  7795  002218                     l6592:
  7796                           
  7797                           ; BSR set to: 0
  7798                           ;usb_device.c: 1005: else
  7799                           ;usb_device.c: 1006: {
  7800                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  7801  002218  0100               	movlb	0	; () banked
  7802  00221A  51BE               	movf	USBTransferOnePacket@ep& (0+255),w,b
  7803  00221C  0D02               	mullw	2
  7804  00221E  0E7E               	movlw	low _pBDTEntryOut
  7805  002220  24F3               	addwf	prodl,w,c
  7806  002222  6ED9               	movwf	fsr2l,c
  7807  002224  0E00               	movlw	high _pBDTEntryOut
  7808  002226                     L43:
  7809  002226  20F4               	addwfc	prodh,w,c
  7810  002228  6EDA               	movwf	fsr2h,c
  7811  00222A  CFDE F0BF          	movff	postinc2,USBTransferOnePacket@handle
  7812  00222E  CFDD F0C0          	movff	postdec2,USBTransferOnePacket@handle+1
  7813                           
  7814                           ; BSR set to: 0
  7815                           ;usb_device.c: 1009: }
  7816                           ;usb_device.c: 1013: if(handle == 0)
  7817                           
  7818                           ; BSR set to: 0
  7819  002232  0100               	movlb	0	; () banked
  7820  002234  51BF               	movf	USBTransferOnePacket@handle& (0+255),w,b
  7821  002236  0100               	movlb	0	; () banked
  7822  002238  11C0               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  7823  00223A  A4D8               	btfss	status,2,c
  7824  00223C  D007               	goto	l6600
  7825                           
  7826                           ; BSR set to: 0
  7827                           ;usb_device.c: 1014: {
  7828                           ;usb_device.c: 1015: return 0;
  7829  00223E  0E00               	movlw	0
  7830  002240  0100               	movlb	0	; () banked
  7831  002242  6FBA               	movwf	?_USBTransferOnePacket& (0+255),b
  7832  002244  0E00               	movlw	0
  7833  002246  0100               	movlb	0	; () banked
  7834  002248  6FBB               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
  7835                           
  7836                           ; BSR set to: 0
  7837  00224A  0012               	return	
  7838  00224C                     l6600:
  7839                           
  7840                           ; BSR set to: 0
  7841                           ;usb_device.c: 1016: }
  7842                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  7843  00224C  0100               	movlb	0	; () banked
  7844  00224E  EE20 F002          	lfsr	2,2
  7845  002252  51BF               	movf	USBTransferOnePacket@handle& (0+255),w,b
  7846  002254  26D9               	addwf	fsr2l,f,c
  7847  002256  51C0               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  7848  002258  22DA               	addwfc	fsr2h,f,c
  7849  00225A  C0BB  FFDE         	movff	USBTransferOnePacket@data,postinc2
  7850  00225E  C0BC  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  7851                           
  7852                           ;usb_device.c: 1030: handle->CNT = len;
  7853  002262  0100               	movlb	0	; () banked
  7854  002264  EE20 F001          	lfsr	2,1
  7855  002268  51BF               	movf	USBTransferOnePacket@handle& (0+255),w,b
  7856  00226A  26D9               	addwf	fsr2l,f,c
  7857  00226C  51C0               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  7858  00226E  22DA               	addwfc	fsr2h,f,c
  7859  002270  C0BD  FFDF         	movff	USBTransferOnePacket@len,indf2
  7860                           
  7861                           ; BSR set to: 0
  7862                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  7863  002274  C0BF  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  7864  002278  C0C0  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  7865  00227C  0E40               	movlw	64
  7866  00227E  16DF               	andwf	indf2,f,c
  7867                           
  7868                           ; BSR set to: 0
  7869                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  7870  002280  C0BF  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  7871  002284  C0C0  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  7872  002288  0E00               	movlw	0
  7873  00228A  86DB               	bsf	plusw2,3,c
  7874                           
  7875                           ; BSR set to: 0
  7876                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  7877  00228C  C0BF  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  7878  002290  C0C0  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  7879  002294  0E00               	movlw	0
  7880  002296  8EDB               	bsf	plusw2,7,c
  7881                           
  7882                           ; BSR set to: 0
  7883                           ;usb_device.c: 1036: if(dir != 0)
  7884  002298  0100               	movlb	0	; () banked
  7885  00229A  51BA               	movf	USBTransferOnePacket@dir& (0+255),w,b
  7886  00229C  0100               	movlb	0	; () banked
  7887  00229E  B4D8               	btfsc	status,2,c
  7888  0022A0  D008               	goto	l6612
  7889                           
  7890                           ; BSR set to: 0
  7891                           ;usb_device.c: 1037: {
  7892                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
  7893  0022A2  0100               	movlb	0	; () banked
  7894  0022A4  51BE               	movf	USBTransferOnePacket@ep& (0+255),w,b
  7895  0022A6  0D02               	mullw	2
  7896  0022A8  0E78               	movlw	low _pBDTEntryIn
  7897  0022AA  24F3               	addwf	prodl,w,c
  7898  0022AC  6ED9               	movwf	fsr2l,c
  7899  0022AE  0E00               	movlw	high _pBDTEntryIn
  7900  0022B0  D007               	goto	L44
  7901  0022B2                     l6612:
  7902                           
  7903                           ; BSR set to: 0
  7904                           ;usb_device.c: 1041: else
  7905                           ;usb_device.c: 1042: {
  7906                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
  7907  0022B2  0100               	movlb	0	; () banked
  7908  0022B4  51BE               	movf	USBTransferOnePacket@ep& (0+255),w,b
  7909  0022B6  0D02               	mullw	2
  7910  0022B8  0E7E               	movlw	low _pBDTEntryOut
  7911  0022BA  24F3               	addwf	prodl,w,c
  7912  0022BC  6ED9               	movwf	fsr2l,c
  7913  0022BE  0E00               	movlw	high _pBDTEntryOut
  7914  0022C0                     L44:
  7915  0022C0  20F4               	addwfc	prodh,w,c
  7916  0022C2  6EDA               	movwf	fsr2h,c
  7917  0022C4  0E04               	movlw	4
  7918  0022C6  1ADF               	xorwf	indf2,f,c
  7919                           
  7920                           ; BSR set to: 0
  7921                           ;usb_device.c: 1045: }
  7922                           ;usb_device.c: 1046: return (void*)handle;
  7923                           
  7924                           ; BSR set to: 0
  7925  0022C8  C0BF  F0BA         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  7926  0022CC  C0C0  F0BB         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  7927  0022D0  0012               	return	
  7928  0022D2                     __end_of_USBTransferOnePacket:
  7929                           	opt stack 0
  7930                           tblptru	equ	0xFF8
  7931                           tblptrh	equ	0xFF7
  7932                           tblptrl	equ	0xFF6
  7933                           tablat	equ	0xFF5
  7934                           prodh	equ	0xFF4
  7935                           prodl	equ	0xFF3
  7936                           postinc0	equ	0xFEE
  7937                           wreg	equ	0xFE8
  7938                           indf1	equ	0xFE7
  7939                           postdec1	equ	0xFE5
  7940                           fsr1h	equ	0xFE2
  7941                           fsr1l	equ	0xFE1
  7942                           indf2	equ	0xFDF
  7943                           postinc2	equ	0xFDE
  7944                           postdec2	equ	0xFDD
  7945                           plusw2	equ	0xFDB
  7946                           fsr2h	equ	0xFDA
  7947                           fsr2l	equ	0xFD9
  7948                           status	equ	0xFD8
  7949                           
  7950 ;; *************** function ___lwtoft *****************
  7951 ;; Defined at:
  7952 ;;		line 28 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\lwtoft.c"
  7953 ;; Parameters:    Size  Location     Type
  7954 ;;  c               2    8[BANK0 ] unsigned int 
  7955 ;; Auto vars:     Size  Location     Type
  7956 ;;		None
  7957 ;; Return value:  Size  Location     Type
  7958 ;;                  3    8[BANK0 ] float 
  7959 ;; Registers used:
  7960 ;;		wreg, status,2, status,0, cstack
  7961 ;; Tracked objects:
  7962 ;;		On entry : 0/0
  7963 ;;		On exit  : 0/0
  7964 ;;		Unchanged: 0/0
  7965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7966 ;;      Params:         0       3       0       0       0       0       0       0       0
  7967 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7968 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7969 ;;      Totals:         0       3       0       0       0       0       0       0       0
  7970 ;;Total ram usage:        3 bytes
  7971 ;; Hardware stack levels used:    1
  7972 ;; Hardware stack levels required when called:   12
  7973 ;; This function calls:
  7974 ;;		___ftpack
  7975 ;; This function is called by:
  7976 ;;		_check_Precondition
  7977 ;;		_verifie_Precondition
  7978 ;;		_verifie_Vbat
  7979 ;;		_start_CV
  7980 ;;		_verifie_Ibat
  7981 ;;		_stop_CV
  7982 ;; This function uses a non-reentrant model
  7983 ;;
  7984                           
  7985                           	psect	text34
  7986  0036C2                     __ptext34:
  7987                           	opt stack 0
  7988  0036C2                     ___lwtoft:
  7989                           	opt stack 17
  7990                           
  7991                           ; BSR set to: 0
  7992                           ;incstack = 0
  7993  0036C2  C0C2  F0BA         	movff	___lwtoft@c,___ftpack@arg
  7994  0036C6  C0C3  F0BB         	movff	___lwtoft@c+1,___ftpack@arg+1
  7995  0036CA  0100               	movlb	0	; () banked
  7996  0036CC  6BBC               	clrf	(___ftpack@arg+2)& (0+255),b
  7997  0036CE  0E8E               	movlw	142
  7998  0036D0  0100               	movlb	0	; () banked
  7999  0036D2  6FBD               	movwf	___ftpack@exp& (0+255),b
  8000  0036D4  0E00               	movlw	0
  8001  0036D6  0100               	movlb	0	; () banked
  8002  0036D8  6FBE               	movwf	___ftpack@sign& (0+255),b
  8003  0036DA  EC34  F00E         	call	___ftpack	;wreg free
  8004  0036DE  C0BA  F0C2         	movff	?___ftpack,?___lwtoft
  8005  0036E2  C0BB  F0C3         	movff	?___ftpack+1,?___lwtoft+1
  8006  0036E6  C0BC  F0C4         	movff	?___ftpack+2,?___lwtoft+2
  8007  0036EA  0012               	return	
  8008  0036EC                     __end_of___lwtoft:
  8009                           	opt stack 0
  8010                           tblptru	equ	0xFF8
  8011                           tblptrh	equ	0xFF7
  8012                           tblptrl	equ	0xFF6
  8013                           tablat	equ	0xFF5
  8014                           prodh	equ	0xFF4
  8015                           prodl	equ	0xFF3
  8016                           postinc0	equ	0xFEE
  8017                           wreg	equ	0xFE8
  8018                           indf1	equ	0xFE7
  8019                           postdec1	equ	0xFE5
  8020                           fsr1h	equ	0xFE2
  8021                           fsr1l	equ	0xFE1
  8022                           indf2	equ	0xFDF
  8023                           postinc2	equ	0xFDE
  8024                           postdec2	equ	0xFDD
  8025                           plusw2	equ	0xFDB
  8026                           fsr2h	equ	0xFDA
  8027                           fsr2l	equ	0xFD9
  8028                           status	equ	0xFD8
  8029                           
  8030 ;; *************** function ___ftge *****************
  8031 ;; Defined at:
  8032 ;;		line 4 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\ftge.c"
  8033 ;; Parameters:    Size  Location     Type
  8034 ;;  ff1             3   27[BANK0 ] float 
  8035 ;;  ff2             3   30[BANK0 ] float 
  8036 ;; Auto vars:     Size  Location     Type
  8037 ;;		None
  8038 ;; Return value:  Size  Location     Type
  8039 ;;		None               void
  8040 ;; Registers used:
  8041 ;;		wreg, status,2, status,0
  8042 ;; Tracked objects:
  8043 ;;		On entry : 0/0
  8044 ;;		On exit  : 0/0
  8045 ;;		Unchanged: 0/0
  8046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8047 ;;      Params:         0       6       0       0       0       0       0       0       0
  8048 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8049 ;;      Temps:          0       3       0       0       0       0       0       0       0
  8050 ;;      Totals:         0       9       0       0       0       0       0       0       0
  8051 ;;Total ram usage:        9 bytes
  8052 ;; Hardware stack levels used:    1
  8053 ;; Hardware stack levels required when called:   11
  8054 ;; This function calls:
  8055 ;;		Nothing
  8056 ;; This function is called by:
  8057 ;;		_I_V_Set
  8058 ;;		_CalcPI
  8059 ;;		_check_Precondition
  8060 ;;		_verifie_Precondition
  8061 ;;		_verifie_Vbat
  8062 ;;		_verifie_Ibat
  8063 ;;		_stop_CV
  8064 ;; This function uses a non-reentrant model
  8065 ;;
  8066                           
  8067                           	psect	text35
  8068  0027AE                     __ptext35:
  8069                           	opt stack 0
  8070  0027AE                     ___ftge:
  8071                           	opt stack 18
  8072                           
  8073                           ;incstack = 0
  8074  0027AE  0100               	movlb	0	; () banked
  8075  0027B0  AFD7               	btfss	(___ftge@ff1+2)& (0+255),7,b
  8076  0027B2  D01D               	goto	l6816
  8077                           
  8078                           ; BSR set to: 0
  8079  0027B4  C0D5  F0DB         	movff	___ftge@ff1,??___ftge
  8080  0027B8  C0D6  F0DC         	movff	___ftge@ff1+1,??___ftge+1
  8081  0027BC  C0D7  F0DD         	movff	___ftge@ff1+2,??___ftge+2
  8082  0027C0  0100               	movlb	0	; () banked
  8083  0027C2  1FDB               	comf	??___ftge& (0+255),f,b
  8084  0027C4  1FDC               	comf	(??___ftge+1)& (0+255),f,b
  8085  0027C6  1FDD               	comf	(??___ftge+2)& (0+255),f,b
  8086  0027C8  2BDB               	incf	??___ftge& (0+255),f,b
  8087  0027CA  0E00               	movlw	0
  8088  0027CC  23DC               	addwfc	(??___ftge+1)& (0+255),f,b
  8089  0027CE  23DD               	addwfc	(??___ftge+2)& (0+255),f,b
  8090  0027D0  0E00               	movlw	0
  8091  0027D2  0100               	movlb	0	; () banked
  8092  0027D4  25DB               	addwf	??___ftge& (0+255),w,b
  8093  0027D6  0100               	movlb	0	; () banked
  8094  0027D8  6FD5               	movwf	___ftge@ff1& (0+255),b
  8095  0027DA  0E00               	movlw	0
  8096  0027DC  0100               	movlb	0	; () banked
  8097  0027DE  21DC               	addwfc	(??___ftge+1)& (0+255),w,b
  8098  0027E0  0100               	movlb	0	; () banked
  8099  0027E2  6FD6               	movwf	(___ftge@ff1+1)& (0+255),b
  8100  0027E4  0E80               	movlw	128
  8101  0027E6  0100               	movlb	0	; () banked
  8102  0027E8  21DD               	addwfc	(??___ftge+2)& (0+255),w,b
  8103  0027EA  0100               	movlb	0	; () banked
  8104  0027EC  6FD7               	movwf	(___ftge@ff1+2)& (0+255),b
  8105  0027EE                     l6816:
  8106                           
  8107                           ; BSR set to: 0
  8108  0027EE  0100               	movlb	0	; () banked
  8109  0027F0  AFDA               	btfss	(___ftge@ff2+2)& (0+255),7,b
  8110  0027F2  D01D               	goto	l6820
  8111                           
  8112                           ; BSR set to: 0
  8113  0027F4  C0D8  F0DB         	movff	___ftge@ff2,??___ftge
  8114  0027F8  C0D9  F0DC         	movff	___ftge@ff2+1,??___ftge+1
  8115  0027FC  C0DA  F0DD         	movff	___ftge@ff2+2,??___ftge+2
  8116  002800  0100               	movlb	0	; () banked
  8117  002802  1FDB               	comf	??___ftge& (0+255),f,b
  8118  002804  1FDC               	comf	(??___ftge+1)& (0+255),f,b
  8119  002806  1FDD               	comf	(??___ftge+2)& (0+255),f,b
  8120  002808  2BDB               	incf	??___ftge& (0+255),f,b
  8121  00280A  0E00               	movlw	0
  8122  00280C  23DC               	addwfc	(??___ftge+1)& (0+255),f,b
  8123  00280E  23DD               	addwfc	(??___ftge+2)& (0+255),f,b
  8124  002810  0E00               	movlw	0
  8125  002812  0100               	movlb	0	; () banked
  8126  002814  25DB               	addwf	??___ftge& (0+255),w,b
  8127  002816  0100               	movlb	0	; () banked
  8128  002818  6FD8               	movwf	___ftge@ff2& (0+255),b
  8129  00281A  0E00               	movlw	0
  8130  00281C  0100               	movlb	0	; () banked
  8131  00281E  21DC               	addwfc	(??___ftge+1)& (0+255),w,b
  8132  002820  0100               	movlb	0	; () banked
  8133  002822  6FD9               	movwf	(___ftge@ff2+1)& (0+255),b
  8134  002824  0E80               	movlw	128
  8135  002826  0100               	movlb	0	; () banked
  8136  002828  21DD               	addwfc	(??___ftge+2)& (0+255),w,b
  8137  00282A  0100               	movlb	0	; () banked
  8138  00282C  6FDA               	movwf	(___ftge@ff2+2)& (0+255),b
  8139  00282E                     l6820:
  8140                           
  8141                           ; BSR set to: 0
  8142  00282E  0E00               	movlw	0
  8143  002830  0100               	movlb	0	; () banked
  8144  002832  1BD5               	xorwf	___ftge@ff1& (0+255),f,b
  8145  002834  0E00               	movlw	0
  8146  002836  0100               	movlb	0	; () banked
  8147  002838  1BD6               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  8148  00283A  0E80               	movlw	128
  8149  00283C  0100               	movlb	0	; () banked
  8150  00283E  1BD7               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  8151                           
  8152                           ; BSR set to: 0
  8153  002840  0E00               	movlw	0
  8154  002842  0100               	movlb	0	; () banked
  8155  002844  1BD8               	xorwf	___ftge@ff2& (0+255),f,b
  8156  002846  0E00               	movlw	0
  8157  002848  0100               	movlb	0	; () banked
  8158  00284A  1BD9               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  8159  00284C  0E80               	movlw	128
  8160  00284E  0100               	movlb	0	; () banked
  8161  002850  1BDA               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  8162  002852  0100               	movlb	0	; () banked
  8163  002854  51D8               	movf	___ftge@ff2& (0+255),w,b
  8164  002856  0100               	movlb	0	; () banked
  8165  002858  5DD5               	subwf	___ftge@ff1& (0+255),w,b
  8166  00285A  0100               	movlb	0	; () banked
  8167  00285C  51D9               	movf	(___ftge@ff2+1)& (0+255),w,b
  8168  00285E  0100               	movlb	0	; () banked
  8169  002860  59D6               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  8170  002862  0100               	movlb	0	; () banked
  8171  002864  51DA               	movf	(___ftge@ff2+2)& (0+255),w,b
  8172  002866  0100               	movlb	0	; () banked
  8173  002868  59D7               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  8174  00286A  B0D8               	btfsc	status,0,c
  8175  00286C  D002               	goto	l6826
  8176                           
  8177                           ; BSR set to: 0
  8178  00286E  90D8               	bcf	status,0,c
  8179  002870  0012               	return	
  8180  002872                     l6826:
  8181                           
  8182                           ; BSR set to: 0
  8183  002872  80D8               	bsf	status,0,c
  8184                           
  8185                           ; BSR set to: 0
  8186  002874  0012               	return	
  8187  002876                     __end_of___ftge:
  8188                           	opt stack 0
  8189                           tblptru	equ	0xFF8
  8190                           tblptrh	equ	0xFF7
  8191                           tblptrl	equ	0xFF6
  8192                           tablat	equ	0xFF5
  8193                           prodh	equ	0xFF4
  8194                           prodl	equ	0xFF3
  8195                           postinc0	equ	0xFEE
  8196                           wreg	equ	0xFE8
  8197                           indf1	equ	0xFE7
  8198                           postdec1	equ	0xFE5
  8199                           fsr1h	equ	0xFE2
  8200                           fsr1l	equ	0xFE1
  8201                           indf2	equ	0xFDF
  8202                           postinc2	equ	0xFDE
  8203                           postdec2	equ	0xFDD
  8204                           plusw2	equ	0xFDB
  8205                           fsr2h	equ	0xFDA
  8206                           fsr2l	equ	0xFD9
  8207                           status	equ	0xFD8
  8208                           
  8209 ;; *************** function _V_Eval *****************
  8210 ;; Defined at:
  8211 ;;		line 87 in file "user.c"
  8212 ;; Parameters:    Size  Location     Type
  8213 ;;  channel         1    wreg     unsigned char 
  8214 ;;  voltage         2   54[BANK0 ] PTR float 
  8215 ;;		 -> stop_CV@voltage(3), verifie_Ibat@current(3), verifie_Vbat@voltage(3), verifie_Precondition@voltage(3), 
  8216 ;;		 -> check_Precondition@voltage(3), PI(23), 
  8217 ;; Auto vars:     Size  Location     Type
  8218 ;;  channel         1   56[BANK0 ] unsigned char 
  8219 ;;  temp            3   57[BANK0 ] float 
  8220 ;; Return value:  Size  Location     Type
  8221 ;;                  2   54[BANK0 ] short 
  8222 ;; Registers used:
  8223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8224 ;; Tracked objects:
  8225 ;;		On entry : 0/0
  8226 ;;		On exit  : 0/0
  8227 ;;		Unchanged: 0/0
  8228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8229 ;;      Params:         0       2       0       0       0       0       0       0       0
  8230 ;;      Locals:         0       4       0       0       0       0       0       0       0
  8231 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8232 ;;      Totals:         0       6       0       0       0       0       0       0       0
  8233 ;;Total ram usage:        6 bytes
  8234 ;; Hardware stack levels used:    1
  8235 ;; Hardware stack levels required when called:   13
  8236 ;; This function calls:
  8237 ;;		_BusyADC
  8238 ;;		_ReadADC
  8239 ;;		_SelChanConvADC
  8240 ;;		___awtoft
  8241 ;;		___ftdiv
  8242 ;;		___ftmul
  8243 ;; This function is called by:
  8244 ;;		_I_V_Set
  8245 ;;		_check_Precondition
  8246 ;;		_verifie_Precondition
  8247 ;;		_verifie_Vbat
  8248 ;;		_verifie_Ibat
  8249 ;;		_stop_CV
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           	psect	text36
  8254  0022D2                     __ptext36:
  8255                           	opt stack 0
  8256  0022D2                     _V_Eval:
  8257                           	opt stack 16
  8258                           
  8259                           ; BSR set to: 0
  8260                           ;incstack = 0
  8261                           ;V_Eval@channel stored from wreg
  8262  0022D2  0100               	movlb	0	; () banked
  8263  0022D4  6FF2               	movwf	V_Eval@channel& (0+255),b
  8264                           
  8265                           ;user.c: 89: signed float temp = 0;
  8266  0022D6  0E00               	movlw	0
  8267  0022D8  0100               	movlb	0	; () banked
  8268  0022DA  6FF3               	movwf	V_Eval@temp& (0+255),b
  8269  0022DC  0E00               	movlw	0
  8270  0022DE  0100               	movlb	0	; () banked
  8271  0022E0  6FF4               	movwf	(V_Eval@temp+1)& (0+255),b
  8272  0022E2  0E00               	movlw	0
  8273  0022E4  0100               	movlb	0	; () banked
  8274  0022E6  6FF5               	movwf	(V_Eval@temp+2)& (0+255),b
  8275                           
  8276                           ; BSR set to: 0
  8277                           ;user.c: 90: SelChanConvADC(channel);
  8278  0022E8  0100               	movlb	0	; () banked
  8279  0022EA  51F2               	movf	V_Eval@channel& (0+255),w,b
  8280  0022EC  EC9E  F01B         	call	_SelChanConvADC
  8281                           
  8282                           ;user.c: 91: timeout = 10;
  8283  0022F0  0E00               	movlw	0
  8284  0022F2  0100               	movlb	0	; () banked
  8285  0022F4  6F9D               	movwf	(_timeout+1)& (0+255),b
  8286  0022F6  0E0A               	movlw	10
  8287  0022F8  6F9C               	movwf	_timeout& (0+255),b
  8288  0022FA                     l6862:
  8289                           
  8290                           ; BSR set to: 0
  8291  0022FA  ECD8  F01B         	call	_BusyADC	;wreg free
  8292  0022FE  0900               	iorlw	0
  8293  002300  B4D8               	btfsc	status,2,c
  8294  002302  D006               	goto	l6866
  8295  002304  0100               	movlb	0	; () banked
  8296  002306  519C               	movf	_timeout& (0+255),w,b
  8297  002308  0100               	movlb	0	; () banked
  8298  00230A  119D               	iorwf	(_timeout+1)& (0+255),w,b
  8299  00230C  A4D8               	btfss	status,2,c
  8300  00230E  D7F5               	goto	l6862
  8301  002310                     l6866:
  8302                           
  8303                           ;user.c: 94: if (timeout == 0)
  8304  002310  0100               	movlb	0	; () banked
  8305  002312  519C               	movf	_timeout& (0+255),w,b
  8306  002314  0100               	movlb	0	; () banked
  8307  002316  119D               	iorwf	(_timeout+1)& (0+255),w,b
  8308  002318  A4D8               	btfss	status,2,c
  8309  00231A  D006               	goto	l6872
  8310                           
  8311                           ; BSR set to: 0
  8312                           ;user.c: 95: {
  8313                           ;user.c: 96: return KO;
  8314  00231C  0E00               	movlw	0
  8315  00231E  0100               	movlb	0	; () banked
  8316  002320  6FF1               	movwf	(?_V_Eval+1)& (0+255),b
  8317  002322  0E01               	movlw	1
  8318  002324  6FF0               	movwf	?_V_Eval& (0+255),b
  8319                           
  8320                           ; BSR set to: 0
  8321  002326  0012               	return	
  8322  002328                     l6872:
  8323                           
  8324                           ; BSR set to: 0
  8325                           ;user.c: 97: }
  8326                           ;user.c: 99: temp = ReadADC();
  8327  002328  ECAF  F01B         	call	_ReadADC	;wreg free
  8328  00232C  C0BA  F0C2         	movff	?_ReadADC,___awtoft@c
  8329  002330  C0BB  F0C3         	movff	?_ReadADC+1,___awtoft@c+1
  8330  002334  EC23  F01A         	call	___awtoft	;wreg free
  8331  002338  C0C2  F0F3         	movff	?___awtoft,V_Eval@temp
  8332  00233C  C0C3  F0F4         	movff	?___awtoft+1,V_Eval@temp+1
  8333  002340  C0C4  F0F5         	movff	?___awtoft+2,V_Eval@temp+2
  8334                           
  8335                           ;user.c: 100: *voltage = (temp / 1024.0) * 5.0;
  8336  002344  0E00               	movlw	0
  8337  002346  0100               	movlb	0	; () banked
  8338  002348  6FE4               	movwf	___ftdiv@f2& (0+255),b
  8339  00234A  0E80               	movlw	128
  8340  00234C  0100               	movlb	0	; () banked
  8341  00234E  6FE5               	movwf	(___ftdiv@f2+1)& (0+255),b
  8342  002350  0E44               	movlw	68
  8343  002352  0100               	movlb	0	; () banked
  8344  002354  6FE6               	movwf	(___ftdiv@f2+2)& (0+255),b
  8345  002356  C0F3  F0E1         	movff	V_Eval@temp,___ftdiv@f1
  8346  00235A  C0F4  F0E2         	movff	V_Eval@temp+1,___ftdiv@f1+1
  8347  00235E  C0F5  F0E3         	movff	V_Eval@temp+2,___ftdiv@f1+2
  8348  002362  EC2D  F00B         	call	___ftdiv	;wreg free
  8349  002366  C0E1  F0C6         	movff	?___ftdiv,___ftmul@f1
  8350  00236A  C0E2  F0C7         	movff	?___ftdiv+1,___ftmul@f1+1
  8351  00236E  C0E3  F0C8         	movff	?___ftdiv+2,___ftmul@f1+2
  8352  002372  0E00               	movlw	0
  8353  002374  0100               	movlb	0	; () banked
  8354  002376  6FC9               	movwf	___ftmul@f2& (0+255),b
  8355  002378  0EA0               	movlw	160
  8356  00237A  0100               	movlb	0	; () banked
  8357  00237C  6FCA               	movwf	(___ftmul@f2+1)& (0+255),b
  8358  00237E  0E40               	movlw	64
  8359  002380  0100               	movlb	0	; () banked
  8360  002382  6FCB               	movwf	(___ftmul@f2+2)& (0+255),b
  8361  002384  ECD2  F009         	call	___ftmul	;wreg free
  8362  002388  C0F0  FFD9         	movff	V_Eval@voltage,fsr2l
  8363  00238C  C0F1  FFDA         	movff	V_Eval@voltage+1,fsr2h
  8364  002390  C0C6  FFDE         	movff	?___ftmul,postinc2
  8365  002394  C0C7  FFDE         	movff	?___ftmul+1,postinc2
  8366  002398  C0C8  FFDE         	movff	?___ftmul+2,postinc2
  8367                           
  8368                           ;user.c: 102: return OK;
  8369  00239C  0E00               	movlw	0
  8370  00239E  0100               	movlb	0	; () banked
  8371  0023A0  6FF1               	movwf	(?_V_Eval+1)& (0+255),b
  8372  0023A2  0E00               	movlw	0
  8373  0023A4  6FF0               	movwf	?_V_Eval& (0+255),b
  8374  0023A6  0012               	return	
  8375  0023A8                     __end_of_V_Eval:
  8376                           	opt stack 0
  8377                           tblptru	equ	0xFF8
  8378                           tblptrh	equ	0xFF7
  8379                           tblptrl	equ	0xFF6
  8380                           tablat	equ	0xFF5
  8381                           prodh	equ	0xFF4
  8382                           prodl	equ	0xFF3
  8383                           postinc0	equ	0xFEE
  8384                           wreg	equ	0xFE8
  8385                           indf1	equ	0xFE7
  8386                           postdec1	equ	0xFE5
  8387                           fsr1h	equ	0xFE2
  8388                           fsr1l	equ	0xFE1
  8389                           indf2	equ	0xFDF
  8390                           postinc2	equ	0xFDE
  8391                           postdec2	equ	0xFDD
  8392                           plusw2	equ	0xFDB
  8393                           fsr2h	equ	0xFDA
  8394                           fsr2l	equ	0xFD9
  8395                           status	equ	0xFD8
  8396                           
  8397 ;; *************** function ___ftmul *****************
  8398 ;; Defined at:
  8399 ;;		line 62 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\ftmul.c"
  8400 ;; Parameters:    Size  Location     Type
  8401 ;;  f1              3   12[BANK0 ] float 
  8402 ;;  f2              3   15[BANK0 ] float 
  8403 ;; Auto vars:     Size  Location     Type
  8404 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
  8405 ;;  sign            1   26[BANK0 ] unsigned char 
  8406 ;;  cntr            1   25[BANK0 ] unsigned char 
  8407 ;;  exp             1   21[BANK0 ] unsigned char 
  8408 ;; Return value:  Size  Location     Type
  8409 ;;                  3   12[BANK0 ] float 
  8410 ;; Registers used:
  8411 ;;		wreg, status,2, status,0, cstack
  8412 ;; Tracked objects:
  8413 ;;		On entry : 0/0
  8414 ;;		On exit  : 0/0
  8415 ;;		Unchanged: 0/0
  8416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8417 ;;      Params:         0       6       0       0       0       0       0       0       0
  8418 ;;      Locals:         0       6       0       0       0       0       0       0       0
  8419 ;;      Temps:          0       3       0       0       0       0       0       0       0
  8420 ;;      Totals:         0      15       0       0       0       0       0       0       0
  8421 ;;Total ram usage:       15 bytes
  8422 ;; Hardware stack levels used:    1
  8423 ;; Hardware stack levels required when called:   12
  8424 ;; This function calls:
  8425 ;;		___ftpack
  8426 ;; This function is called by:
  8427 ;;		_V_Eval
  8428 ;;		_CalcPI
  8429 ;;		_check_Precondition
  8430 ;;		_verifie_Precondition
  8431 ;;		_verifie_Vbat
  8432 ;;		_start_CV
  8433 ;;		_verifie_Ibat
  8434 ;;		_stop_CV
  8435 ;; This function uses a non-reentrant model
  8436 ;;
  8437                           
  8438                           	psect	text37
  8439  0013A4                     __ptext37:
  8440                           	opt stack 0
  8441  0013A4                     ___ftmul:
  8442                           	opt stack 17
  8443                           
  8444                           ; BSR set to: 0
  8445                           ;incstack = 0
  8446  0013A4  C0C8  F0CC         	movff	___ftmul@f1+2,??___ftmul
  8447  0013A8  0100               	movlb	0	; () banked
  8448  0013AA  6BCD               	clrf	(??___ftmul+1)& (0+255),b
  8449  0013AC  6BCE               	clrf	(??___ftmul+2)& (0+255),b
  8450  0013AE  0100               	movlb	0	; () banked
  8451  0013B0  35C7               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  8452  0013B2  0100               	movlb	0	; () banked
  8453  0013B4  37CC               	rlcf	??___ftmul& (0+255),f,b
  8454  0013B6  E301               	bnc	u6831
  8455  0013B8  81CD               	bsf	(??___ftmul+1)& (0+255),0,b
  8456  0013BA                     u6831:
  8457  0013BA  0100               	movlb	0	; () banked
  8458  0013BC  51CC               	movf	??___ftmul& (0+255),w,b
  8459  0013BE  0100               	movlb	0	; () banked
  8460  0013C0  6FCF               	movwf	___ftmul@exp& (0+255),b
  8461  0013C2  0100               	movlb	0	; () banked
  8462  0013C4  51CF               	movf	___ftmul@exp& (0+255),w,b
  8463  0013C6  A4D8               	btfss	status,2,c
  8464  0013C8  D00A               	goto	l6758
  8465                           
  8466                           ; BSR set to: 0
  8467  0013CA  0E00               	movlw	0
  8468  0013CC  0100               	movlb	0	; () banked
  8469  0013CE  6FC6               	movwf	?___ftmul& (0+255),b
  8470  0013D0  0E00               	movlw	0
  8471  0013D2  0100               	movlb	0	; () banked
  8472  0013D4  6FC7               	movwf	(?___ftmul+1)& (0+255),b
  8473  0013D6  0E00               	movlw	0
  8474  0013D8  0100               	movlb	0	; () banked
  8475  0013DA  6FC8               	movwf	(?___ftmul+2)& (0+255),b
  8476                           
  8477                           ; BSR set to: 0
  8478  0013DC  0012               	return	
  8479  0013DE                     l6758:
  8480                           
  8481                           ; BSR set to: 0
  8482  0013DE  C0CB  F0CC         	movff	___ftmul@f2+2,??___ftmul
  8483  0013E2  0100               	movlb	0	; () banked
  8484  0013E4  6BCD               	clrf	(??___ftmul+1)& (0+255),b
  8485  0013E6  6BCE               	clrf	(??___ftmul+2)& (0+255),b
  8486  0013E8  0100               	movlb	0	; () banked
  8487  0013EA  35CA               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  8488  0013EC  0100               	movlb	0	; () banked
  8489  0013EE  37CC               	rlcf	??___ftmul& (0+255),f,b
  8490  0013F0  E301               	bnc	u6851
  8491  0013F2  81CD               	bsf	(??___ftmul+1)& (0+255),0,b
  8492  0013F4                     u6851:
  8493  0013F4  0100               	movlb	0	; () banked
  8494  0013F6  51CC               	movf	??___ftmul& (0+255),w,b
  8495  0013F8  0100               	movlb	0	; () banked
  8496  0013FA  6FD4               	movwf	___ftmul@sign& (0+255),b
  8497  0013FC  0100               	movlb	0	; () banked
  8498  0013FE  51D4               	movf	___ftmul@sign& (0+255),w,b
  8499  001400  A4D8               	btfss	status,2,c
  8500  001402  D00A               	goto	l6764
  8501                           
  8502                           ; BSR set to: 0
  8503  001404  0E00               	movlw	0
  8504  001406  0100               	movlb	0	; () banked
  8505  001408  6FC6               	movwf	?___ftmul& (0+255),b
  8506  00140A  0E00               	movlw	0
  8507  00140C  0100               	movlb	0	; () banked
  8508  00140E  6FC7               	movwf	(?___ftmul+1)& (0+255),b
  8509  001410  0E00               	movlw	0
  8510  001412  0100               	movlb	0	; () banked
  8511  001414  6FC8               	movwf	(?___ftmul+2)& (0+255),b
  8512                           
  8513                           ; BSR set to: 0
  8514  001416  0012               	return	
  8515  001418                     l6764:
  8516                           
  8517                           ; BSR set to: 0
  8518  001418  0100               	movlb	0	; () banked
  8519  00141A  51D4               	movf	___ftmul@sign& (0+255),w,b
  8520  00141C  0F7B               	addlw	123
  8521  00141E  0100               	movlb	0	; () banked
  8522  001420  27CF               	addwf	___ftmul@exp& (0+255),f,b
  8523                           
  8524                           ; BSR set to: 0
  8525  001422  C0C8  F0D4         	movff	___ftmul@f1+2,___ftmul@sign
  8526  001426  0100               	movlb	0	; () banked
  8527  001428  51CB               	movf	(___ftmul@f2+2)& (0+255),w,b
  8528  00142A  0100               	movlb	0	; () banked
  8529  00142C  1BD4               	xorwf	___ftmul@sign& (0+255),f,b
  8530  00142E  0E80               	movlw	128
  8531  001430  0100               	movlb	0	; () banked
  8532  001432  17D4               	andwf	___ftmul@sign& (0+255),f,b
  8533                           
  8534                           ; BSR set to: 0
  8535  001434  0100               	movlb	0	; () banked
  8536  001436  8FC7               	bsf	(___ftmul@f1+1)& (0+255),7,b
  8537                           
  8538                           ; BSR set to: 0
  8539  001438  0100               	movlb	0	; () banked
  8540  00143A  8FCA               	bsf	(___ftmul@f2+1)& (0+255),7,b
  8541                           
  8542                           ; BSR set to: 0
  8543  00143C  0EFF               	movlw	255
  8544  00143E  0100               	movlb	0	; () banked
  8545  001440  17C9               	andwf	___ftmul@f2& (0+255),f,b
  8546  001442  0EFF               	movlw	255
  8547  001444  0100               	movlb	0	; () banked
  8548  001446  17CA               	andwf	(___ftmul@f2+1)& (0+255),f,b
  8549  001448  0E00               	movlw	0
  8550  00144A  0100               	movlb	0	; () banked
  8551  00144C  17CB               	andwf	(___ftmul@f2+2)& (0+255),f,b
  8552                           
  8553                           ; BSR set to: 0
  8554  00144E  0E00               	movlw	0
  8555  001450  0100               	movlb	0	; () banked
  8556  001452  6FD0               	movwf	___ftmul@f3_as_product& (0+255),b
  8557  001454  0E00               	movlw	0
  8558  001456  0100               	movlb	0	; () banked
  8559  001458  6FD1               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  8560  00145A  0E00               	movlw	0
  8561  00145C  0100               	movlb	0	; () banked
  8562  00145E  6FD2               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  8563                           
  8564                           ; BSR set to: 0
  8565  001460  0E07               	movlw	7
  8566  001462  0100               	movlb	0	; () banked
  8567  001464  6FD3               	movwf	___ftmul@cntr& (0+255),b
  8568  001466                     l6778:
  8569                           
  8570                           ; BSR set to: 0
  8571  001466  0100               	movlb	0	; () banked
  8572  001468  A1C6               	btfss	___ftmul@f1& (0+255),0,b
  8573  00146A  D00C               	goto	l6782
  8574                           
  8575                           ; BSR set to: 0
  8576  00146C  0100               	movlb	0	; () banked
  8577  00146E  51C9               	movf	___ftmul@f2& (0+255),w,b
  8578  001470  0100               	movlb	0	; () banked
  8579  001472  27D0               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8580  001474  0100               	movlb	0	; () banked
  8581  001476  51CA               	movf	(___ftmul@f2+1)& (0+255),w,b
  8582  001478  0100               	movlb	0	; () banked
  8583  00147A  23D1               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8584  00147C  0100               	movlb	0	; () banked
  8585  00147E  51CB               	movf	(___ftmul@f2+2)& (0+255),w,b
  8586  001480  0100               	movlb	0	; () banked
  8587  001482  23D2               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8588  001484                     l6782:
  8589                           
  8590                           ; BSR set to: 0
  8591  001484  0100               	movlb	0	; () banked
  8592  001486  90D8               	bcf	status,0,c
  8593  001488  33C8               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  8594  00148A  33C7               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  8595  00148C  33C6               	rrcf	___ftmul@f1& (0+255),f,b
  8596  00148E  0100               	movlb	0	; () banked
  8597  001490  90D8               	bcf	status,0,c
  8598  001492  37C9               	rlcf	___ftmul@f2& (0+255),f,b
  8599  001494  37CA               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  8600  001496  37CB               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  8601                           
  8602                           ; BSR set to: 0
  8603  001498  0100               	movlb	0	; () banked
  8604  00149A  2FD3               	decfsz	___ftmul@cntr& (0+255),f,b
  8605  00149C  D7E4               	goto	l6778
  8606                           
  8607                           ; BSR set to: 0
  8608                           
  8609                           ; BSR set to: 0
  8610  00149E  0E09               	movlw	9
  8611  0014A0  0100               	movlb	0	; () banked
  8612  0014A2  6FD3               	movwf	___ftmul@cntr& (0+255),b
  8613  0014A4                     l6788:
  8614                           
  8615                           ; BSR set to: 0
  8616  0014A4  0100               	movlb	0	; () banked
  8617  0014A6  A1C6               	btfss	___ftmul@f1& (0+255),0,b
  8618  0014A8  D00C               	goto	l6792
  8619                           
  8620                           ; BSR set to: 0
  8621  0014AA  0100               	movlb	0	; () banked
  8622  0014AC  51C9               	movf	___ftmul@f2& (0+255),w,b
  8623  0014AE  0100               	movlb	0	; () banked
  8624  0014B0  27D0               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8625  0014B2  0100               	movlb	0	; () banked
  8626  0014B4  51CA               	movf	(___ftmul@f2+1)& (0+255),w,b
  8627  0014B6  0100               	movlb	0	; () banked
  8628  0014B8  23D1               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8629  0014BA  0100               	movlb	0	; () banked
  8630  0014BC  51CB               	movf	(___ftmul@f2+2)& (0+255),w,b
  8631  0014BE  0100               	movlb	0	; () banked
  8632  0014C0  23D2               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8633  0014C2                     l6792:
  8634                           
  8635                           ; BSR set to: 0
  8636  0014C2  0100               	movlb	0	; () banked
  8637  0014C4  90D8               	bcf	status,0,c
  8638  0014C6  33C8               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  8639  0014C8  33C7               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  8640  0014CA  33C6               	rrcf	___ftmul@f1& (0+255),f,b
  8641  0014CC  0100               	movlb	0	; () banked
  8642  0014CE  90D8               	bcf	status,0,c
  8643  0014D0  33D2               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  8644  0014D2  33D1               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  8645  0014D4  33D0               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  8646                           
  8647                           ; BSR set to: 0
  8648  0014D6  0100               	movlb	0	; () banked
  8649  0014D8  2FD3               	decfsz	___ftmul@cntr& (0+255),f,b
  8650  0014DA  D7E4               	goto	l6788
  8651                           
  8652                           ; BSR set to: 0
  8653                           
  8654                           ; BSR set to: 0
  8655  0014DC  C0D0  F0BA         	movff	___ftmul@f3_as_product,___ftpack@arg
  8656  0014E0  C0D1  F0BB         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  8657  0014E4  C0D2  F0BC         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  8658  0014E8  C0CF  F0BD         	movff	___ftmul@exp,___ftpack@exp
  8659  0014EC  C0D4  F0BE         	movff	___ftmul@sign,___ftpack@sign
  8660  0014F0  EC34  F00E         	call	___ftpack	;wreg free
  8661  0014F4  C0BA  F0C6         	movff	?___ftpack,?___ftmul
  8662  0014F8  C0BB  F0C7         	movff	?___ftpack+1,?___ftmul+1
  8663  0014FC  C0BC  F0C8         	movff	?___ftpack+2,?___ftmul+2
  8664  001500  0012               	return	
  8665  001502                     __end_of___ftmul:
  8666                           	opt stack 0
  8667                           tblptru	equ	0xFF8
  8668                           tblptrh	equ	0xFF7
  8669                           tblptrl	equ	0xFF6
  8670                           tablat	equ	0xFF5
  8671                           prodh	equ	0xFF4
  8672                           prodl	equ	0xFF3
  8673                           postinc0	equ	0xFEE
  8674                           wreg	equ	0xFE8
  8675                           indf1	equ	0xFE7
  8676                           postdec1	equ	0xFE5
  8677                           fsr1h	equ	0xFE2
  8678                           fsr1l	equ	0xFE1
  8679                           indf2	equ	0xFDF
  8680                           postinc2	equ	0xFDE
  8681                           postdec2	equ	0xFDD
  8682                           plusw2	equ	0xFDB
  8683                           fsr2h	equ	0xFDA
  8684                           fsr2l	equ	0xFD9
  8685                           status	equ	0xFD8
  8686                           
  8687 ;; *************** function ___ftdiv *****************
  8688 ;; Defined at:
  8689 ;;		line 54 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\ftdiv.c"
  8690 ;; Parameters:    Size  Location     Type
  8691 ;;  f1              3   39[BANK0 ] float 
  8692 ;;  f2              3   42[BANK0 ] float 
  8693 ;; Auto vars:     Size  Location     Type
  8694 ;;  f3              3   49[BANK0 ] float 
  8695 ;;  sign            1   53[BANK0 ] unsigned char 
  8696 ;;  exp             1   52[BANK0 ] unsigned char 
  8697 ;;  cntr            1   48[BANK0 ] unsigned char 
  8698 ;; Return value:  Size  Location     Type
  8699 ;;                  3   39[BANK0 ] float 
  8700 ;; Registers used:
  8701 ;;		wreg, status,2, status,0, cstack
  8702 ;; Tracked objects:
  8703 ;;		On entry : 0/0
  8704 ;;		On exit  : 0/0
  8705 ;;		Unchanged: 0/0
  8706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8707 ;;      Params:         0       6       0       0       0       0       0       0       0
  8708 ;;      Locals:         0       6       0       0       0       0       0       0       0
  8709 ;;      Temps:          0       3       0       0       0       0       0       0       0
  8710 ;;      Totals:         0      15       0       0       0       0       0       0       0
  8711 ;;Total ram usage:       15 bytes
  8712 ;; Hardware stack levels used:    1
  8713 ;; Hardware stack levels required when called:   12
  8714 ;; This function calls:
  8715 ;;		___ftpack
  8716 ;; This function is called by:
  8717 ;;		_V_Eval
  8718 ;;		_CalcPI
  8719 ;; This function uses a non-reentrant model
  8720 ;;
  8721                           
  8722                           	psect	text38
  8723  00165A                     __ptext38:
  8724                           	opt stack 0
  8725  00165A                     ___ftdiv:
  8726                           	opt stack 16
  8727                           
  8728                           ;incstack = 0
  8729  00165A  C0E3  F0E7         	movff	___ftdiv@f1+2,??___ftdiv
  8730  00165E  0100               	movlb	0	; () banked
  8731  001660  6BE8               	clrf	(??___ftdiv+1)& (0+255),b
  8732  001662  6BE9               	clrf	(??___ftdiv+2)& (0+255),b
  8733  001664  0100               	movlb	0	; () banked
  8734  001666  35E2               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  8735  001668  0100               	movlb	0	; () banked
  8736  00166A  37E7               	rlcf	??___ftdiv& (0+255),f,b
  8737  00166C  E301               	bnc	u6781
  8738  00166E  81E8               	bsf	(??___ftdiv+1)& (0+255),0,b
  8739  001670                     u6781:
  8740  001670  0100               	movlb	0	; () banked
  8741  001672  51E7               	movf	??___ftdiv& (0+255),w,b
  8742  001674  0100               	movlb	0	; () banked
  8743  001676  6FEE               	movwf	___ftdiv@exp& (0+255),b
  8744  001678  0100               	movlb	0	; () banked
  8745  00167A  51EE               	movf	___ftdiv@exp& (0+255),w,b
  8746  00167C  A4D8               	btfss	status,2,c
  8747  00167E  D00A               	goto	l6712
  8748                           
  8749                           ; BSR set to: 0
  8750  001680  0E00               	movlw	0
  8751  001682  0100               	movlb	0	; () banked
  8752  001684  6FE1               	movwf	?___ftdiv& (0+255),b
  8753  001686  0E00               	movlw	0
  8754  001688  0100               	movlb	0	; () banked
  8755  00168A  6FE2               	movwf	(?___ftdiv+1)& (0+255),b
  8756  00168C  0E00               	movlw	0
  8757  00168E  0100               	movlb	0	; () banked
  8758  001690  6FE3               	movwf	(?___ftdiv+2)& (0+255),b
  8759                           
  8760                           ; BSR set to: 0
  8761  001692  0012               	return	
  8762  001694                     l6712:
  8763                           
  8764                           ; BSR set to: 0
  8765  001694  C0E6  F0E7         	movff	___ftdiv@f2+2,??___ftdiv
  8766  001698  0100               	movlb	0	; () banked
  8767  00169A  6BE8               	clrf	(??___ftdiv+1)& (0+255),b
  8768  00169C  6BE9               	clrf	(??___ftdiv+2)& (0+255),b
  8769  00169E  0100               	movlb	0	; () banked
  8770  0016A0  35E5               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  8771  0016A2  0100               	movlb	0	; () banked
  8772  0016A4  37E7               	rlcf	??___ftdiv& (0+255),f,b
  8773  0016A6  E301               	bnc	u6801
  8774  0016A8  81E8               	bsf	(??___ftdiv+1)& (0+255),0,b
  8775  0016AA                     u6801:
  8776  0016AA  0100               	movlb	0	; () banked
  8777  0016AC  51E7               	movf	??___ftdiv& (0+255),w,b
  8778  0016AE  0100               	movlb	0	; () banked
  8779  0016B0  6FEF               	movwf	___ftdiv@sign& (0+255),b
  8780  0016B2  0100               	movlb	0	; () banked
  8781  0016B4  51EF               	movf	___ftdiv@sign& (0+255),w,b
  8782  0016B6  A4D8               	btfss	status,2,c
  8783  0016B8  D00A               	goto	l6718
  8784                           
  8785                           ; BSR set to: 0
  8786  0016BA  0E00               	movlw	0
  8787  0016BC  0100               	movlb	0	; () banked
  8788  0016BE  6FE1               	movwf	?___ftdiv& (0+255),b
  8789  0016C0  0E00               	movlw	0
  8790  0016C2  0100               	movlb	0	; () banked
  8791  0016C4  6FE2               	movwf	(?___ftdiv+1)& (0+255),b
  8792  0016C6  0E00               	movlw	0
  8793  0016C8  0100               	movlb	0	; () banked
  8794  0016CA  6FE3               	movwf	(?___ftdiv+2)& (0+255),b
  8795                           
  8796                           ; BSR set to: 0
  8797  0016CC  0012               	return	
  8798  0016CE                     l6718:
  8799                           
  8800                           ; BSR set to: 0
  8801  0016CE  0E00               	movlw	0
  8802  0016D0  0100               	movlb	0	; () banked
  8803  0016D2  6FEB               	movwf	___ftdiv@f3& (0+255),b
  8804  0016D4  0E00               	movlw	0
  8805  0016D6  0100               	movlb	0	; () banked
  8806  0016D8  6FEC               	movwf	(___ftdiv@f3+1)& (0+255),b
  8807  0016DA  0E00               	movlw	0
  8808  0016DC  0100               	movlb	0	; () banked
  8809  0016DE  6FED               	movwf	(___ftdiv@f3+2)& (0+255),b
  8810                           
  8811                           ; BSR set to: 0
  8812  0016E0  0100               	movlb	0	; () banked
  8813  0016E2  51EF               	movf	___ftdiv@sign& (0+255),w,b
  8814  0016E4  0F89               	addlw	137
  8815  0016E6  0100               	movlb	0	; () banked
  8816  0016E8  5FEE               	subwf	___ftdiv@exp& (0+255),f,b
  8817                           
  8818                           ; BSR set to: 0
  8819  0016EA  C0E3  F0EF         	movff	___ftdiv@f1+2,___ftdiv@sign
  8820                           
  8821                           ; BSR set to: 0
  8822  0016EE  0100               	movlb	0	; () banked
  8823  0016F0  51E6               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8824  0016F2  0100               	movlb	0	; () banked
  8825  0016F4  1BEF               	xorwf	___ftdiv@sign& (0+255),f,b
  8826                           
  8827                           ; BSR set to: 0
  8828  0016F6  0E80               	movlw	128
  8829  0016F8  0100               	movlb	0	; () banked
  8830  0016FA  17EF               	andwf	___ftdiv@sign& (0+255),f,b
  8831                           
  8832                           ; BSR set to: 0
  8833  0016FC  0100               	movlb	0	; () banked
  8834  0016FE  8FE2               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  8835                           
  8836                           ; BSR set to: 0
  8837  001700  0EFF               	movlw	255
  8838  001702  0100               	movlb	0	; () banked
  8839  001704  17E1               	andwf	___ftdiv@f1& (0+255),f,b
  8840  001706  0EFF               	movlw	255
  8841  001708  0100               	movlb	0	; () banked
  8842  00170A  17E2               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  8843  00170C  0E00               	movlw	0
  8844  00170E  0100               	movlb	0	; () banked
  8845  001710  17E3               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  8846                           
  8847                           ; BSR set to: 0
  8848  001712  0100               	movlb	0	; () banked
  8849  001714  8FE5               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  8850                           
  8851                           ; BSR set to: 0
  8852  001716  0EFF               	movlw	255
  8853  001718  0100               	movlb	0	; () banked
  8854  00171A  17E4               	andwf	___ftdiv@f2& (0+255),f,b
  8855  00171C  0EFF               	movlw	255
  8856  00171E  0100               	movlb	0	; () banked
  8857  001720  17E5               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  8858  001722  0E00               	movlw	0
  8859  001724  0100               	movlb	0	; () banked
  8860  001726  17E6               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  8861                           
  8862                           ; BSR set to: 0
  8863  001728  0E18               	movlw	24
  8864  00172A  0100               	movlb	0	; () banked
  8865  00172C  6FEA               	movwf	___ftdiv@cntr& (0+255),b
  8866  00172E                     l6738:
  8867                           
  8868                           ; BSR set to: 0
  8869  00172E  0100               	movlb	0	; () banked
  8870  001730  90D8               	bcf	status,0,c
  8871  001732  37EB               	rlcf	___ftdiv@f3& (0+255),f,b
  8872  001734  37EC               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  8873  001736  37ED               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  8874                           
  8875                           ; BSR set to: 0
  8876  001738  0100               	movlb	0	; () banked
  8877  00173A  51E4               	movf	___ftdiv@f2& (0+255),w,b
  8878  00173C  0100               	movlb	0	; () banked
  8879  00173E  5DE1               	subwf	___ftdiv@f1& (0+255),w,b
  8880  001740  0100               	movlb	0	; () banked
  8881  001742  51E5               	movf	(___ftdiv@f2+1)& (0+255),w,b
  8882  001744  0100               	movlb	0	; () banked
  8883  001746  59E2               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  8884  001748  0100               	movlb	0	; () banked
  8885  00174A  51E6               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8886  00174C  0100               	movlb	0	; () banked
  8887  00174E  59E3               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  8888  001750  A0D8               	btfss	status,0,c
  8889  001752  D00E               	goto	l1301
  8890                           
  8891                           ; BSR set to: 0
  8892  001754  0100               	movlb	0	; () banked
  8893  001756  51E4               	movf	___ftdiv@f2& (0+255),w,b
  8894  001758  0100               	movlb	0	; () banked
  8895  00175A  5FE1               	subwf	___ftdiv@f1& (0+255),f,b
  8896  00175C  0100               	movlb	0	; () banked
  8897  00175E  51E5               	movf	(___ftdiv@f2+1)& (0+255),w,b
  8898  001760  0100               	movlb	0	; () banked
  8899  001762  5BE2               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  8900  001764  0100               	movlb	0	; () banked
  8901  001766  51E6               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8902  001768  0100               	movlb	0	; () banked
  8903  00176A  5BE3               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  8904                           
  8905                           ; BSR set to: 0
  8906  00176C  0100               	movlb	0	; () banked
  8907  00176E  81EB               	bsf	___ftdiv@f3& (0+255),0,b
  8908  001770                     l1301:
  8909                           
  8910                           ; BSR set to: 0
  8911  001770  0100               	movlb	0	; () banked
  8912  001772  90D8               	bcf	status,0,c
  8913  001774  37E1               	rlcf	___ftdiv@f1& (0+255),f,b
  8914  001776  37E2               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  8915  001778  37E3               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  8916                           
  8917                           ; BSR set to: 0
  8918  00177A  0100               	movlb	0	; () banked
  8919  00177C  2FEA               	decfsz	___ftdiv@cntr& (0+255),f,b
  8920  00177E  D7D7               	goto	l6738
  8921                           
  8922                           ; BSR set to: 0
  8923                           
  8924                           ; BSR set to: 0
  8925  001780  C0EB  F0BA         	movff	___ftdiv@f3,___ftpack@arg
  8926  001784  C0EC  F0BB         	movff	___ftdiv@f3+1,___ftpack@arg+1
  8927  001788  C0ED  F0BC         	movff	___ftdiv@f3+2,___ftpack@arg+2
  8928  00178C  C0EE  F0BD         	movff	___ftdiv@exp,___ftpack@exp
  8929  001790  C0EF  F0BE         	movff	___ftdiv@sign,___ftpack@sign
  8930  001794  EC34  F00E         	call	___ftpack	;wreg free
  8931  001798  C0BA  F0E1         	movff	?___ftpack,?___ftdiv
  8932  00179C  C0BB  F0E2         	movff	?___ftpack+1,?___ftdiv+1
  8933  0017A0  C0BC  F0E3         	movff	?___ftpack+2,?___ftdiv+2
  8934  0017A4  0012               	return	
  8935  0017A6                     __end_of___ftdiv:
  8936                           	opt stack 0
  8937                           tblptru	equ	0xFF8
  8938                           tblptrh	equ	0xFF7
  8939                           tblptrl	equ	0xFF6
  8940                           tablat	equ	0xFF5
  8941                           prodh	equ	0xFF4
  8942                           prodl	equ	0xFF3
  8943                           postinc0	equ	0xFEE
  8944                           wreg	equ	0xFE8
  8945                           indf1	equ	0xFE7
  8946                           postdec1	equ	0xFE5
  8947                           fsr1h	equ	0xFE2
  8948                           fsr1l	equ	0xFE1
  8949                           indf2	equ	0xFDF
  8950                           postinc2	equ	0xFDE
  8951                           postdec2	equ	0xFDD
  8952                           plusw2	equ	0xFDB
  8953                           fsr2h	equ	0xFDA
  8954                           fsr2l	equ	0xFD9
  8955                           status	equ	0xFD8
  8956                           
  8957 ;; *************** function ___awtoft *****************
  8958 ;; Defined at:
  8959 ;;		line 32 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\awtoft.c"
  8960 ;; Parameters:    Size  Location     Type
  8961 ;;  c               2    8[BANK0 ] int 
  8962 ;; Auto vars:     Size  Location     Type
  8963 ;;  sign            1   11[BANK0 ] unsigned char 
  8964 ;; Return value:  Size  Location     Type
  8965 ;;                  3    8[BANK0 ] float 
  8966 ;; Registers used:
  8967 ;;		wreg, status,2, status,0, cstack
  8968 ;; Tracked objects:
  8969 ;;		On entry : 0/0
  8970 ;;		On exit  : 0/0
  8971 ;;		Unchanged: 0/0
  8972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8973 ;;      Params:         0       3       0       0       0       0       0       0       0
  8974 ;;      Locals:         0       1       0       0       0       0       0       0       0
  8975 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8976 ;;      Totals:         0       4       0       0       0       0       0       0       0
  8977 ;;Total ram usage:        4 bytes
  8978 ;; Hardware stack levels used:    1
  8979 ;; Hardware stack levels required when called:   12
  8980 ;; This function calls:
  8981 ;;		___ftpack
  8982 ;; This function is called by:
  8983 ;;		_V_Eval
  8984 ;;		_CalcPI
  8985 ;; This function uses a non-reentrant model
  8986 ;;
  8987                           
  8988                           	psect	text39
  8989  003446                     __ptext39:
  8990                           	opt stack 0
  8991  003446                     ___awtoft:
  8992                           	opt stack 16
  8993                           
  8994                           ;incstack = 0
  8995  003446  0E00               	movlw	0
  8996  003448  0100               	movlb	0	; () banked
  8997  00344A  6FC5               	movwf	___awtoft@sign& (0+255),b
  8998                           
  8999                           ; BSR set to: 0
  9000  00344C  0100               	movlb	0	; () banked
  9001  00344E  AFC3               	btfss	(___awtoft@c+1)& (0+255),7,b
  9002  003450  D008               	goto	l6808
  9003                           
  9004                           ; BSR set to: 0
  9005  003452  0100               	movlb	0	; () banked
  9006  003454  6DC2               	negf	___awtoft@c& (0+255),b
  9007  003456  1FC3               	comf	(___awtoft@c+1)& (0+255),f,b
  9008  003458  B0D8               	btfsc	status,0,c
  9009  00345A  2BC3               	incf	(___awtoft@c+1)& (0+255),f,b
  9010                           
  9011                           ; BSR set to: 0
  9012  00345C  0E01               	movlw	1
  9013  00345E  0100               	movlb	0	; () banked
  9014  003460  6FC5               	movwf	___awtoft@sign& (0+255),b
  9015  003462                     l6808:
  9016                           
  9017                           ; BSR set to: 0
  9018  003462  C0C2  F0BA         	movff	___awtoft@c,___ftpack@arg
  9019  003466  C0C3  F0BB         	movff	___awtoft@c+1,___ftpack@arg+1
  9020  00346A  0100               	movlb	0	; () banked
  9021  00346C  6BBC               	clrf	(___ftpack@arg+2)& (0+255),b
  9022  00346E  0E8E               	movlw	142
  9023  003470  0100               	movlb	0	; () banked
  9024  003472  6FBD               	movwf	___ftpack@exp& (0+255),b
  9025  003474  C0C5  F0BE         	movff	___awtoft@sign,___ftpack@sign
  9026  003478  EC34  F00E         	call	___ftpack	;wreg free
  9027  00347C  C0BA  F0C2         	movff	?___ftpack,?___awtoft
  9028  003480  C0BB  F0C3         	movff	?___ftpack+1,?___awtoft+1
  9029  003484  C0BC  F0C4         	movff	?___ftpack+2,?___awtoft+2
  9030  003488  0012               	return	
  9031  00348A                     __end_of___awtoft:
  9032                           	opt stack 0
  9033                           tblptru	equ	0xFF8
  9034                           tblptrh	equ	0xFF7
  9035                           tblptrl	equ	0xFF6
  9036                           tablat	equ	0xFF5
  9037                           prodh	equ	0xFF4
  9038                           prodl	equ	0xFF3
  9039                           postinc0	equ	0xFEE
  9040                           wreg	equ	0xFE8
  9041                           indf1	equ	0xFE7
  9042                           postdec1	equ	0xFE5
  9043                           fsr1h	equ	0xFE2
  9044                           fsr1l	equ	0xFE1
  9045                           indf2	equ	0xFDF
  9046                           postinc2	equ	0xFDE
  9047                           postdec2	equ	0xFDD
  9048                           plusw2	equ	0xFDB
  9049                           fsr2h	equ	0xFDA
  9050                           fsr2l	equ	0xFD9
  9051                           status	equ	0xFD8
  9052                           
  9053 ;; *************** function ___ftpack *****************
  9054 ;; Defined at:
  9055 ;;		line 62 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\float.c"
  9056 ;; Parameters:    Size  Location     Type
  9057 ;;  arg             3    0[BANK0 ] unsigned um
  9058 ;;  exp             1    3[BANK0 ] unsigned char 
  9059 ;;  sign            1    4[BANK0 ] unsigned char 
  9060 ;; Auto vars:     Size  Location     Type
  9061 ;;		None
  9062 ;; Return value:  Size  Location     Type
  9063 ;;                  3    0[BANK0 ] float 
  9064 ;; Registers used:
  9065 ;;		wreg, status,2, status,0
  9066 ;; Tracked objects:
  9067 ;;		On entry : 0/0
  9068 ;;		On exit  : 0/0
  9069 ;;		Unchanged: 0/0
  9070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9071 ;;      Params:         0       5       0       0       0       0       0       0       0
  9072 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9073 ;;      Temps:          0       3       0       0       0       0       0       0       0
  9074 ;;      Totals:         0       8       0       0       0       0       0       0       0
  9075 ;;Total ram usage:        8 bytes
  9076 ;; Hardware stack levels used:    1
  9077 ;; Hardware stack levels required when called:   11
  9078 ;; This function calls:
  9079 ;;		Nothing
  9080 ;; This function is called by:
  9081 ;;		___awtoft
  9082 ;;		___ftadd
  9083 ;;		___ftdiv
  9084 ;;		___ftmul
  9085 ;;		___lwtoft
  9086 ;; This function uses a non-reentrant model
  9087 ;;
  9088                           
  9089                           	psect	text40
  9090  001C68                     __ptext40:
  9091                           	opt stack 0
  9092  001C68                     ___ftpack:
  9093                           	opt stack 17
  9094                           
  9095                           ;incstack = 0
  9096  001C68  0100               	movlb	0	; () banked
  9097  001C6A  51BD               	movf	___ftpack@exp& (0+255),w,b
  9098  001C6C  0100               	movlb	0	; () banked
  9099  001C6E  B4D8               	btfsc	status,2,c
  9100  001C70  D008               	goto	l6544
  9101                           
  9102                           ; BSR set to: 0
  9103  001C72  0100               	movlb	0	; () banked
  9104  001C74  51BA               	movf	___ftpack@arg& (0+255),w,b
  9105  001C76  0100               	movlb	0	; () banked
  9106  001C78  11BB               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  9107  001C7A  0100               	movlb	0	; () banked
  9108  001C7C  11BC               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  9109  001C7E  A4D8               	btfss	status,2,c
  9110  001C80  D011               	goto	l6550
  9111  001C82                     l6544:
  9112                           
  9113                           ; BSR set to: 0
  9114  001C82  0E00               	movlw	0
  9115  001C84  0100               	movlb	0	; () banked
  9116  001C86  6FBA               	movwf	?___ftpack& (0+255),b
  9117  001C88  0E00               	movlw	0
  9118  001C8A  0100               	movlb	0	; () banked
  9119  001C8C  6FBB               	movwf	(?___ftpack+1)& (0+255),b
  9120  001C8E  0E00               	movlw	0
  9121  001C90  0100               	movlb	0	; () banked
  9122  001C92  6FBC               	movwf	(?___ftpack+2)& (0+255),b
  9123                           
  9124                           ; BSR set to: 0
  9125  001C94  0012               	return	
  9126  001C96                     l6548:
  9127                           
  9128                           ; BSR set to: 0
  9129  001C96  0100               	movlb	0	; () banked
  9130  001C98  2BBD               	incf	___ftpack@exp& (0+255),f,b
  9131  001C9A  0100               	movlb	0	; () banked
  9132  001C9C  90D8               	bcf	status,0,c
  9133  001C9E  33BC               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9134  001CA0  33BB               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9135  001CA2  33BA               	rrcf	___ftpack@arg& (0+255),f,b
  9136  001CA4                     l6550:
  9137                           
  9138                           ; BSR set to: 0
  9139  001CA4  0E00               	movlw	0
  9140  001CA6  0100               	movlb	0	; () banked
  9141  001CA8  15BA               	andwf	___ftpack@arg& (0+255),w,b
  9142  001CAA  0100               	movlb	0	; () banked
  9143  001CAC  6FBF               	movwf	??___ftpack& (0+255),b
  9144  001CAE  0E00               	movlw	0
  9145  001CB0  0100               	movlb	0	; () banked
  9146  001CB2  15BB               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9147  001CB4  0100               	movlb	0	; () banked
  9148  001CB6  6FC0               	movwf	(??___ftpack+1)& (0+255),b
  9149  001CB8  0EFE               	movlw	254
  9150  001CBA  0100               	movlb	0	; () banked
  9151  001CBC  15BC               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9152  001CBE  0100               	movlb	0	; () banked
  9153  001CC0  6FC1               	movwf	(??___ftpack+2)& (0+255),b
  9154  001CC2  0100               	movlb	0	; () banked
  9155  001CC4  51BF               	movf	??___ftpack& (0+255),w,b
  9156  001CC6  0100               	movlb	0	; () banked
  9157  001CC8  11C0               	iorwf	(??___ftpack+1)& (0+255),w,b
  9158  001CCA  0100               	movlb	0	; () banked
  9159  001CCC  11C1               	iorwf	(??___ftpack+2)& (0+255),w,b
  9160  001CCE  B4D8               	btfsc	status,2,c
  9161  001CD0  D011               	goto	l6556
  9162  001CD2  D7E1               	goto	l6548
  9163  001CD4                     l6552:
  9164                           
  9165                           ; BSR set to: 0
  9166  001CD4  0100               	movlb	0	; () banked
  9167  001CD6  2BBD               	incf	___ftpack@exp& (0+255),f,b
  9168                           
  9169                           ; BSR set to: 0
  9170  001CD8  0E01               	movlw	1
  9171  001CDA  0100               	movlb	0	; () banked
  9172  001CDC  27BA               	addwf	___ftpack@arg& (0+255),f,b
  9173  001CDE  0E00               	movlw	0
  9174  001CE0  0100               	movlb	0	; () banked
  9175  001CE2  23BB               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  9176  001CE4  0E00               	movlw	0
  9177  001CE6  0100               	movlb	0	; () banked
  9178  001CE8  23BC               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  9179  001CEA  0100               	movlb	0	; () banked
  9180  001CEC  90D8               	bcf	status,0,c
  9181  001CEE  33BC               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  9182  001CF0  33BB               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  9183  001CF2  33BA               	rrcf	___ftpack@arg& (0+255),f,b
  9184  001CF4                     l6556:
  9185                           
  9186                           ; BSR set to: 0
  9187  001CF4  0E00               	movlw	0
  9188  001CF6  0100               	movlb	0	; () banked
  9189  001CF8  15BA               	andwf	___ftpack@arg& (0+255),w,b
  9190  001CFA  0100               	movlb	0	; () banked
  9191  001CFC  6FBF               	movwf	??___ftpack& (0+255),b
  9192  001CFE  0E00               	movlw	0
  9193  001D00  0100               	movlb	0	; () banked
  9194  001D02  15BB               	andwf	(___ftpack@arg+1)& (0+255),w,b
  9195  001D04  0100               	movlb	0	; () banked
  9196  001D06  6FC0               	movwf	(??___ftpack+1)& (0+255),b
  9197  001D08  0EFF               	movlw	255
  9198  001D0A  0100               	movlb	0	; () banked
  9199  001D0C  15BC               	andwf	(___ftpack@arg+2)& (0+255),w,b
  9200  001D0E  0100               	movlb	0	; () banked
  9201  001D10  6FC1               	movwf	(??___ftpack+2)& (0+255),b
  9202  001D12  0100               	movlb	0	; () banked
  9203  001D14  51BF               	movf	??___ftpack& (0+255),w,b
  9204  001D16  0100               	movlb	0	; () banked
  9205  001D18  11C0               	iorwf	(??___ftpack+1)& (0+255),w,b
  9206  001D1A  0100               	movlb	0	; () banked
  9207  001D1C  11C1               	iorwf	(??___ftpack+2)& (0+255),w,b
  9208  001D1E  B4D8               	btfsc	status,2,c
  9209  001D20  D008               	goto	l6560
  9210  001D22  D7D8               	goto	l6552
  9211  001D24                     l6558:
  9212                           
  9213                           ; BSR set to: 0
  9214  001D24  0100               	movlb	0	; () banked
  9215  001D26  07BD               	decf	___ftpack@exp& (0+255),f,b
  9216  001D28  0100               	movlb	0	; () banked
  9217  001D2A  90D8               	bcf	status,0,c
  9218  001D2C  37BA               	rlcf	___ftpack@arg& (0+255),f,b
  9219  001D2E  37BB               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  9220  001D30  37BC               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  9221  001D32                     l6560:
  9222                           
  9223                           ; BSR set to: 0
  9224  001D32  0100               	movlb	0	; () banked
  9225  001D34  BFBB               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  9226  001D36  D004               	goto	l1243
  9227                           
  9228                           ; BSR set to: 0
  9229  001D38  0E02               	movlw	2
  9230  001D3A  0100               	movlb	0	; () banked
  9231  001D3C  61BD               	cpfslt	___ftpack@exp& (0+255),b
  9232  001D3E  D7F2               	goto	l6558
  9233  001D40                     l1243:
  9234                           
  9235                           ; BSR set to: 0
  9236  001D40  0100               	movlb	0	; () banked
  9237  001D42  B1BD               	btfsc	___ftpack@exp& (0+255),0,b
  9238  001D44  D002               	goto	l6566
  9239                           
  9240                           ; BSR set to: 0
  9241  001D46  0100               	movlb	0	; () banked
  9242  001D48  9FBB               	bcf	(___ftpack@arg+1)& (0+255),7,b
  9243  001D4A                     l6566:
  9244                           
  9245                           ; BSR set to: 0
  9246  001D4A  0100               	movlb	0	; () banked
  9247  001D4C  90D8               	bcf	status,0,c
  9248  001D4E  33BD               	rrcf	___ftpack@exp& (0+255),f,b
  9249  001D50  0100               	movlb	0	; () banked
  9250  001D52  51BD               	movf	___ftpack@exp& (0+255),w,b
  9251  001D54  0100               	movlb	0	; () banked
  9252  001D56  13BC               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  9253                           
  9254                           ; BSR set to: 0
  9255  001D58  0100               	movlb	0	; () banked
  9256  001D5A  51BE               	movf	___ftpack@sign& (0+255),w,b
  9257  001D5C  0100               	movlb	0	; () banked
  9258  001D5E  B4D8               	btfsc	status,2,c
  9259  001D60  D002               	goto	l6572
  9260                           
  9261                           ; BSR set to: 0
  9262  001D62  0100               	movlb	0	; () banked
  9263  001D64  8FBC               	bsf	(___ftpack@arg+2)& (0+255),7,b
  9264  001D66                     l6572:
  9265                           
  9266                           ; BSR set to: 0
  9267  001D66  C0BA  F0BA         	movff	___ftpack@arg,?___ftpack
  9268  001D6A  C0BB  F0BB         	movff	___ftpack@arg+1,?___ftpack+1
  9269  001D6E  C0BC  F0BC         	movff	___ftpack@arg+2,?___ftpack+2
  9270  001D72  0012               	return	
  9271  001D74                     __end_of___ftpack:
  9272                           	opt stack 0
  9273                           tblptru	equ	0xFF8
  9274                           tblptrh	equ	0xFF7
  9275                           tblptrl	equ	0xFF6
  9276                           tablat	equ	0xFF5
  9277                           prodh	equ	0xFF4
  9278                           prodl	equ	0xFF3
  9279                           postinc0	equ	0xFEE
  9280                           wreg	equ	0xFE8
  9281                           indf1	equ	0xFE7
  9282                           postdec1	equ	0xFE5
  9283                           fsr1h	equ	0xFE2
  9284                           fsr1l	equ	0xFE1
  9285                           indf2	equ	0xFDF
  9286                           postinc2	equ	0xFDE
  9287                           postdec2	equ	0xFDD
  9288                           plusw2	equ	0xFDB
  9289                           fsr2h	equ	0xFDA
  9290                           fsr2l	equ	0xFD9
  9291                           status	equ	0xFD8
  9292                           
  9293 ;; *************** function _SelChanConvADC *****************
  9294 ;; Defined at:
  9295 ;;		line 15 in file "D:\Info\Soft\MPLABX\v1.35\sources\pic18\plib\ADC\adcselchconv.c"
  9296 ;; Parameters:    Size  Location     Type
  9297 ;;  channel         1    wreg     unsigned char 
  9298 ;; Auto vars:     Size  Location     Type
  9299 ;;  channel         1    1[BANK0 ] unsigned char 
  9300 ;; Return value:  Size  Location     Type
  9301 ;;		None               void
  9302 ;; Registers used:
  9303 ;;		wreg, status,2, status,0
  9304 ;; Tracked objects:
  9305 ;;		On entry : 0/0
  9306 ;;		On exit  : 0/0
  9307 ;;		Unchanged: 0/0
  9308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9309 ;;      Params:         0       0       0       0       0       0       0       0       0
  9310 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9311 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9312 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9313 ;;Total ram usage:        2 bytes
  9314 ;; Hardware stack levels used:    1
  9315 ;; Hardware stack levels required when called:   11
  9316 ;; This function calls:
  9317 ;;		Nothing
  9318 ;; This function is called by:
  9319 ;;		_V_Eval
  9320 ;; This function uses a non-reentrant model
  9321 ;;
  9322                           
  9323                           	psect	text41
  9324  00373C                     __ptext41:
  9325                           	opt stack 0
  9326  00373C                     _SelChanConvADC:
  9327                           	opt stack 17
  9328                           
  9329                           ; BSR set to: 0
  9330                           ;incstack = 0
  9331                           ;SelChanConvADC@channel stored from wreg
  9332  00373C  0100               	movlb	0	; () banked
  9333  00373E  6FBB               	movwf	SelChanConvADC@channel& (0+255),b
  9334  003740  C0BB  F0BA         	movff	SelChanConvADC@channel,??_SelChanConvADC
  9335  003744  0100               	movlb	0	; () banked
  9336  003746  90D8               	bcf	status,0,c
  9337  003748  33BA               	rrcf	??_SelChanConvADC& (0+255),f,b
  9338  00374A  0E3C               	movlw	60
  9339  00374C  0100               	movlb	0	; () banked
  9340  00374E  17BA               	andwf	??_SelChanConvADC& (0+255),f,b
  9341  003750  50C2               	movf	4034,w,c	;volatile
  9342  003752  0BC3               	andlw	195
  9343  003754  0100               	movlb	0	; () banked
  9344  003756  11BA               	iorwf	??_SelChanConvADC& (0+255),w,b
  9345  003758  6EC2               	movwf	4034,c	;volatile
  9346                           
  9347                           ; BSR set to: 0
  9348  00375A  82C2               	bsf	4034,1,c	;volatile
  9349                           
  9350                           ; BSR set to: 0
  9351  00375C  0012               	return		;funcret
  9352  00375E                     __end_of_SelChanConvADC:
  9353                           	opt stack 0
  9354                           tblptru	equ	0xFF8
  9355                           tblptrh	equ	0xFF7
  9356                           tblptrl	equ	0xFF6
  9357                           tablat	equ	0xFF5
  9358                           prodh	equ	0xFF4
  9359                           prodl	equ	0xFF3
  9360                           postinc0	equ	0xFEE
  9361                           wreg	equ	0xFE8
  9362                           indf1	equ	0xFE7
  9363                           postdec1	equ	0xFE5
  9364                           fsr1h	equ	0xFE2
  9365                           fsr1l	equ	0xFE1
  9366                           indf2	equ	0xFDF
  9367                           postinc2	equ	0xFDE
  9368                           postdec2	equ	0xFDD
  9369                           plusw2	equ	0xFDB
  9370                           fsr2h	equ	0xFDA
  9371                           fsr2l	equ	0xFD9
  9372                           status	equ	0xFD8
  9373                           
  9374 ;; *************** function _ReadADC *****************
  9375 ;; Defined at:
  9376 ;;		line 24 in file "D:\Info\Soft\MPLABX\v1.35\sources\pic18\plib\ADC\adcread.c"
  9377 ;; Parameters:    Size  Location     Type
  9378 ;;		None
  9379 ;; Auto vars:     Size  Location     Type
  9380 ;;		None
  9381 ;; Return value:  Size  Location     Type
  9382 ;;                  2    0[BANK0 ] int 
  9383 ;; Registers used:
  9384 ;;		wreg, status,2
  9385 ;; Tracked objects:
  9386 ;;		On entry : 0/0
  9387 ;;		On exit  : 0/0
  9388 ;;		Unchanged: 0/0
  9389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9390 ;;      Params:         0       2       0       0       0       0       0       0       0
  9391 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9392 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9393 ;;      Totals:         0       4       0       0       0       0       0       0       0
  9394 ;;Total ram usage:        4 bytes
  9395 ;; Hardware stack levels used:    1
  9396 ;; Hardware stack levels required when called:   11
  9397 ;; This function calls:
  9398 ;;		Nothing
  9399 ;; This function is called by:
  9400 ;;		_V_Eval
  9401 ;; This function uses a non-reentrant model
  9402 ;;
  9403                           
  9404                           	psect	text42
  9405  00375E                     __ptext42:
  9406                           	opt stack 0
  9407  00375E                     _ReadADC:
  9408                           	opt stack 17
  9409                           
  9410                           ; BSR set to: 0
  9411                           ;incstack = 0
  9412  00375E  50C4               	movf	4036,w,c	;volatile
  9413  003760  0100               	movlb	0	; () banked
  9414  003762  6FBC               	movwf	??_ReadADC& (0+255),b
  9415  003764  50C3               	movf	4035,w,c	;volatile
  9416  003766  0100               	movlb	0	; () banked
  9417  003768  6FBA               	movwf	?_ReadADC& (0+255),b
  9418  00376A  C0BC  F0BB         	movff	??_ReadADC,?_ReadADC+1
  9419  00376E  0012               	return	
  9420  003770                     __end_of_ReadADC:
  9421                           	opt stack 0
  9422                           tblptru	equ	0xFF8
  9423                           tblptrh	equ	0xFF7
  9424                           tblptrl	equ	0xFF6
  9425                           tablat	equ	0xFF5
  9426                           prodh	equ	0xFF4
  9427                           prodl	equ	0xFF3
  9428                           postinc0	equ	0xFEE
  9429                           wreg	equ	0xFE8
  9430                           indf1	equ	0xFE7
  9431                           postdec1	equ	0xFE5
  9432                           fsr1h	equ	0xFE2
  9433                           fsr1l	equ	0xFE1
  9434                           indf2	equ	0xFDF
  9435                           postinc2	equ	0xFDE
  9436                           postdec2	equ	0xFDD
  9437                           plusw2	equ	0xFDB
  9438                           fsr2h	equ	0xFDA
  9439                           fsr2l	equ	0xFD9
  9440                           status	equ	0xFD8
  9441                           
  9442 ;; *************** function _BusyADC *****************
  9443 ;; Defined at:
  9444 ;;		line 26 in file "D:\Info\Soft\MPLABX\v1.35\sources\pic18\plib\ADC\adcbusy.c"
  9445 ;; Parameters:    Size  Location     Type
  9446 ;;		None
  9447 ;; Auto vars:     Size  Location     Type
  9448 ;;		None
  9449 ;; Return value:  Size  Location     Type
  9450 ;;                  1    wreg      unsigned char 
  9451 ;; Registers used:
  9452 ;;		wreg
  9453 ;; Tracked objects:
  9454 ;;		On entry : 0/0
  9455 ;;		On exit  : 0/0
  9456 ;;		Unchanged: 0/0
  9457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9458 ;;      Params:         0       0       0       0       0       0       0       0       0
  9459 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9461 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9462 ;;Total ram usage:        0 bytes
  9463 ;; Hardware stack levels used:    1
  9464 ;; Hardware stack levels required when called:   11
  9465 ;; This function calls:
  9466 ;;		Nothing
  9467 ;; This function is called by:
  9468 ;;		_V_Eval
  9469 ;; This function uses a non-reentrant model
  9470 ;;
  9471                           
  9472                           	psect	text43
  9473  0037B0                     __ptext43:
  9474                           	opt stack 0
  9475  0037B0                     _BusyADC:
  9476                           	opt stack 17
  9477                           
  9478                           ; BSR set to: 0
  9479                           ;incstack = 0
  9480  0037B0  A2C2               	btfss	4034,1,c	;volatile
  9481  0037B2  D002               	goto	u6510
  9482  0037B4  0E01               	movlw	1
  9483  0037B6  0012               	return	
  9484  0037B8                     u6510:
  9485  0037B8  0E00               	movlw	0
  9486  0037BA  0012               	return	
  9487  0037BC                     __end_of_BusyADC:
  9488                           	opt stack 0
  9489                           tblptru	equ	0xFF8
  9490                           tblptrh	equ	0xFF7
  9491                           tblptrl	equ	0xFF6
  9492                           tablat	equ	0xFF5
  9493                           prodh	equ	0xFF4
  9494                           prodl	equ	0xFF3
  9495                           postinc0	equ	0xFEE
  9496                           wreg	equ	0xFE8
  9497                           indf1	equ	0xFE7
  9498                           postdec1	equ	0xFE5
  9499                           fsr1h	equ	0xFE2
  9500                           fsr1l	equ	0xFE1
  9501                           indf2	equ	0xFDF
  9502                           postinc2	equ	0xFDE
  9503                           postdec2	equ	0xFDD
  9504                           plusw2	equ	0xFDB
  9505                           fsr2h	equ	0xFDA
  9506                           fsr2l	equ	0xFD9
  9507                           status	equ	0xFD8
  9508                           
  9509 ;; *************** function _check_Lipo *****************
  9510 ;; Defined at:
  9511 ;;		line 219 in file "user.c"
  9512 ;; Parameters:    Size  Location     Type
  9513 ;;		None
  9514 ;; Auto vars:     Size  Location     Type
  9515 ;;		None
  9516 ;; Return value:  Size  Location     Type
  9517 ;;                  2    0[BANK0 ] short 
  9518 ;; Registers used:
  9519 ;;		wreg, status,2
  9520 ;; Tracked objects:
  9521 ;;		On entry : 0/0
  9522 ;;		On exit  : 0/0
  9523 ;;		Unchanged: 0/0
  9524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9525 ;;      Params:         0       2       0       0       0       0       0       0       0
  9526 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9527 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9528 ;;      Totals:         0       2       0       0       0       0       0       0       0
  9529 ;;Total ram usage:        2 bytes
  9530 ;; Hardware stack levels used:    1
  9531 ;; Hardware stack levels required when called:   11
  9532 ;; This function calls:
  9533 ;;		Nothing
  9534 ;; This function is called by:
  9535 ;;		_main
  9536 ;; This function uses a non-reentrant model
  9537 ;;
  9538                           
  9539                           	psect	text44
  9540  0037BC                     __ptext44:
  9541                           	opt stack 0
  9542  0037BC                     _check_Lipo:
  9543                           	opt stack 19
  9544                           
  9545                           ;user.c: 225: return OK;
  9546                           
  9547                           ;incstack = 0
  9548  0037BC  0E00               	movlw	0
  9549  0037BE  0100               	movlb	0	; () banked
  9550  0037C0  6FBB               	movwf	(?_check_Lipo+1)& (0+255),b
  9551  0037C2  0E00               	movlw	0
  9552  0037C4  6FBA               	movwf	?_check_Lipo& (0+255),b
  9553  0037C6  0012               	return	
  9554  0037C8                     __end_of_check_Lipo:
  9555                           	opt stack 0
  9556                           tblptru	equ	0xFF8
  9557                           tblptrh	equ	0xFF7
  9558                           tblptrl	equ	0xFF6
  9559                           tablat	equ	0xFF5
  9560                           prodh	equ	0xFF4
  9561                           prodl	equ	0xFF3
  9562                           postinc0	equ	0xFEE
  9563                           wreg	equ	0xFE8
  9564                           indf1	equ	0xFE7
  9565                           postdec1	equ	0xFE5
  9566                           fsr1h	equ	0xFE2
  9567                           fsr1l	equ	0xFE1
  9568                           indf2	equ	0xFDF
  9569                           postinc2	equ	0xFDE
  9570                           postdec2	equ	0xFDD
  9571                           plusw2	equ	0xFDB
  9572                           fsr2h	equ	0xFDA
  9573                           fsr2l	equ	0xFD9
  9574                           status	equ	0xFD8
  9575                           
  9576 ;; *************** function _InitApp *****************
  9577 ;; Defined at:
  9578 ;;		line 51 in file "user.c"
  9579 ;; Parameters:    Size  Location     Type
  9580 ;;		None
  9581 ;; Auto vars:     Size  Location     Type
  9582 ;;		None
  9583 ;; Return value:  Size  Location     Type
  9584 ;;		None               void
  9585 ;; Registers used:
  9586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9587 ;; Tracked objects:
  9588 ;;		On entry : 0/0
  9589 ;;		On exit  : 0/0
  9590 ;;		Unchanged: 0/0
  9591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9592 ;;      Params:         0       0       0       0       0       0       0       0       0
  9593 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9594 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9595 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9596 ;;Total ram usage:        0 bytes
  9597 ;; Hardware stack levels used:    1
  9598 ;; Hardware stack levels required when called:   13
  9599 ;; This function calls:
  9600 ;;		_OpenADC
  9601 ;;		_OpenTimer1
  9602 ;;		_USBDeviceAttach
  9603 ;;		_USBDeviceInit
  9604 ;;		_strncpy
  9605 ;; This function is called by:
  9606 ;;		_main
  9607 ;; This function uses a non-reentrant model
  9608 ;;
  9609                           
  9610                           	psect	text45
  9611  002C30                     __ptext45:
  9612                           	opt stack 0
  9613  002C30                     _InitApp:
  9614                           	opt stack 17
  9615                           
  9616                           ;user.c: 53: cur_State = LIPO_ALGO_STARTED;
  9617                           
  9618                           ; BSR set to: 0
  9619                           ;incstack = 0
  9620  002C30  0E0B               	movlw	11
  9621  002C32  0101               	movlb	1	; () banked
  9622  002C34  6FE2               	movwf	_cur_State& (0+255),b
  9623                           
  9624                           ; BSR set to: 1
  9625                           ;user.c: 54: strncpy(battery.battery_type,"LIPO\0",5);
  9626  002C36  0E83               	movlw	low (_battery+10)
  9627  002C38  0100               	movlb	0	; () banked
  9628  002C3A  6FBA               	movwf	strncpy@to& (0+255),b
  9629  002C3C  0E01               	movlw	high (_battery+10)
  9630  002C3E  0100               	movlb	0	; () banked
  9631  002C40  6FBB               	movwf	(strncpy@to+1)& (0+255),b
  9632  002C42  0EEE               	movlw	low STR_27
  9633  002C44  0100               	movlb	0	; () banked
  9634  002C46  6FBC               	movwf	strncpy@from& (0+255),b
  9635  002C48  0E7F               	movlw	high STR_27
  9636  002C4A  0100               	movlb	0	; () banked
  9637  002C4C  6FBD               	movwf	(strncpy@from+1)& (0+255),b
  9638  002C4E  0E00               	movlw	0
  9639  002C50  0100               	movlb	0	; () banked
  9640  002C52  6FBF               	movwf	(strncpy@size+1)& (0+255),b
  9641  002C54  0E05               	movlw	5
  9642  002C56  6FBE               	movwf	strncpy@size& (0+255),b
  9643  002C58  EC42  F018         	call	_strncpy	;wreg free
  9644                           
  9645                           ;user.c: 55: battery.charge.restore_Lowest_Voltage = 5;
  9646  002C5C  0E00               	movlw	0
  9647  002C5E  0101               	movlb	1	; () banked
  9648  002C60  6FA2               	movwf	(_battery+41)& (0+255),b
  9649  002C62  0EA0               	movlw	160
  9650  002C64  0101               	movlb	1	; () banked
  9651  002C66  6FA3               	movwf	(_battery+42)& (0+255),b
  9652  002C68  0E40               	movlw	64
  9653  002C6A  0101               	movlb	1	; () banked
  9654  002C6C  6FA4               	movwf	(_battery+43)& (0+255),b
  9655                           
  9656                           ; BSR set to: 1
  9657                           ;user.c: 56: battery.number_of_cells = 1;
  9658  002C6E  0E00               	movlw	0
  9659  002C70  0101               	movlb	1	; () banked
  9660  002C72  6F89               	movwf	(_battery+16)& (0+255),b
  9661  002C74  0E01               	movlw	1
  9662  002C76  6F88               	movwf	(_battery+15)& (0+255),b
  9663                           
  9664                           ; BSR set to: 1
  9665                           ;user.c: 57: battery.charge.restore_Charge_Current = 0.5;
  9666  002C78  0E00               	movlw	0
  9667  002C7A  0101               	movlb	1	; () banked
  9668  002C7C  6FA7               	movwf	(_battery+46)& (0+255),b
  9669  002C7E  0E00               	movlw	0
  9670  002C80  0101               	movlb	1	; () banked
  9671  002C82  6FA8               	movwf	(_battery+47)& (0+255),b
  9672  002C84  0E3F               	movlw	63
  9673  002C86  0101               	movlb	1	; () banked
  9674  002C88  6FA9               	movwf	(_battery+48)& (0+255),b
  9675                           
  9676                           ; BSR set to: 1
  9677                           ;user.c: 58: seconds = 0;
  9678  002C8A  0E00               	movlw	0
  9679  002C8C  0100               	movlb	0	; () banked
  9680  002C8E  6F84               	movwf	_seconds& (0+255),b
  9681  002C90  0E00               	movlw	0
  9682  002C92  6F85               	movwf	(_seconds+1)& (0+255),b
  9683  002C94  0E00               	movlw	0
  9684  002C96  6F86               	movwf	(_seconds+2)& (0+255),b
  9685  002C98  0E00               	movlw	0
  9686  002C9A  6F87               	movwf	(_seconds+3)& (0+255),b
  9687                           
  9688                           ; BSR set to: 0
  9689                           ;user.c: 60: OpenADC( 0b11101111 & 0b11111111 & 0b11110111,
  9690                           ;user.c: 61: 0b10000111 & 0b01111111 & 0b11111100,
  9691                           ;user.c: 62: 0b11111110 );
  9692  002C9C  0E04               	movlw	4
  9693  002C9E  0100               	movlb	0	; () banked
  9694  002CA0  6FBA               	movwf	OpenADC@config2& (0+255),b
  9695  002CA2  0EFE               	movlw	254
  9696  002CA4  0100               	movlb	0	; () banked
  9697  002CA6  6FBB               	movwf	OpenADC@portconfig& (0+255),b
  9698  002CA8  0EE7               	movlw	231
  9699  002CAA  EC8F  F017         	call	_OpenADC
  9700                           
  9701                           ;user.c: 64: OpenTimer1( 0b11111111 &
  9702                           ;user.c: 65: 0b10111111 &
  9703                           ;user.c: 66: 0b11111111 &
  9704                           ;user.c: 67: 0b11001111 &
  9705                           ;user.c: 68: 0b11111111 &
  9706                           ;user.c: 69: 0b11111111 );
  9707  002CAE  0E8F               	movlw	143
  9708  002CB0  ECED  F01A         	call	_OpenTimer1
  9709                           
  9710                           ;user.c: 73: USBDeviceInit();
  9711  002CB4  EC81  F00A         	call	_USBDeviceInit	;wreg free
  9712                           
  9713                           ;user.c: 75: USBDeviceAttach();
  9714  002CB8  ECD3  F01A         	call	_USBDeviceAttach	;wreg free
  9715                           
  9716                           ;user.c: 79: PI.Ki = 2;
  9717  002CBC  0E00               	movlw	0
  9718  002CBE  0100               	movlb	0	; () banked
  9719  002CC0  6FA6               	movwf	(_PI+3)& (0+255),b
  9720  002CC2  0E02               	movlw	2
  9721  002CC4  6FA5               	movwf	(_PI+2)& (0+255),b
  9722                           
  9723                           ; BSR set to: 0
  9724                           ;user.c: 80: PI.Kp = 35;
  9725  002CC6  0E00               	movlw	0
  9726  002CC8  0100               	movlb	0	; () banked
  9727  002CCA  6FA4               	movwf	(_PI+1)& (0+255),b
  9728  002CCC  0E23               	movlw	35
  9729  002CCE  6FA3               	movwf	_PI& (0+255),b
  9730                           
  9731                           ; BSR set to: 0
  9732  002CD0  0012               	return		;funcret
  9733  002CD2                     __end_of_InitApp:
  9734                           	opt stack 0
  9735                           tblptru	equ	0xFF8
  9736                           tblptrh	equ	0xFF7
  9737                           tblptrl	equ	0xFF6
  9738                           tablat	equ	0xFF5
  9739                           prodh	equ	0xFF4
  9740                           prodl	equ	0xFF3
  9741                           postinc0	equ	0xFEE
  9742                           wreg	equ	0xFE8
  9743                           indf1	equ	0xFE7
  9744                           postdec1	equ	0xFE5
  9745                           fsr1h	equ	0xFE2
  9746                           fsr1l	equ	0xFE1
  9747                           indf2	equ	0xFDF
  9748                           postinc2	equ	0xFDE
  9749                           postdec2	equ	0xFDD
  9750                           plusw2	equ	0xFDB
  9751                           fsr2h	equ	0xFDA
  9752                           fsr2l	equ	0xFD9
  9753                           status	equ	0xFD8
  9754                           
  9755 ;; *************** function _strncpy *****************
  9756 ;; Defined at:
  9757 ;;		line 8 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\strncpy.c"
  9758 ;; Parameters:    Size  Location     Type
  9759 ;;  to              2    0[BANK0 ] PTR unsigned char 
  9760 ;;		 -> main@end(10), battery(90), 
  9761 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  9762 ;;		 -> STR_37(9), STR_36(4), STR_35(6), STR_34(9), 
  9763 ;;		 -> STR_33(4), STR_32(6), STR_31(9), STR_30(4), 
  9764 ;;		 -> STR_29(6), STR_27(6), 
  9765 ;;  size            2    4[BANK0 ] unsigned int 
  9766 ;; Auto vars:     Size  Location     Type
  9767 ;;  cp              2    6[BANK0 ] PTR unsigned char 
  9768 ;;		 -> main@end(10), battery(90), 
  9769 ;; Return value:  Size  Location     Type
  9770 ;;                  2    0[BANK0 ] PTR unsigned char 
  9771 ;; Registers used:
  9772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9773 ;; Tracked objects:
  9774 ;;		On entry : 0/0
  9775 ;;		On exit  : 0/0
  9776 ;;		Unchanged: 0/0
  9777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9778 ;;      Params:         0       6       0       0       0       0       0       0       0
  9779 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9781 ;;      Totals:         0       8       0       0       0       0       0       0       0
  9782 ;;Total ram usage:        8 bytes
  9783 ;; Hardware stack levels used:    1
  9784 ;; Hardware stack levels required when called:   11
  9785 ;; This function calls:
  9786 ;;		Nothing
  9787 ;; This function is called by:
  9788 ;;		_InitApp
  9789 ;;		_verifie_Precondition
  9790 ;;		_verifie_Vbat
  9791 ;;		_verifie_Ibat
  9792 ;; This function uses a non-reentrant model
  9793 ;;
  9794                           
  9795                           	psect	text46
  9796  003084                     __ptext46:
  9797                           	opt stack 0
  9798  003084                     _strncpy:
  9799                           	opt stack 18
  9800                           
  9801                           ; BSR set to: 0
  9802                           ;incstack = 0
  9803  003084  C0BA  F0C0         	movff	strncpy@to,strncpy@cp
  9804  003088  C0BB  F0C1         	movff	strncpy@to+1,strncpy@cp+1
  9805  00308C  D018               	goto	l7246
  9806  00308E                     l7240:
  9807  00308E  0100               	movlb	0	; () banked
  9808  003090  07BE               	decf	strncpy@size& (0+255),f,b
  9809  003092  A0D8               	btfss	status,0,c
  9810  003094  07BF               	decf	(strncpy@size+1)& (0+255),f,b
  9811                           
  9812                           ; BSR set to: 0
  9813  003096  C0BC  FFF6         	movff	strncpy@from,tblptrl
  9814  00309A  C0BD  FFF7         	movff	strncpy@from+1,tblptrh
  9815  00309E  0100               	movlb	0	; () banked
  9816  0030A0  4BBC               	infsnz	strncpy@from& (0+255),f,b
  9817  0030A2  2BBD               	incf	(strncpy@from+1)& (0+255),f,b
  9818  0030A4                     	if	0	;tblptru may be non-zero
  9819  0030A4                     	endif
  9820  0030A4                     	if	0	;tblptru may be non-zero
  9821  0030A4                     	endif
  9822  0030A4  C0C0  FFD9         	movff	strncpy@cp,fsr2l
  9823  0030A8  C0C1  FFDA         	movff	strncpy@cp+1,fsr2h
  9824  0030AC  0100               	movlb	0	; () banked
  9825  0030AE  4BC0               	infsnz	strncpy@cp& (0+255),f,b
  9826  0030B0  2BC1               	incf	(strncpy@cp+1)& (0+255),f,b
  9827  0030B2  0008               	tblrd		*
  9828  0030B4  CFF5 FFDF          	movff	tablat,indf2
  9829  0030B8  50DF               	movf	indf2,w,c
  9830  0030BA  B4D8               	btfsc	status,2,c
  9831  0030BC  D010               	goto	l7252
  9832  0030BE                     l7246:
  9833  0030BE  0100               	movlb	0	; () banked
  9834  0030C0  51BE               	movf	strncpy@size& (0+255),w,b
  9835  0030C2  0100               	movlb	0	; () banked
  9836  0030C4  11BF               	iorwf	(strncpy@size+1)& (0+255),w,b
  9837  0030C6  B4D8               	btfsc	status,2,c
  9838  0030C8  D00A               	goto	l7252
  9839  0030CA  D7E1               	goto	l7240
  9840  0030CC                     l7248:
  9841                           
  9842                           ; BSR set to: 0
  9843  0030CC  C0C0  FFD9         	movff	strncpy@cp,fsr2l
  9844  0030D0  C0C1  FFDA         	movff	strncpy@cp+1,fsr2h
  9845  0030D4  0E00               	movlw	0
  9846  0030D6  6EDF               	movwf	indf2,c
  9847                           
  9848                           ; BSR set to: 0
  9849  0030D8  0100               	movlb	0	; () banked
  9850  0030DA  4BC0               	infsnz	strncpy@cp& (0+255),f,b
  9851  0030DC  2BC1               	incf	(strncpy@cp+1)& (0+255),f,b
  9852  0030DE                     l7252:
  9853                           
  9854                           ; BSR set to: 0
  9855  0030DE  0100               	movlb	0	; () banked
  9856  0030E0  07BE               	decf	strncpy@size& (0+255),f,b
  9857  0030E2  A0D8               	btfss	status,0,c
  9858  0030E4  07BF               	decf	(strncpy@size+1)& (0+255),f,b
  9859  0030E6  0100               	movlb	0	; () banked
  9860  0030E8  29BE               	incf	strncpy@size& (0+255),w,b
  9861  0030EA  E1F0               	bnz	l7248
  9862  0030EC  0100               	movlb	0	; () banked
  9863  0030EE  29BF               	incf	(strncpy@size+1)& (0+255),w,b
  9864  0030F0  B4D8               	btfsc	status,2,c
  9865  0030F2  0012               	return	
  9866  0030F4  D7EB               	goto	l7248
  9867  0030F6                     __end_of_strncpy:
  9868                           	opt stack 0
  9869                           tblptru	equ	0xFF8
  9870                           tblptrh	equ	0xFF7
  9871                           tblptrl	equ	0xFF6
  9872                           tablat	equ	0xFF5
  9873                           prodh	equ	0xFF4
  9874                           prodl	equ	0xFF3
  9875                           postinc0	equ	0xFEE
  9876                           wreg	equ	0xFE8
  9877                           indf1	equ	0xFE7
  9878                           postdec1	equ	0xFE5
  9879                           fsr1h	equ	0xFE2
  9880                           fsr1l	equ	0xFE1
  9881                           indf2	equ	0xFDF
  9882                           postinc2	equ	0xFDE
  9883                           postdec2	equ	0xFDD
  9884                           plusw2	equ	0xFDB
  9885                           fsr2h	equ	0xFDA
  9886                           fsr2l	equ	0xFD9
  9887                           status	equ	0xFD8
  9888                           
  9889 ;; *************** function _USBDeviceInit *****************
  9890 ;; Defined at:
  9891 ;;		line 298 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_de
      +vice.c"
  9892 ;; Parameters:    Size  Location     Type
  9893 ;;		None
  9894 ;; Auto vars:     Size  Location     Type
  9895 ;;  i               1    8[BANK0 ] unsigned char 
  9896 ;; Return value:  Size  Location     Type
  9897 ;;		None               void
  9898 ;; Registers used:
  9899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9900 ;; Tracked objects:
  9901 ;;		On entry : 0/0
  9902 ;;		On exit  : 0/0
  9903 ;;		Unchanged: 0/0
  9904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9905 ;;      Params:         0       0       0       0       0       0       0       0       0
  9906 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9907 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9908 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9909 ;;Total ram usage:        1 bytes
  9910 ;; Hardware stack levels used:    1
  9911 ;; Hardware stack levels required when called:   12
  9912 ;; This function calls:
  9913 ;;		_memset
  9914 ;; This function is called by:
  9915 ;;		_InitApp
  9916 ;; This function uses a non-reentrant model
  9917 ;;
  9918                           
  9919                           	psect	text47
  9920  001502                     __ptext47:
  9921                           	opt stack 0
  9922  001502                     _USBDeviceInit:
  9923                           	opt stack 17
  9924                           
  9925                           ;usb_device.c: 300: uint8_t i;
  9926                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
  9927                           
  9928                           ; BSR set to: 0
  9929                           ;incstack = 0
  9930  001502  9AA0               	bcf	4000,5,c	;volatile
  9931                           
  9932                           ;usb_device.c: 305: {UEIR = 0;};
  9933  001504  0E00               	movlw	0
  9934  001506  6E6A               	movwf	3946,c	;volatile
  9935                           
  9936                           ;usb_device.c: 308: {UIR = 0;};
  9937  001508  0E00               	movlw	0
  9938  00150A  6E68               	movwf	3944,c	;volatile
  9939                           
  9940                           ;usb_device.c: 311: UEP0 = 0;
  9941  00150C  0E00               	movlw	0
  9942  00150E  6E70               	movwf	3952,c	;volatile
  9943                           
  9944                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
  9945  001510  0E71               	movlw	113
  9946  001512  0100               	movlb	0	; () banked
  9947  001514  6FBA               	movwf	memset@p1& (0+255),b
  9948  001516  0E0F               	movlw	15
  9949  001518  0100               	movlb	0	; () banked
  9950  00151A  6FBB               	movwf	(memset@p1+1)& (0+255),b
  9951  00151C  0E00               	movlw	0
  9952  00151E  0100               	movlb	0	; () banked
  9953  001520  6FBD               	movwf	(memset@c+1)& (0+255),b
  9954  001522  0E00               	movlw	0
  9955  001524  6FBC               	movwf	memset@c& (0+255),b
  9956  001526  0E00               	movlw	0
  9957  001528  0100               	movlb	0	; () banked
  9958  00152A  6FBF               	movwf	(memset@n+1)& (0+255),b
  9959  00152C  0E02               	movlw	2
  9960  00152E  6FBE               	movwf	memset@n& (0+255),b
  9961  001530  ECB9  F01A         	call	_memset	;wreg free
  9962                           
  9963                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  9964  001534  0E16               	movlw	22
  9965  001536  6E6F               	movwf	3951,c	;volatile
  9966  001538  0E9F               	movlw	159
  9967  00153A  6E6B               	movwf	3947,c	;volatile
  9968  00153C  0E7B               	movlw	123
  9969  00153E  6E69               	movwf	3945,c	;volatile
  9970                           
  9971                           ;usb_device.c: 318: ;
  9972                           ;usb_device.c: 321: ;
  9973                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
  9974  001540  0E00               	movlw	0
  9975  001542  0100               	movlb	0	; () banked
  9976  001544  6FC2               	movwf	USBDeviceInit@i& (0+255),b
  9977  001546                     l7282:
  9978                           
  9979                           ; BSR set to: 0
  9980  001546  0E0B               	movlw	11
  9981  001548  0100               	movlb	0	; () banked
  9982  00154A  65C2               	cpfsgt	USBDeviceInit@i& (0+255),b
  9983  00154C  D001               	goto	l7286
  9984  00154E  D010               	goto	l518
  9985  001550                     l7286:
  9986                           
  9987                           ; BSR set to: 0
  9988                           ;usb_device.c: 325: {
  9989                           ;usb_device.c: 326: BDT[i].Val = 0x00;
  9990  001550  0100               	movlb	0	; () banked
  9991  001552  51C2               	movf	USBDeviceInit@i& (0+255),w,b
  9992  001554  0D04               	mullw	4
  9993  001556  0E00               	movlw	0
  9994  001558  24F3               	addwf	prodl,w,c
  9995  00155A  6ED9               	movwf	fsr2l,c
  9996  00155C  0E04               	movlw	4
  9997  00155E  20F4               	addwfc	prodh,w,c
  9998  001560  6EDA               	movwf	fsr2h,c
  9999  001562  6ADE               	clrf	postinc2,c
 10000  001564  6ADE               	clrf	postinc2,c
 10001  001566  6ADE               	clrf	postinc2,c
 10002  001568  6ADD               	clrf	postdec2,c
 10003                           
 10004                           ; BSR set to: 0
 10005  00156A  0100               	movlb	0	; () banked
 10006  00156C  2BC2               	incf	USBDeviceInit@i& (0+255),f,b
 10007  00156E  D7EB               	goto	l7282
 10008  001570                     l518:
 10009                           
 10010                           ; BSR set to: 0
 10011                           ;usb_device.c: 327: }
 10012                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 10013  001570  8C6D               	bsf	3949,6,c	;volatile
 10014                           
 10015                           ; BSR set to: 0
 10016                           ;usb_device.c: 333: UADDR = 0x00;
 10017  001572  0E00               	movlw	0
 10018  001574  6E6E               	movwf	3950,c	;volatile
 10019                           
 10020                           ; BSR set to: 0
 10021                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 10022  001576  986D               	bcf	3949,4,c	;volatile
 10023                           
 10024                           ; BSR set to: 0
 10025                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 10026  001578  9C6D               	bcf	3949,6,c	;volatile
 10027                           
 10028                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 10029  00157A  D00C               	goto	l7306
 10030  00157C                     l7298:
 10031                           
 10032                           ; BSR set to: 0
 10033                           ;usb_device.c: 343: {
 10034                           ;usb_device.c: 344: (UIR &= 0xF7);
 10035  00157C  9668               	bcf	3944,3,c	;volatile
 10036                           
 10037                           ; BSR set to: 0
 10038                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 10039  00157E  0E00               	movlw	0
 10040  001580  0100               	movlb	0	; () banked
 10041  001582  6F75               	movwf	(_inPipes+3)& (0+255),b	;volatile
 10042                           
 10043                           ; BSR set to: 0
 10044                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 10045  001584  0E00               	movlw	0
 10046  001586  0100               	movlb	0	; () banked
 10047  001588  6F6D               	movwf	(_outPipes+3)& (0+255),b	;volatile
 10048                           
 10049                           ; BSR set to: 0
 10050                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 10051  00158A  0E00               	movlw	0
 10052  00158C  0100               	movlb	0	; () banked
 10053  00158E  6F6F               	movwf	(_outPipes+5)& (0+255),b	;volatile
 10054  001590  0E00               	movlw	0
 10055  001592  6F6E               	movwf	(_outPipes+4)& (0+255),b	;volatile
 10056  001594                     l7306:
 10057                           
 10058                           ; BSR set to: 0
 10059  001594  B668               	btfsc	3944,3,c	;volatile
 10060  001596  D7F2               	goto	l7298
 10061                           
 10062                           ; BSR set to: 0
 10063                           ;usb_device.c: 349: }
 10064                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 10065                           
 10066                           ; BSR set to: 0
 10067  001598  0E01               	movlw	1
 10068  00159A  6E12               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 10069                           
 10070                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 10071  00159C  0E01               	movlw	1
 10072  00159E  6E13               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 10073                           
 10074                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 10075  0015A0  0E00               	movlw	0
 10076  0015A2  6E0F               	movwf	_USBDeferINDataStagePackets,c	;volatile
 10077                           
 10078                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 10079  0015A4  0E00               	movlw	0
 10080  0015A6  6E10               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 10081                           
 10082                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 10083  0015A8  0E00               	movlw	0
 10084  0015AA  0100               	movlb	0	; () banked
 10085  0015AC  6F9E               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 10086                           
 10087                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 10088  0015AE  0E00               	movlw	0
 10089  0015B0  0100               	movlb	0	; () banked
 10090  0015B2  6FC2               	movwf	USBDeviceInit@i& (0+255),b
 10091  0015B4                     l7310:
 10092                           
 10093                           ; BSR set to: 0
 10094  0015B4  0E02               	movlw	2
 10095  0015B6  0100               	movlb	0	; () banked
 10096  0015B8  65C2               	cpfsgt	USBDeviceInit@i& (0+255),b
 10097  0015BA  D001               	goto	l7314
 10098  0015BC  D033               	goto	l7320
 10099  0015BE                     l7314:
 10100                           
 10101                           ; BSR set to: 0
 10102                           ;usb_device.c: 363: {
 10103                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 10104  0015BE  0100               	movlb	0	; () banked
 10105  0015C0  51C2               	movf	USBDeviceInit@i& (0+255),w,b
 10106  0015C2  0D02               	mullw	2
 10107  0015C4  0E78               	movlw	low _pBDTEntryIn
 10108  0015C6  24F3               	addwf	prodl,w,c
 10109  0015C8  6ED9               	movwf	fsr2l,c
 10110  0015CA  0E00               	movlw	high _pBDTEntryIn
 10111  0015CC  20F4               	addwfc	prodh,w,c
 10112  0015CE  6EDA               	movwf	fsr2h,c
 10113  0015D0  0E00               	movlw	0
 10114  0015D2  6EDE               	movwf	postinc2,c
 10115  0015D4  0E00               	movlw	0
 10116  0015D6  6EDD               	movwf	postdec2,c
 10117                           
 10118                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 10119  0015D8  0100               	movlb	0	; () banked
 10120  0015DA  51C2               	movf	USBDeviceInit@i& (0+255),w,b
 10121  0015DC  0D02               	mullw	2
 10122  0015DE  0E7E               	movlw	low _pBDTEntryOut
 10123  0015E0  24F3               	addwf	prodl,w,c
 10124  0015E2  6ED9               	movwf	fsr2l,c
 10125  0015E4  0E00               	movlw	high _pBDTEntryOut
 10126  0015E6  20F4               	addwfc	prodh,w,c
 10127  0015E8  6EDA               	movwf	fsr2h,c
 10128  0015EA  0E00               	movlw	0
 10129  0015EC  6EDE               	movwf	postinc2,c
 10130  0015EE  0E00               	movlw	0
 10131  0015F0  6EDD               	movwf	postdec2,c
 10132                           
 10133                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 10134  0015F2  0100               	movlb	0	; () banked
 10135  0015F4  51C2               	movf	USBDeviceInit@i& (0+255),w,b
 10136  0015F6  0D01               	mullw	1
 10137  0015F8  0E8B               	movlw	low _ep_data_in
 10138  0015FA  24F3               	addwf	prodl,w,c
 10139  0015FC  6ED9               	movwf	fsr2l,c
 10140  0015FE  0E00               	movlw	high _ep_data_in
 10141  001600  20F4               	addwfc	prodh,w,c
 10142  001602  6EDA               	movwf	fsr2h,c
 10143  001604  0E00               	movlw	0
 10144  001606  6EDF               	movwf	indf2,c
 10145                           
 10146                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 10147  001608  0100               	movlb	0	; () banked
 10148  00160A  51C2               	movf	USBDeviceInit@i& (0+255),w,b
 10149  00160C  0D01               	mullw	1
 10150  00160E  0E8E               	movlw	low _ep_data_out
 10151  001610  24F3               	addwf	prodl,w,c
 10152  001612  6ED9               	movwf	fsr2l,c
 10153  001614  0E00               	movlw	high _ep_data_out
 10154  001616  20F4               	addwfc	prodh,w,c
 10155  001618  6EDA               	movwf	fsr2h,c
 10156  00161A  0E00               	movlw	0
 10157  00161C  6EDF               	movwf	indf2,c
 10158                           
 10159                           ; BSR set to: 0
 10160  00161E  0100               	movlb	0	; () banked
 10161  001620  2BC2               	incf	USBDeviceInit@i& (0+255),f,b
 10162  001622  D7C8               	goto	l7310
 10163  001624                     l7320:
 10164                           
 10165                           ; BSR set to: 0
 10166                           ;usb_device.c: 368: }
 10167                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 10168  001624  0E08               	movlw	8
 10169  001626  0100               	movlb	0	; () banked
 10170  001628  6F78               	movwf	_pBDTEntryIn& (0+255),b
 10171  00162A  0E04               	movlw	4
 10172  00162C  0100               	movlb	0	; () banked
 10173  00162E  6F79               	movwf	(_pBDTEntryIn+1)& (0+255),b
 10174                           
 10175                           ; BSR set to: 0
 10176                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 10177  001630  0E16               	movlw	22
 10178  001632  6E70               	movwf	3952,c	;volatile
 10179                           
 10180                           ; BSR set to: 0
 10181                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 10182  001634  0E04               	movlw	4
 10183  001636  0104               	movlb	4	; () banked
 10184  001638  6F03               	movwf	3,b	;volatile
 10185  00163A  0E30               	movlw	48
 10186  00163C  6F02               	movwf	2,b	;volatile
 10187                           
 10188                           ; BSR set to: 4
 10189                           ;usb_device.c: 376: BDT[0].CNT = 8;
 10190  00163E  0E08               	movlw	8
 10191  001640  0104               	movlb	4	; () banked
 10192  001642  6F01               	movwf	1,b	;volatile
 10193                           
 10194                           ; BSR set to: 4
 10195                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 10196  001644  0E04               	movlw	4
 10197  001646  0104               	movlb	4	; () banked
 10198  001648  6F00               	movwf	0,b	;volatile
 10199                           
 10200                           ; BSR set to: 4
 10201                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 10202  00164A  0104               	movlb	4	; () banked
 10203  00164C  8F00               	bsf	0,7,b	;volatile
 10204                           
 10205                           ; BSR set to: 4
 10206                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 10207  00164E  0E00               	movlw	0
 10208  001650  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 10209                           
 10210                           ; BSR set to: 4
 10211                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 10212  001652  0E00               	movlw	0
 10213  001654  0100               	movlb	0	; () banked
 10214  001656  6F9F               	movwf	_USBDeviceState& (0+255),b	;volatile
 10215                           
 10216                           ; BSR set to: 0
 10217  001658  0012               	return		;funcret
 10218  00165A                     __end_of_USBDeviceInit:
 10219                           	opt stack 0
 10220                           tblptru	equ	0xFF8
 10221                           tblptrh	equ	0xFF7
 10222                           tblptrl	equ	0xFF6
 10223                           tablat	equ	0xFF5
 10224                           prodh	equ	0xFF4
 10225                           prodl	equ	0xFF3
 10226                           postinc0	equ	0xFEE
 10227                           wreg	equ	0xFE8
 10228                           indf1	equ	0xFE7
 10229                           postdec1	equ	0xFE5
 10230                           fsr1h	equ	0xFE2
 10231                           fsr1l	equ	0xFE1
 10232                           indf2	equ	0xFDF
 10233                           postinc2	equ	0xFDE
 10234                           postdec2	equ	0xFDD
 10235                           plusw2	equ	0xFDB
 10236                           fsr2h	equ	0xFDA
 10237                           fsr2l	equ	0xFD9
 10238                           status	equ	0xFD8
 10239                           
 10240 ;; *************** function _memset *****************
 10241 ;; Defined at:
 10242 ;;		line 8 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\memset.c"
 10243 ;; Parameters:    Size  Location     Type
 10244 ;;  p1              2    0[BANK0 ] PTR void 
 10245 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 10246 ;;  c               2    2[BANK0 ] int 
 10247 ;;  n               2    4[BANK0 ] unsigned int 
 10248 ;; Auto vars:     Size  Location     Type
 10249 ;;  p               2    6[BANK0 ] PTR unsigned char 
 10250 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 10251 ;; Return value:  Size  Location     Type
 10252 ;;                  2    0[BANK0 ] PTR void 
 10253 ;; Registers used:
 10254 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10255 ;; Tracked objects:
 10256 ;;		On entry : 0/0
 10257 ;;		On exit  : 0/0
 10258 ;;		Unchanged: 0/0
 10259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10260 ;;      Params:         0       6       0       0       0       0       0       0       0
 10261 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10262 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10263 ;;      Totals:         0       8       0       0       0       0       0       0       0
 10264 ;;Total ram usage:        8 bytes
 10265 ;; Hardware stack levels used:    1
 10266 ;; Hardware stack levels required when called:   11
 10267 ;; This function calls:
 10268 ;;		Nothing
 10269 ;; This function is called by:
 10270 ;;		_USBDeviceInit
 10271 ;; This function uses a non-reentrant model
 10272 ;;
 10273                           
 10274                           	psect	text48
 10275  003572                     __ptext48:
 10276                           	opt stack 0
 10277  003572                     _memset:
 10278                           	opt stack 17
 10279                           
 10280                           ; BSR set to: 0
 10281                           ;incstack = 0
 10282  003572  C0BA  F0C0         	movff	memset@p1,memset@p
 10283  003576  C0BB  F0C1         	movff	memset@p1+1,memset@p+1
 10284  00357A  D009               	goto	l7168
 10285  00357C                     l7164:
 10286  00357C  C0C0  FFD9         	movff	memset@p,fsr2l
 10287  003580  C0C1  FFDA         	movff	memset@p+1,fsr2h
 10288  003584  C0BC  FFDF         	movff	memset@c,indf2
 10289  003588  0100               	movlb	0	; () banked
 10290  00358A  4BC0               	infsnz	memset@p& (0+255),f,b
 10291  00358C  2BC1               	incf	(memset@p+1)& (0+255),f,b
 10292  00358E                     l7168:
 10293  00358E  0100               	movlb	0	; () banked
 10294  003590  07BE               	decf	memset@n& (0+255),f,b
 10295  003592  A0D8               	btfss	status,0,c
 10296  003594  07BF               	decf	(memset@n+1)& (0+255),f,b
 10297  003596  0100               	movlb	0	; () banked
 10298  003598  29BE               	incf	memset@n& (0+255),w,b
 10299  00359A  E1F0               	bnz	l7164
 10300  00359C  0100               	movlb	0	; () banked
 10301  00359E  29BF               	incf	(memset@n+1)& (0+255),w,b
 10302  0035A0  B4D8               	btfsc	status,2,c
 10303  0035A2  0012               	return	
 10304  0035A4  D7EB               	goto	l7164
 10305  0035A6                     __end_of_memset:
 10306                           	opt stack 0
 10307                           tblptru	equ	0xFF8
 10308                           tblptrh	equ	0xFF7
 10309                           tblptrl	equ	0xFF6
 10310                           tablat	equ	0xFF5
 10311                           prodh	equ	0xFF4
 10312                           prodl	equ	0xFF3
 10313                           postinc0	equ	0xFEE
 10314                           wreg	equ	0xFE8
 10315                           indf1	equ	0xFE7
 10316                           postdec1	equ	0xFE5
 10317                           fsr1h	equ	0xFE2
 10318                           fsr1l	equ	0xFE1
 10319                           indf2	equ	0xFDF
 10320                           postinc2	equ	0xFDE
 10321                           postdec2	equ	0xFDD
 10322                           plusw2	equ	0xFDB
 10323                           fsr2h	equ	0xFDA
 10324                           fsr2l	equ	0xFD9
 10325                           status	equ	0xFD8
 10326                           
 10327 ;; *************** function _USBDeviceAttach *****************
 10328 ;; Defined at:
 10329 ;;		line 1352 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_d
      +evice.c"
 10330 ;; Parameters:    Size  Location     Type
 10331 ;;		None
 10332 ;; Auto vars:     Size  Location     Type
 10333 ;;		None
 10334 ;; Return value:  Size  Location     Type
 10335 ;;		None               void
 10336 ;; Registers used:
 10337 ;;		wreg, status,2
 10338 ;; Tracked objects:
 10339 ;;		On entry : 0/0
 10340 ;;		On exit  : 0/0
 10341 ;;		Unchanged: 0/0
 10342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10343 ;;      Params:         0       0       0       0       0       0       0       0       0
 10344 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10345 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10346 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10347 ;;Total ram usage:        0 bytes
 10348 ;; Hardware stack levels used:    1
 10349 ;; Hardware stack levels required when called:   11
 10350 ;; This function calls:
 10351 ;;		Nothing
 10352 ;; This function is called by:
 10353 ;;		_InitApp
 10354 ;; This function uses a non-reentrant model
 10355 ;;
 10356                           
 10357                           	psect	text49
 10358  0035A6                     __ptext49:
 10359                           	opt stack 0
 10360  0035A6                     _USBDeviceAttach:
 10361                           	opt stack 18
 10362                           
 10363                           ;usb_device.c: 1356: {
 10364                           ;usb_device.c: 1357: if(1 == 1)
 10365                           
 10366                           ; BSR set to: 0
 10367                           ;incstack = 0
 10368  0035A6  0100               	movlb	0	; () banked
 10369  0035A8  519F               	movf	_USBDeviceState& (0+255),w,b	;volatile
 10370  0035AA  A4D8               	btfss	status,2,c
 10371  0035AC  0012               	return	
 10372                           
 10373                           ; BSR set to: 0
 10374                           ;usb_device.c: 1358: {
 10375                           ;usb_device.c: 1360: UCON = 0;
 10376  0035AE  0E00               	movlw	0
 10377  0035B0  6E6D               	movwf	3949,c	;volatile
 10378                           
 10379                           ;usb_device.c: 1363: UIE = 0;
 10380  0035B2  0E00               	movlw	0
 10381  0035B4  6E69               	movwf	3945,c	;volatile
 10382                           
 10383                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 10384  0035B6  0E16               	movlw	22
 10385  0035B8  6E6F               	movwf	3951,c	;volatile
 10386  0035BA  0E9F               	movlw	159
 10387  0035BC  6E6B               	movwf	3947,c	;volatile
 10388  0035BE  0E7B               	movlw	123
 10389  0035C0  6E69               	movwf	3945,c	;volatile
 10390                           
 10391                           ; BSR set to: 0
 10392                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 10393  0035C2  8ED0               	bsf	4048,7,c	;volatile
 10394                           
 10395                           ; BSR set to: 0
 10396  0035C4  8AA2               	bsf	4002,5,c	;volatile
 10397                           
 10398                           ; BSR set to: 0
 10399  0035C6  8AA0               	bsf	4000,5,c	;volatile
 10400                           
 10401                           ; BSR set to: 0
 10402  0035C8  8EF2               	bsf	intcon,7,c	;volatile
 10403                           
 10404                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 10405  0035CA  D001               	goto	l579
 10406  0035CC                     l580:
 10407  0035CC  866D               	bsf	3949,3,c	;volatile
 10408  0035CE                     l579:
 10409  0035CE  A66D               	btfss	3949,3,c	;volatile
 10410  0035D0  D7FD               	goto	l580
 10411                           
 10412                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
 10413  0035D2  0E01               	movlw	1
 10414  0035D4  0100               	movlb	0	; () banked
 10415  0035D6  6F9F               	movwf	_USBDeviceState& (0+255),b	;volatile
 10416                           
 10417                           ; BSR set to: 0
 10418  0035D8  0012               	return	
 10419  0035DA                     __end_of_USBDeviceAttach:
 10420                           	opt stack 0
 10421                           tblptru	equ	0xFF8
 10422                           tblptrh	equ	0xFF7
 10423                           tblptrl	equ	0xFF6
 10424                           tablat	equ	0xFF5
 10425                           prodh	equ	0xFF4
 10426                           prodl	equ	0xFF3
 10427                           intcon	equ	0xFF2
 10428                           postinc0	equ	0xFEE
 10429                           wreg	equ	0xFE8
 10430                           indf1	equ	0xFE7
 10431                           postdec1	equ	0xFE5
 10432                           fsr1h	equ	0xFE2
 10433                           fsr1l	equ	0xFE1
 10434                           indf2	equ	0xFDF
 10435                           postinc2	equ	0xFDE
 10436                           postdec2	equ	0xFDD
 10437                           plusw2	equ	0xFDB
 10438                           fsr2h	equ	0xFDA
 10439                           fsr2l	equ	0xFD9
 10440                           status	equ	0xFD8
 10441                           
 10442 ;; *************** function _OpenTimer1 *****************
 10443 ;; Defined at:
 10444 ;;		line 16 in file "D:\Info\Soft\MPLABX\v1.35\sources\pic18\plib\Timers\t1open.c"
 10445 ;; Parameters:    Size  Location     Type
 10446 ;;  config          1    wreg     unsigned char 
 10447 ;; Auto vars:     Size  Location     Type
 10448 ;;  config          1    0[BANK0 ] unsigned char 
 10449 ;; Return value:  Size  Location     Type
 10450 ;;		None               void
 10451 ;; Registers used:
 10452 ;;		wreg, status,2, status,0
 10453 ;; Tracked objects:
 10454 ;;		On entry : 0/0
 10455 ;;		On exit  : 0/0
 10456 ;;		Unchanged: 0/0
 10457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10458 ;;      Params:         0       0       0       0       0       0       0       0       0
 10459 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10460 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10461 ;;      Totals:         0       1       0       0       0       0       0       0       0
 10462 ;;Total ram usage:        1 bytes
 10463 ;; Hardware stack levels used:    1
 10464 ;; Hardware stack levels required when called:   11
 10465 ;; This function calls:
 10466 ;;		Nothing
 10467 ;; This function is called by:
 10468 ;;		_InitApp
 10469 ;; This function uses a non-reentrant model
 10470 ;;
 10471                           
 10472                           	psect	text50
 10473  0035DA                     __ptext50:
 10474                           	opt stack 0
 10475  0035DA                     _OpenTimer1:
 10476                           	opt stack 18
 10477                           
 10478                           ; BSR set to: 0
 10479                           ;incstack = 0
 10480                           ;OpenTimer1@config stored from wreg
 10481  0035DA  0100               	movlb	0	; () banked
 10482  0035DC  6FBA               	movwf	OpenTimer1@config& (0+255),b
 10483  0035DE  0100               	movlb	0	; () banked
 10484  0035E0  51BA               	movf	OpenTimer1@config& (0+255),w,b
 10485  0035E2  0B7E               	andlw	126
 10486  0035E4  6ECD               	movwf	4045,c	;volatile
 10487                           
 10488                           ; BSR set to: 0
 10489  0035E6  0100               	movlb	0	; () banked
 10490  0035E8  ADBA               	btfss	OpenTimer1@config& (0+255),6,b
 10491  0035EA  D002               	goto	l1014
 10492                           
 10493                           ; BSR set to: 0
 10494  0035EC  8ECD               	bsf	4045,7,c	;volatile
 10495  0035EE  D001               	goto	l7260
 10496  0035F0                     l1014:
 10497                           
 10498                           ; BSR set to: 0
 10499  0035F0  9ECD               	bcf	4045,7,c	;volatile
 10500  0035F2                     l7260:
 10501                           
 10502                           ; BSR set to: 0
 10503  0035F2  0E00               	movlw	0
 10504  0035F4  6ECF               	movwf	4047,c	;volatile
 10505  0035F6  0E00               	movlw	0
 10506  0035F8  6ECE               	movwf	4046,c	;volatile
 10507                           
 10508                           ; BSR set to: 0
 10509  0035FA  909E               	bcf	3998,0,c	;volatile
 10510                           
 10511                           ; BSR set to: 0
 10512  0035FC  0100               	movlb	0	; () banked
 10513  0035FE  AFBA               	btfss	OpenTimer1@config& (0+255),7,b
 10514  003600  D002               	goto	l1016
 10515                           
 10516                           ; BSR set to: 0
 10517  003602  809D               	bsf	3997,0,c	;volatile
 10518  003604  D001               	goto	l1017
 10519  003606                     l1016:
 10520                           
 10521                           ; BSR set to: 0
 10522  003606  909D               	bcf	3997,0,c	;volatile
 10523  003608                     l1017:
 10524                           
 10525                           ; BSR set to: 0
 10526  003608  80CD               	bsf	4045,0,c	;volatile
 10527                           
 10528                           ; BSR set to: 0
 10529  00360A  0012               	return		;funcret
 10530  00360C                     __end_of_OpenTimer1:
 10531                           	opt stack 0
 10532                           tblptru	equ	0xFF8
 10533                           tblptrh	equ	0xFF7
 10534                           tblptrl	equ	0xFF6
 10535                           tablat	equ	0xFF5
 10536                           prodh	equ	0xFF4
 10537                           prodl	equ	0xFF3
 10538                           intcon	equ	0xFF2
 10539                           postinc0	equ	0xFEE
 10540                           wreg	equ	0xFE8
 10541                           indf1	equ	0xFE7
 10542                           postdec1	equ	0xFE5
 10543                           fsr1h	equ	0xFE2
 10544                           fsr1l	equ	0xFE1
 10545                           indf2	equ	0xFDF
 10546                           postinc2	equ	0xFDE
 10547                           postdec2	equ	0xFDD
 10548                           plusw2	equ	0xFDB
 10549                           fsr2h	equ	0xFDA
 10550                           fsr2l	equ	0xFD9
 10551                           status	equ	0xFD8
 10552                           
 10553 ;; *************** function _OpenADC *****************
 10554 ;; Defined at:
 10555 ;;		line 68 in file "D:\Info\Soft\MPLABX\v1.35\sources\pic18\plib\ADC\adcopen.c"
 10556 ;; Parameters:    Size  Location     Type
 10557 ;;  config          1    wreg     unsigned char 
 10558 ;;  config2         1    0[BANK0 ] unsigned char 
 10559 ;;  portconfig      1    1[BANK0 ] unsigned char 
 10560 ;; Auto vars:     Size  Location     Type
 10561 ;;  config          1    4[BANK0 ] unsigned char 
 10562 ;; Return value:  Size  Location     Type
 10563 ;;		None               void
 10564 ;; Registers used:
 10565 ;;		wreg, status,2, status,0
 10566 ;; Tracked objects:
 10567 ;;		On entry : 0/0
 10568 ;;		On exit  : 0/0
 10569 ;;		Unchanged: 0/0
 10570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10571 ;;      Params:         0       2       0       0       0       0       0       0       0
 10572 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10573 ;;      Temps:          0       2       0       0       0       0       0       0       0
 10574 ;;      Totals:         0       5       0       0       0       0       0       0       0
 10575 ;;Total ram usage:        5 bytes
 10576 ;; Hardware stack levels used:    1
 10577 ;; Hardware stack levels required when called:   11
 10578 ;; This function calls:
 10579 ;;		Nothing
 10580 ;; This function is called by:
 10581 ;;		_InitApp
 10582 ;;		_initADC
 10583 ;; This function uses a non-reentrant model
 10584 ;;
 10585                           
 10586                           	psect	text51
 10587  002F1E                     __ptext51:
 10588                           	opt stack 0
 10589  002F1E                     _OpenADC:
 10590                           	opt stack 18
 10591                           
 10592                           ; BSR set to: 0
 10593                           ;incstack = 0
 10594                           ;OpenADC@config stored from wreg
 10595  002F1E  0100               	movlb	0	; () banked
 10596  002F20  6FBE               	movwf	OpenADC@config& (0+255),b
 10597  002F22  0E00               	movlw	0
 10598  002F24  6EC2               	movwf	4034,c	;volatile
 10599  002F26  0E00               	movlw	0
 10600  002F28  6EC0               	movwf	4032,c	;volatile
 10601  002F2A  0100               	movlb	0	; () banked
 10602  002F2C  90D8               	bcf	status,0,c
 10603  002F2E  31BA               	rrcf	OpenADC@config2& (0+255),w,b
 10604  002F30  0B3C               	andlw	60
 10605  002F32  6EC2               	movwf	4034,c	;volatile
 10606                           
 10607                           ; BSR set to: 0
 10608  002F34  C0BA  F0BC         	movff	OpenADC@config2,??_OpenADC
 10609  002F38  0100               	movlb	0	; () banked
 10610  002F3A  3BBC               	swapf	??_OpenADC& (0+255),f,b
 10611  002F3C  0EF0               	movlw	240
 10612  002F3E  17BC               	andwf	??_OpenADC& (0+255),f,b
 10613  002F40  0E30               	movlw	48
 10614  002F42  0100               	movlb	0	; () banked
 10615  002F44  17BC               	andwf	??_OpenADC& (0+255),f,b
 10616  002F46  0100               	movlb	0	; () banked
 10617  002F48  51BB               	movf	OpenADC@portconfig& (0+255),w,b
 10618  002F4A  0B0F               	andlw	15
 10619  002F4C  0100               	movlb	0	; () banked
 10620  002F4E  11BC               	iorwf	??_OpenADC& (0+255),w,b
 10621  002F50  6EC1               	movwf	4033,c	;volatile
 10622                           
 10623                           ; BSR set to: 0
 10624  002F52  C0BE  F0BC         	movff	OpenADC@config,??_OpenADC
 10625  002F56  0100               	movlb	0	; () banked
 10626  002F58  90D8               	bcf	status,0,c
 10627  002F5A  37BC               	rlcf	??_OpenADC& (0+255),f,b
 10628  002F5C  0100               	movlb	0	; () banked
 10629  002F5E  90D8               	bcf	status,0,c
 10630  002F60  37BC               	rlcf	??_OpenADC& (0+255),f,b
 10631  002F62  0E38               	movlw	56
 10632  002F64  0100               	movlb	0	; () banked
 10633  002F66  17BC               	andwf	??_OpenADC& (0+255),f,b
 10634  002F68  C0BE  F0BD         	movff	OpenADC@config,??_OpenADC+1
 10635  002F6C  0100               	movlb	0	; () banked
 10636  002F6E  3BBD               	swapf	(??_OpenADC+1)& (0+255),f,b
 10637  002F70  0E0F               	movlw	15
 10638  002F72  17BD               	andwf	(??_OpenADC+1)& (0+255),f,b
 10639  002F74  0E07               	movlw	7
 10640  002F76  0100               	movlb	0	; () banked
 10641  002F78  17BD               	andwf	(??_OpenADC+1)& (0+255),f,b
 10642  002F7A  0100               	movlb	0	; () banked
 10643  002F7C  51BE               	movf	OpenADC@config& (0+255),w,b
 10644  002F7E  0B80               	andlw	128
 10645  002F80  0100               	movlb	0	; () banked
 10646  002F82  11BD               	iorwf	(??_OpenADC+1)& (0+255),w,b
 10647  002F84  0100               	movlb	0	; () banked
 10648  002F86  11BC               	iorwf	??_OpenADC& (0+255),w,b
 10649  002F88  6EC0               	movwf	4032,c	;volatile
 10650                           
 10651                           ; BSR set to: 0
 10652  002F8A  0100               	movlb	0	; () banked
 10653  002F8C  AFBA               	btfss	OpenADC@config2& (0+255),7,b
 10654  002F8E  D003               	goto	l984
 10655                           
 10656                           ; BSR set to: 0
 10657  002F90  9C9E               	bcf	3998,6,c	;volatile
 10658  002F92  8C9D               	bsf	3997,6,c	;volatile
 10659  002F94  8CF2               	bsf	intcon,6,c	;volatile
 10660  002F96                     l984:
 10661                           
 10662                           ; BSR set to: 0
 10663  002F96  80C2               	bsf	4034,0,c	;volatile
 10664                           
 10665                           ; BSR set to: 0
 10666  002F98  0012               	return		;funcret
 10667  002F9A                     __end_of_OpenADC:
 10668                           	opt stack 0
 10669                           tblptru	equ	0xFF8
 10670                           tblptrh	equ	0xFF7
 10671                           tblptrl	equ	0xFF6
 10672                           tablat	equ	0xFF5
 10673                           prodh	equ	0xFF4
 10674                           prodl	equ	0xFF3
 10675                           intcon	equ	0xFF2
 10676                           postinc0	equ	0xFEE
 10677                           wreg	equ	0xFE8
 10678                           indf1	equ	0xFE7
 10679                           postdec1	equ	0xFE5
 10680                           fsr1h	equ	0xFE2
 10681                           fsr1l	equ	0xFE1
 10682                           indf2	equ	0xFDF
 10683                           postinc2	equ	0xFDE
 10684                           postdec2	equ	0xFDD
 10685                           plusw2	equ	0xFDB
 10686                           fsr2h	equ	0xFDA
 10687                           fsr2l	equ	0xFD9
 10688                           status	equ	0xFD8
 10689                           
 10690 ;; *************** function _high_isr *****************
 10691 ;; Defined at:
 10692 ;;		line 18 in file "interrupts.c"
 10693 ;; Parameters:    Size  Location     Type
 10694 ;;		None
 10695 ;; Auto vars:     Size  Location     Type
 10696 ;;		None
 10697 ;; Return value:  Size  Location     Type
 10698 ;;		None               void
 10699 ;; Registers used:
 10700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10701 ;; Tracked objects:
 10702 ;;		On entry : 0/0
 10703 ;;		On exit  : 0/0
 10704 ;;		Unchanged: 0/0
 10705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10706 ;;      Params:         0       0       0       0       0       0       0       0       0
 10707 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10708 ;;      Temps:         14       0       0       0       0       0       0       0       0
 10709 ;;      Totals:        14       0       0       0       0       0       0       0       0
 10710 ;;Total ram usage:       14 bytes
 10711 ;; Hardware stack levels used:    1
 10712 ;; Hardware stack levels required when called:   10
 10713 ;; This function calls:
 10714 ;;		_USBDeviceTasks
 10715 ;; This function is called by:
 10716 ;;		Interrupt level 2
 10717 ;; This function uses a non-reentrant model
 10718 ;;
 10719                           
 10720                           	psect	intcode
 10721  000008                     __pintcode:
 10722                           	opt stack 0
 10723  000008                     _high_isr:
 10724                           	opt stack 15
 10725                           
 10726                           ; BSR set to: 0
 10727                           ;incstack = 0
 10728  000008  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10729  00000A  CFFA F04B          	movff	pclath,??_high_isr
 10730  00000E  CFFB F04C          	movff	pclatu,??_high_isr+1
 10731  000012  ED7B  F018         	call	int_func,f	;refresh shadow registers
 10732                           pclatu	equ	0xFFB
 10733                           pclath	equ	0xFFA
 10734                           tblptru	equ	0xFF8
 10735                           tblptrh	equ	0xFF7
 10736                           tblptrl	equ	0xFF6
 10737                           tablat	equ	0xFF5
 10738                           prodh	equ	0xFF4
 10739                           prodl	equ	0xFF3
 10740                           intcon	equ	0xFF2
 10741                           postinc0	equ	0xFEE
 10742                           wreg	equ	0xFE8
 10743                           indf1	equ	0xFE7
 10744                           postdec1	equ	0xFE5
 10745                           fsr1h	equ	0xFE2
 10746                           fsr1l	equ	0xFE1
 10747                           indf2	equ	0xFDF
 10748                           postinc2	equ	0xFDE
 10749                           postdec2	equ	0xFDD
 10750                           plusw2	equ	0xFDB
 10751                           fsr2h	equ	0xFDA
 10752                           fsr2l	equ	0xFD9
 10753                           status	equ	0xFD8
 10754                           
 10755                           	psect	intcode_body
 10756  0030F6                     __pintcode_body:
 10757                           	opt stack 15
 10758  0030F6                     int_func:
 10759                           	opt stack 15
 10760  0030F6  0006               	pop		; remove dummy address from shadow register refresh
 10761  0030F8  CFE9 F04D          	movff	fsr0l,??_high_isr+2
 10762  0030FC  CFEA F04E          	movff	fsr0h,??_high_isr+3
 10763  003100  CFE1 F04F          	movff	fsr1l,??_high_isr+4
 10764  003104  CFE2 F050          	movff	fsr1h,??_high_isr+5
 10765  003108  CFD9 F051          	movff	fsr2l,??_high_isr+6
 10766  00310C  CFDA F052          	movff	fsr2h,??_high_isr+7
 10767  003110  CFF3 F053          	movff	prodl,??_high_isr+8
 10768  003114  CFF4 F054          	movff	prodh,??_high_isr+9
 10769  003118  CFF6 F055          	movff	tblptrl,??_high_isr+10
 10770  00311C  CFF7 F056          	movff	tblptrh,??_high_isr+11
 10771  003120  CFF8 F057          	movff	tblptru,??_high_isr+12
 10772  003124  CFF5 F058          	movff	tablat,??_high_isr+13
 10773                           
 10774                           ;interrupts.c: 35: USBDeviceTasks();
 10775  003128  EC0E  F00D         	call	_USBDeviceTasks	;wreg free
 10776  00312C  C058  FFF5         	movff	??_high_isr+13,tablat
 10777  003130  C057  FFF8         	movff	??_high_isr+12,tblptru
 10778  003134  C056  FFF7         	movff	??_high_isr+11,tblptrh
 10779  003138  C055  FFF6         	movff	??_high_isr+10,tblptrl
 10780  00313C  C054  FFF4         	movff	??_high_isr+9,prodh
 10781  003140  C053  FFF3         	movff	??_high_isr+8,prodl
 10782  003144  C052  FFDA         	movff	??_high_isr+7,fsr2h
 10783  003148  C051  FFD9         	movff	??_high_isr+6,fsr2l
 10784  00314C  C050  FFE2         	movff	??_high_isr+5,fsr1h
 10785  003150  C04F  FFE1         	movff	??_high_isr+4,fsr1l
 10786  003154  C04E  FFEA         	movff	??_high_isr+3,fsr0h
 10787  003158  C04D  FFE9         	movff	??_high_isr+2,fsr0l
 10788  00315C  C04C  FFFB         	movff	??_high_isr+1,pclatu
 10789  003160  C04B  FFFA         	movff	??_high_isr,pclath
 10790  003164  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10791  003166  0011               	retfie		f
 10792  003168                     __end_of_high_isr:
 10793                           	opt stack 0
 10794                           pclatu	equ	0xFFB
 10795                           pclath	equ	0xFFA
 10796                           tblptru	equ	0xFF8
 10797                           tblptrh	equ	0xFF7
 10798                           tblptrl	equ	0xFF6
 10799                           tablat	equ	0xFF5
 10800                           prodh	equ	0xFF4
 10801                           prodl	equ	0xFF3
 10802                           intcon	equ	0xFF2
 10803                           postinc0	equ	0xFEE
 10804                           fsr0h	equ	0xFEA
 10805                           fsr0l	equ	0xFE9
 10806                           wreg	equ	0xFE8
 10807                           indf1	equ	0xFE7
 10808                           postdec1	equ	0xFE5
 10809                           fsr1h	equ	0xFE2
 10810                           fsr1l	equ	0xFE1
 10811                           indf2	equ	0xFDF
 10812                           postinc2	equ	0xFDE
 10813                           postdec2	equ	0xFDD
 10814                           plusw2	equ	0xFDB
 10815                           fsr2h	equ	0xFDA
 10816                           fsr2l	equ	0xFD9
 10817                           status	equ	0xFD8
 10818                           
 10819 ;; *************** function _USBDeviceTasks *****************
 10820 ;; Defined at:
 10821 ;;		line 489 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_de
      +vice.c"
 10822 ;; Parameters:    Size  Location     Type
 10823 ;;		None
 10824 ;; Auto vars:     Size  Location     Type
 10825 ;;  i               1   29[COMRAM] unsigned char 
 10826 ;; Return value:  Size  Location     Type
 10827 ;;		None               void
 10828 ;; Registers used:
 10829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10830 ;; Tracked objects:
 10831 ;;		On entry : 0/0
 10832 ;;		On exit  : 0/0
 10833 ;;		Unchanged: 0/0
 10834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10835 ;;      Params:         0       0       0       0       0       0       0       0       0
 10836 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10837 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10838 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10839 ;;Total ram usage:        1 bytes
 10840 ;; Hardware stack levels used:    1
 10841 ;; Hardware stack levels required when called:    9
 10842 ;; This function calls:
 10843 ;;		_USBCtrlEPAllowStatusStage
 10844 ;;		_USBCtrlEPService
 10845 ;;		_USBStallHandler
 10846 ;;		_USBSuspend
 10847 ;;		_USBWakeFromSuspend
 10848 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10849 ;;		i2_USBDeviceInit
 10850 ;; This function is called by:
 10851 ;;		_high_isr
 10852 ;; This function uses a non-reentrant model
 10853 ;;
 10854                           
 10855                           	psect	text53
 10856  001A1C                     __ptext53:
 10857                           	opt stack 0
 10858  001A1C                     _USBDeviceTasks:
 10859                           	opt stack 15
 10860                           
 10861                           ;usb_device.c: 491: uint8_t i;
 10862                           ;usb_device.c: 602: if(USBDeviceState == ATTACHED_STATE)
 10863                           
 10864                           ;incstack = 0
 10865  001A1C  0100               	movlb	0	; () banked
 10866  001A1E  059F               	decf	_USBDeviceState& (0+255),w,b	;volatile
 10867  001A20  B4D8               	btfsc	status,2,c
 10868                           
 10869                           ; BSR set to: 0
 10870                           ;usb_device.c: 603: {
 10871                           ;usb_device.c: 613: if(!UCONbits.SE0)
 10872  001A22  BA6D               	btfsc	3949,5,c	;volatile
 10873  001A24  D007               	goto	i2l6050
 10874                           
 10875                           ; BSR set to: 0
 10876                           ;usb_device.c: 614: {
 10877                           ;usb_device.c: 615: {UIR = 0;};
 10878  001A26  0E00               	movlw	0
 10879  001A28  6E68               	movwf	3944,c	;volatile
 10880                           
 10881                           ; BSR set to: 0
 10882                           ;usb_device.c: 619: UIEbits.URSTIE = 1;
 10883  001A2A  8069               	bsf	3945,0,c	;volatile
 10884                           
 10885                           ; BSR set to: 0
 10886                           ;usb_device.c: 620: UIEbits.IDLEIE = 1;
 10887  001A2C  8869               	bsf	3945,4,c	;volatile
 10888                           
 10889                           ;usb_device.c: 621: USBDeviceState = POWERED_STATE;
 10890  001A2E  0E02               	movlw	2
 10891  001A30  0100               	movlb	0	; () banked
 10892  001A32  6F9F               	movwf	_USBDeviceState& (0+255),b	;volatile
 10893  001A34                     i2l6050:
 10894                           
 10895                           ; BSR set to: 0
 10896                           ;usb_device.c: 622: }
 10897                           ;usb_device.c: 623: }
 10898                           ;usb_device.c: 639: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 10899  001A34  B468               	btfsc	3944,2,c	;volatile
 10900                           
 10901                           ; BSR set to: 0
 10902  001A36  A469               	btfss	3945,2,c	;volatile
 10903  001A38  D003               	goto	i2l6058
 10904                           
 10905                           ; BSR set to: 0
 10906                           ;usb_device.c: 640: {
 10907                           ;usb_device.c: 641: (UIR &= 0xFB);
 10908  001A3A  9468               	bcf	3944,2,c	;volatile
 10909                           
 10910                           ; BSR set to: 0
 10911                           ;usb_device.c: 645: USBWakeFromSuspend();
 10912  001A3C  EC1E  F01B         	call	_USBWakeFromSuspend	;wreg free
 10913  001A40                     i2l6058:
 10914                           
 10915                           ;usb_device.c: 647: }
 10916                           ;usb_device.c: 652: if(UCONbits.SUSPND==1)
 10917  001A40  A26D               	btfss	3949,1,c	;volatile
 10918  001A42  D002               	goto	i2l530
 10919                           
 10920                           ;usb_device.c: 653: {
 10921                           ;usb_device.c: 654: {PIR2bits.USBIF = 0;};
 10922  001A44  9AA1               	bcf	4001,5,c	;volatile
 10923                           
 10924                           ;usb_device.c: 655: return;
 10925  001A46  0012               	return	
 10926  001A48                     i2l530:
 10927                           
 10928                           ;usb_device.c: 656: }
 10929                           ;usb_device.c: 668: if(UIRbits.URSTIF && UIEbits.URSTIE)
 10930  001A48  B068               	btfsc	3944,0,c	;volatile
 10931  001A4A  A069               	btfss	3945,0,c	;volatile
 10932  001A4C  D007               	goto	i2l6072
 10933                           
 10934                           ;usb_device.c: 669: {
 10935                           ;usb_device.c: 670: USBDeviceInit();
 10936  001A4E  EC71  F00C         	call	i2_USBDeviceInit	;wreg free
 10937                           
 10938                           ;usb_device.c: 674: {PIE2bits.USBIE = 1;};
 10939  001A52  8AA0               	bsf	4000,5,c	;volatile
 10940                           
 10941                           ;usb_device.c: 676: USBDeviceState = DEFAULT_STATE;
 10942  001A54  0E04               	movlw	4
 10943  001A56  0100               	movlb	0	; () banked
 10944  001A58  6F9F               	movwf	_USBDeviceState& (0+255),b	;volatile
 10945                           
 10946                           ; BSR set to: 0
 10947                           ;usb_device.c: 686: (UIR &= 0xFE);
 10948  001A5A  9068               	bcf	3944,0,c	;volatile
 10949  001A5C                     i2l6072:
 10950                           
 10951                           ;usb_device.c: 687: }
 10952                           ;usb_device.c: 692: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 10953  001A5C  B868               	btfsc	3944,4,c	;volatile
 10954  001A5E  A869               	btfss	3945,4,c	;volatile
 10955  001A60  D003               	goto	i2l6080
 10956                           
 10957                           ;usb_device.c: 693: {
 10958                           ;usb_device.c: 698: USBSuspend();
 10959  001A62  EC76  F01B         	call	_USBSuspend	;wreg free
 10960                           
 10961                           ;usb_device.c: 701: (UIR &= 0xEF);
 10962  001A66  9868               	bcf	3944,4,c	;volatile
 10963  001A68                     i2l6080:
 10964                           
 10965                           ;usb_device.c: 702: }
 10966                           ;usb_device.c: 704: if(UIRbits.SOFIF)
 10967  001A68  AC68               	btfss	3944,6,c	;volatile
 10968  001A6A  D018               	goto	i2l6096
 10969                           
 10970                           ;usb_device.c: 705: {
 10971                           ;usb_device.c: 706: if(UIEbits.SOFIE)
 10972  001A6C  AC69               	btfss	3945,6,c	;volatile
 10973  001A6E  D00E               	goto	i2l6086
 10974                           
 10975                           ;usb_device.c: 707: {
 10976                           ;usb_device.c: 708: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 10977  001A70  0E00               	movlw	0
 10978  001A72  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 10979  001A74  0E73               	movlw	115
 10980  001A76  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 10981  001A78  0E00               	movlw	0
 10982  001A7A  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 10983  001A7C  0E00               	movlw	0
 10984  001A7E  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 10985  001A80  0E00               	movlw	0
 10986  001A82  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 10987  001A84  0E01               	movlw	1
 10988  001A86  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 10989  001A88  EC4E  F019         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 10990  001A8C                     i2l6086:
 10991                           
 10992                           ;usb_device.c: 709: }
 10993                           ;usb_device.c: 710: (UIR &= 0xBF);
 10994  001A8C  9C68               	bcf	3944,6,c	;volatile
 10995                           
 10996                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 10997  001A8E  5014               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 10998  001A90  A4D8               	btfss	status,2,c
 10999                           
 11000                           ;usb_device.c: 736: {
 11001                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 11002  001A92  0614               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 11003                           
 11004                           ;usb_device.c: 738: }
 11005                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 11006  001A94  5014               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 11007  001A96  B4D8               	btfsc	status,2,c
 11008                           
 11009                           ;usb_device.c: 745: {
 11010                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 11011  001A98  EC3B  F014         	call	_USBCtrlEPAllowStatusStage	;wreg free
 11012  001A9C                     i2l6096:
 11013                           
 11014                           ;usb_device.c: 747: }
 11015                           ;usb_device.c: 749: }
 11016                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
 11017  001A9C  BA68               	btfsc	3944,5,c	;volatile
 11018  001A9E  AA69               	btfss	3945,5,c	;volatile
 11019  001AA0  D002               	goto	i2l6102
 11020                           
 11021                           ;usb_device.c: 752: {
 11022                           ;usb_device.c: 753: USBStallHandler();
 11023  001AA2  EC45  F01A         	call	_USBStallHandler	;wreg free
 11024  001AA6                     i2l6102:
 11025                           
 11026                           ;usb_device.c: 754: }
 11027                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 11028  001AA6  B268               	btfsc	3944,1,c	;volatile
 11029  001AA8  A269               	btfss	3945,1,c	;volatile
 11030  001AAA  D00F               	goto	i2l6110
 11031                           
 11032                           ;usb_device.c: 757: {
 11033                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 11034  001AAC  0E7F               	movlw	127
 11035  001AAE  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11036  001AB0  6839               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11037  001AB2  0E00               	movlw	0
 11038  001AB4  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11039  001AB6  0E00               	movlw	0
 11040  001AB8  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11041  001ABA  0E00               	movlw	0
 11042  001ABC  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11043  001ABE  0E01               	movlw	1
 11044  001AC0  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11045  001AC2  EC4E  F019         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11046                           
 11047                           ;usb_device.c: 759: {UEIR = 0;};
 11048  001AC6  0E00               	movlw	0
 11049  001AC8  6E6A               	movwf	3946,c	;volatile
 11050  001ACA                     i2l6110:
 11051                           
 11052                           ;usb_device.c: 767: }
 11053                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 11054  001ACA  0E04               	movlw	4
 11055  001ACC  0100               	movlb	0	; () banked
 11056  001ACE  619F               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 11057  001AD0  D002               	goto	i2l540
 11058                           
 11059                           ; BSR set to: 0
 11060                           ;usb_device.c: 775: {
 11061                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 11062  001AD2  9AA1               	bcf	4001,5,c	;volatile
 11063                           
 11064                           ;usb_device.c: 777: return;
 11065  001AD4  0012               	return	
 11066  001AD6                     i2l540:
 11067                           
 11068                           ; BSR set to: 0
 11069                           ;usb_device.c: 778: }
 11070                           ;usb_device.c: 783: if(UIEbits.TRNIE)
 11071  001AD6  A669               	btfss	3945,3,c	;volatile
 11072  001AD8  D039               	goto	i2l541
 11073                           
 11074                           ; BSR set to: 0
 11075                           ;usb_device.c: 784: {
 11076                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
 11077  001ADA  0E00               	movlw	0
 11078  001ADC  6E4A               	movwf	USBDeviceTasks@i,c
 11079  001ADE                     i2l6116:
 11080                           
 11081                           ; BSR set to: 0
 11082  001ADE  0E03               	movlw	3
 11083  001AE0  644A               	cpfsgt	USBDeviceTasks@i,c
 11084  001AE2  D001               	goto	i2l542
 11085  001AE4  D033               	goto	i2l541
 11086  001AE6                     i2l542:
 11087                           
 11088                           ;usb_device.c: 786: {
 11089                           ;usb_device.c: 787: if(UIRbits.TRNIF)
 11090  001AE6  A668               	btfss	3944,3,c	;volatile
 11091  001AE8  D031               	goto	i2l541
 11092                           
 11093                           ;usb_device.c: 788: {
 11094                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
 11095  001AEA  CF6C F02C          	movff	3948,_USTATcopy	;volatile
 11096                           
 11097                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 11098  001AEE  302C               	rrcf	_USTATcopy,w,c	;volatile
 11099  001AF0  32E8               	rrcf	wreg,f,c
 11100  001AF2  32E8               	rrcf	wreg,f,c
 11101  001AF4  0B0F               	andlw	15
 11102  001AF6  6E18               	movwf	_endpoint_number,c	;volatile
 11103                           
 11104                           ;usb_device.c: 793: (UIR &= 0xF7);
 11105  001AF8  9668               	bcf	3944,3,c	;volatile
 11106                           
 11107                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 11108  001AFA  B42C               	btfsc	_USTATcopy,2,c	;volatile
 11109  001AFC  D007               	goto	i2l6130
 11110                           
 11111                           ;usb_device.c: 799: {
 11112                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 11113  001AFE  5018               	movf	_endpoint_number,w,c	;volatile
 11114  001B00  0D01               	mullw	1
 11115  001B02  0E8E               	movlw	low _ep_data_out
 11116  001B04  24F3               	addwf	prodl,w,c
 11117  001B06  6ED9               	movwf	fsr2l,c
 11118  001B08  0E00               	movlw	high _ep_data_out
 11119  001B0A  D006               	goto	L45
 11120  001B0C                     i2l6130:
 11121                           
 11122                           ;usb_device.c: 802: else
 11123                           ;usb_device.c: 803: {
 11124                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 11125  001B0C  5018               	movf	_endpoint_number,w,c	;volatile
 11126  001B0E  0D01               	mullw	1
 11127  001B10  0E8B               	movlw	low _ep_data_in
 11128  001B12  24F3               	addwf	prodl,w,c
 11129  001B14  6ED9               	movwf	fsr2l,c
 11130  001B16  0E00               	movlw	high _ep_data_in
 11131  001B18                     L45:
 11132  001B18  20F4               	addwfc	prodh,w,c
 11133  001B1A  6EDA               	movwf	fsr2h,c
 11134  001B1C  0100               	movlb	0	; () banked
 11135  001B1E  70DF               	btg	indf2,0,c
 11136                           
 11137                           ; BSR set to: 0
 11138                           ;usb_device.c: 805: }
 11139                           ;usb_device.c: 810: if(endpoint_number == 0)
 11140                           
 11141                           ; BSR set to: 0
 11142  001B20  5018               	movf	_endpoint_number,w,c	;volatile
 11143  001B22  A4D8               	btfss	status,2,c
 11144  001B24  D003               	goto	i2l6136
 11145                           
 11146                           ; BSR set to: 0
 11147                           ;usb_device.c: 811: {
 11148                           ;usb_device.c: 812: USBCtrlEPService();
 11149  001B26  ECA6  F012         	call	_USBCtrlEPService	;wreg free
 11150                           
 11151                           ;usb_device.c: 813: }
 11152  001B2A  D00E               	goto	i2l6138
 11153  001B2C                     i2l6136:
 11154                           
 11155                           ;usb_device.c: 814: else
 11156                           ;usb_device.c: 815: {
 11157                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 11158  001B2C  0E00               	movlw	0
 11159  001B2E  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11160  001B30  0E72               	movlw	114
 11161  001B32  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11162  001B34  0E2C               	movlw	low _USTATcopy
 11163  001B36  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11164  001B38  0E00               	movlw	high _USTATcopy
 11165  001B3A  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11166  001B3C  0E00               	movlw	0
 11167  001B3E  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11168  001B40  0E00               	movlw	0
 11169  001B42  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11170  001B44  EC4E  F019         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11171  001B48                     i2l6138:
 11172  001B48  2A4A               	incf	USBDeviceTasks@i,f,c
 11173  001B4A  D7C9               	goto	i2l6116
 11174  001B4C                     i2l541:
 11175                           
 11176                           ;usb_device.c: 822: }
 11177                           ;usb_device.c: 823: }
 11178                           ;usb_device.c: 824: }
 11179                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
 11180  001B4C  9AA1               	bcf	4001,5,c	;volatile
 11181  001B4E  0012               	return		;funcret
 11182  001B50                     __end_of_USBDeviceTasks:
 11183                           	opt stack 0
 11184                           pclatu	equ	0xFFB
 11185                           pclath	equ	0xFFA
 11186                           tblptru	equ	0xFF8
 11187                           tblptrh	equ	0xFF7
 11188                           tblptrl	equ	0xFF6
 11189                           tablat	equ	0xFF5
 11190                           prodh	equ	0xFF4
 11191                           prodl	equ	0xFF3
 11192                           intcon	equ	0xFF2
 11193                           postinc0	equ	0xFEE
 11194                           fsr0h	equ	0xFEA
 11195                           fsr0l	equ	0xFE9
 11196                           wreg	equ	0xFE8
 11197                           indf1	equ	0xFE7
 11198                           postdec1	equ	0xFE5
 11199                           fsr1h	equ	0xFE2
 11200                           fsr1l	equ	0xFE1
 11201                           indf2	equ	0xFDF
 11202                           postinc2	equ	0xFDE
 11203                           postdec2	equ	0xFDD
 11204                           plusw2	equ	0xFDB
 11205                           fsr2h	equ	0xFDA
 11206                           fsr2l	equ	0xFD9
 11207                           status	equ	0xFD8
 11208                           
 11209 ;; *************** function i2_USBDeviceInit *****************
 11210 ;; Defined at:
 11211 ;;		line 298 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_de
      +vice.c"
 11212 ;; Parameters:    Size  Location     Type
 11213 ;;		None
 11214 ;; Auto vars:     Size  Location     Type
 11215 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 11216 ;; Return value:  Size  Location     Type
 11217 ;;		None               void
 11218 ;; Registers used:
 11219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11220 ;; Tracked objects:
 11221 ;;		On entry : 0/0
 11222 ;;		On exit  : 0/0
 11223 ;;		Unchanged: 0/0
 11224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11225 ;;      Params:         0       0       0       0       0       0       0       0       0
 11226 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11227 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11228 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11229 ;;Total ram usage:        1 bytes
 11230 ;; Hardware stack levels used:    1
 11231 ;; Hardware stack levels required when called:    1
 11232 ;; This function calls:
 11233 ;;		i2_memset
 11234 ;; This function is called by:
 11235 ;;		_USBDeviceTasks
 11236 ;; This function uses a non-reentrant model
 11237 ;;
 11238                           
 11239                           	psect	text54
 11240  0018E2                     __ptext54:
 11241                           	opt stack 0
 11242  0018E2                     i2_USBDeviceInit:
 11243                           	opt stack 22
 11244                           
 11245                           ;usb_device.c: 300: uint8_t i;
 11246                           ;usb_device.c: 302: {PIE2bits.USBIE = 0;};
 11247                           
 11248                           ;incstack = 0
 11249  0018E2  9AA0               	bcf	4000,5,c	;volatile
 11250                           
 11251                           ;usb_device.c: 305: {UEIR = 0;};
 11252  0018E4  0E00               	movlw	0
 11253  0018E6  6E6A               	movwf	3946,c	;volatile
 11254                           
 11255                           ;usb_device.c: 308: {UIR = 0;};
 11256  0018E8  0E00               	movlw	0
 11257  0018EA  6E68               	movwf	3944,c	;volatile
 11258                           
 11259                           ;usb_device.c: 311: UEP0 = 0;
 11260  0018EC  0E00               	movlw	0
 11261  0018EE  6E70               	movwf	3952,c	;volatile
 11262                           
 11263                           ;usb_device.c: 313: memset((void*)&UEP1,0x00,(2));;
 11264  0018F0  0E71               	movlw	113
 11265  0018F2  6E2D               	movwf	i2memset@p1,c
 11266  0018F4  0E0F               	movlw	15
 11267  0018F6  6E2E               	movwf	i2memset@p1+1,c
 11268  0018F8  0E00               	movlw	0
 11269  0018FA  6E30               	movwf	i2memset@c+1,c
 11270  0018FC  0E00               	movlw	0
 11271  0018FE  6E2F               	movwf	i2memset@c,c
 11272  001900  0E00               	movlw	0
 11273  001902  6E32               	movwf	i2memset@n+1,c
 11274  001904  0E02               	movlw	2
 11275  001906  6E31               	movwf	i2memset@n,c
 11276  001908  EC36  F01B         	call	i2_memset	;wreg free
 11277                           
 11278                           ;usb_device.c: 315: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 11279  00190C  0E16               	movlw	22
 11280  00190E  6E6F               	movwf	3951,c	;volatile
 11281  001910  0E9F               	movlw	159
 11282  001912  6E6B               	movwf	3947,c	;volatile
 11283  001914  0E7B               	movlw	123
 11284  001916  6E69               	movwf	3945,c	;volatile
 11285                           
 11286                           ;usb_device.c: 318: ;
 11287                           ;usb_device.c: 321: ;
 11288                           ;usb_device.c: 324: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 11289  001918  0E00               	movlw	0
 11290  00191A  6E35               	movwf	i2USBDeviceInit@i,c
 11291  00191C                     i2l5694:
 11292  00191C  0E0B               	movlw	11
 11293  00191E  6435               	cpfsgt	i2USBDeviceInit@i,c
 11294  001920  D001               	goto	i2l5698
 11295  001922  D00E               	goto	i2l518
 11296  001924                     i2l5698:
 11297                           
 11298                           ;usb_device.c: 325: {
 11299                           ;usb_device.c: 326: BDT[i].Val = 0x00;
 11300  001924  5035               	movf	i2USBDeviceInit@i,w,c
 11301  001926  0D04               	mullw	4
 11302  001928  0E00               	movlw	0
 11303  00192A  24F3               	addwf	prodl,w,c
 11304  00192C  6ED9               	movwf	fsr2l,c
 11305  00192E  0E04               	movlw	4
 11306  001930  20F4               	addwfc	prodh,w,c
 11307  001932  6EDA               	movwf	fsr2h,c
 11308  001934  6ADE               	clrf	postinc2,c
 11309  001936  6ADE               	clrf	postinc2,c
 11310  001938  6ADE               	clrf	postinc2,c
 11311  00193A  6ADD               	clrf	postdec2,c
 11312  00193C  2A35               	incf	i2USBDeviceInit@i,f,c
 11313  00193E  D7EE               	goto	i2l5694
 11314  001940                     i2l518:
 11315                           
 11316                           ;usb_device.c: 327: }
 11317                           ;usb_device.c: 330: UCONbits.PPBRST = 1;
 11318  001940  8C6D               	bsf	3949,6,c	;volatile
 11319                           
 11320                           ;usb_device.c: 333: UADDR = 0x00;
 11321  001942  0E00               	movlw	0
 11322  001944  6E6E               	movwf	3950,c	;volatile
 11323                           
 11324                           ;usb_device.c: 336: UCONbits.PKTDIS = 0;
 11325  001946  986D               	bcf	3949,4,c	;volatile
 11326                           
 11327                           ;usb_device.c: 339: UCONbits.PPBRST = 0;
 11328  001948  9C6D               	bcf	3949,6,c	;volatile
 11329                           
 11330                           ;usb_device.c: 342: while(UIRbits.TRNIF == 1)
 11331  00194A  D00C               	goto	i2l5718
 11332  00194C                     i2l5710:
 11333                           
 11334                           ;usb_device.c: 343: {
 11335                           ;usb_device.c: 344: (UIR &= 0xF7);
 11336  00194C  9668               	bcf	3944,3,c	;volatile
 11337                           
 11338                           ;usb_device.c: 346: inPipes[0].info.Val = 0;
 11339  00194E  0E00               	movlw	0
 11340  001950  0100               	movlb	0	; () banked
 11341  001952  6F75               	movwf	(_inPipes+3)& (0+255),b	;volatile
 11342                           
 11343                           ; BSR set to: 0
 11344                           ;usb_device.c: 347: outPipes[0].info.Val = 0;
 11345  001954  0E00               	movlw	0
 11346  001956  0100               	movlb	0	; () banked
 11347  001958  6F6D               	movwf	(_outPipes+3)& (0+255),b	;volatile
 11348                           
 11349                           ; BSR set to: 0
 11350                           ;usb_device.c: 348: outPipes[0].wCount.Val = 0;
 11351  00195A  0E00               	movlw	0
 11352  00195C  0100               	movlb	0	; () banked
 11353  00195E  6F6F               	movwf	(_outPipes+5)& (0+255),b	;volatile
 11354  001960  0E00               	movlw	0
 11355  001962  6F6E               	movwf	(_outPipes+4)& (0+255),b	;volatile
 11356  001964                     i2l5718:
 11357  001964  B668               	btfsc	3944,3,c	;volatile
 11358  001966  D7F2               	goto	i2l5710
 11359                           
 11360                           ;usb_device.c: 349: }
 11361                           ;usb_device.c: 353: USBStatusStageEnabledFlag1 = 1;
 11362  001968  0E01               	movlw	1
 11363  00196A  6E12               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 11364                           
 11365                           ;usb_device.c: 354: USBStatusStageEnabledFlag2 = 1;
 11366  00196C  0E01               	movlw	1
 11367  00196E  6E13               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 11368                           
 11369                           ;usb_device.c: 356: USBDeferINDataStagePackets = 0;
 11370  001970  0E00               	movlw	0
 11371  001972  6E0F               	movwf	_USBDeferINDataStagePackets,c	;volatile
 11372                           
 11373                           ;usb_device.c: 357: USBDeferOUTDataStagePackets = 0;
 11374  001974  0E00               	movlw	0
 11375  001976  6E10               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 11376                           
 11377                           ;usb_device.c: 358: USBBusIsSuspended = 0;
 11378  001978  0E00               	movlw	0
 11379  00197A  0100               	movlb	0	; () banked
 11380  00197C  6F9E               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 11381                           
 11382                           ;usb_device.c: 362: for(i = 0; i < (uint8_t)(2+1u); i++)
 11383  00197E  0E00               	movlw	0
 11384  001980  6E35               	movwf	i2USBDeviceInit@i,c
 11385  001982                     i2l5722:
 11386                           
 11387                           ; BSR set to: 0
 11388  001982  0E02               	movlw	2
 11389  001984  6435               	cpfsgt	i2USBDeviceInit@i,c
 11390  001986  D001               	goto	i2l5726
 11391  001988  D02E               	goto	i2l5732
 11392  00198A                     i2l5726:
 11393                           
 11394                           ;usb_device.c: 363: {
 11395                           ;usb_device.c: 364: pBDTEntryIn[i] = 0u;
 11396  00198A  5035               	movf	i2USBDeviceInit@i,w,c
 11397  00198C  0D02               	mullw	2
 11398  00198E  0E78               	movlw	low _pBDTEntryIn
 11399  001990  24F3               	addwf	prodl,w,c
 11400  001992  6ED9               	movwf	fsr2l,c
 11401  001994  0E00               	movlw	high _pBDTEntryIn
 11402  001996  20F4               	addwfc	prodh,w,c
 11403  001998  6EDA               	movwf	fsr2h,c
 11404  00199A  0E00               	movlw	0
 11405  00199C  6EDE               	movwf	postinc2,c
 11406  00199E  0E00               	movlw	0
 11407  0019A0  6EDD               	movwf	postdec2,c
 11408                           
 11409                           ;usb_device.c: 365: pBDTEntryOut[i] = 0u;
 11410  0019A2  5035               	movf	i2USBDeviceInit@i,w,c
 11411  0019A4  0D02               	mullw	2
 11412  0019A6  0E7E               	movlw	low _pBDTEntryOut
 11413  0019A8  24F3               	addwf	prodl,w,c
 11414  0019AA  6ED9               	movwf	fsr2l,c
 11415  0019AC  0E00               	movlw	high _pBDTEntryOut
 11416  0019AE  20F4               	addwfc	prodh,w,c
 11417  0019B0  6EDA               	movwf	fsr2h,c
 11418  0019B2  0E00               	movlw	0
 11419  0019B4  6EDE               	movwf	postinc2,c
 11420  0019B6  0E00               	movlw	0
 11421  0019B8  6EDD               	movwf	postdec2,c
 11422                           
 11423                           ;usb_device.c: 366: ep_data_in[i].Val = 0u;
 11424  0019BA  5035               	movf	i2USBDeviceInit@i,w,c
 11425  0019BC  0D01               	mullw	1
 11426  0019BE  0E8B               	movlw	low _ep_data_in
 11427  0019C0  24F3               	addwf	prodl,w,c
 11428  0019C2  6ED9               	movwf	fsr2l,c
 11429  0019C4  0E00               	movlw	high _ep_data_in
 11430  0019C6  20F4               	addwfc	prodh,w,c
 11431  0019C8  6EDA               	movwf	fsr2h,c
 11432  0019CA  0E00               	movlw	0
 11433  0019CC  6EDF               	movwf	indf2,c
 11434                           
 11435                           ;usb_device.c: 367: ep_data_out[i].Val = 0u;
 11436  0019CE  5035               	movf	i2USBDeviceInit@i,w,c
 11437  0019D0  0D01               	mullw	1
 11438  0019D2  0E8E               	movlw	low _ep_data_out
 11439  0019D4  24F3               	addwf	prodl,w,c
 11440  0019D6  6ED9               	movwf	fsr2l,c
 11441  0019D8  0E00               	movlw	high _ep_data_out
 11442  0019DA  20F4               	addwfc	prodh,w,c
 11443  0019DC  6EDA               	movwf	fsr2h,c
 11444  0019DE  0E00               	movlw	0
 11445  0019E0  6EDF               	movwf	indf2,c
 11446  0019E2  2A35               	incf	i2USBDeviceInit@i,f,c
 11447  0019E4  D7CE               	goto	i2l5722
 11448  0019E6                     i2l5732:
 11449                           
 11450                           ;usb_device.c: 368: }
 11451                           ;usb_device.c: 371: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 11452  0019E6  0E08               	movlw	8
 11453  0019E8  0100               	movlb	0	; () banked
 11454  0019EA  6F78               	movwf	_pBDTEntryIn& (0+255),b
 11455  0019EC  0E04               	movlw	4
 11456  0019EE  0100               	movlb	0	; () banked
 11457  0019F0  6F79               	movwf	(_pBDTEntryIn+1)& (0+255),b
 11458                           
 11459                           ; BSR set to: 0
 11460                           ;usb_device.c: 373: UEP0 = 0x06|0x10;
 11461  0019F2  0E16               	movlw	22
 11462  0019F4  6E70               	movwf	3952,c	;volatile
 11463                           
 11464                           ; BSR set to: 0
 11465                           ;usb_device.c: 375: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 11466  0019F6  0E04               	movlw	4
 11467  0019F8  0104               	movlb	4	; () banked
 11468  0019FA  6F03               	movwf	3,b	;volatile
 11469  0019FC  0E30               	movlw	48
 11470  0019FE  6F02               	movwf	2,b	;volatile
 11471                           
 11472                           ; BSR set to: 4
 11473                           ;usb_device.c: 376: BDT[0].CNT = 8;
 11474  001A00  0E08               	movlw	8
 11475  001A02  0104               	movlb	4	; () banked
 11476  001A04  6F01               	movwf	1,b	;volatile
 11477                           
 11478                           ; BSR set to: 4
 11479                           ;usb_device.c: 377: BDT[0].STAT.Val = 0x00|0x04;
 11480  001A06  0E04               	movlw	4
 11481  001A08  0104               	movlb	4	; () banked
 11482  001A0A  6F00               	movwf	0,b	;volatile
 11483                           
 11484                           ; BSR set to: 4
 11485                           ;usb_device.c: 378: BDT[0].STAT.Val |= 0x80;
 11486  001A0C  0104               	movlb	4	; () banked
 11487  001A0E  8F00               	bsf	0,7,b	;volatile
 11488                           
 11489                           ; BSR set to: 4
 11490                           ;usb_device.c: 381: USBActiveConfiguration = 0;
 11491  001A10  0E00               	movlw	0
 11492  001A12  6E2B               	movwf	_USBActiveConfiguration,c	;volatile
 11493                           
 11494                           ; BSR set to: 4
 11495                           ;usb_device.c: 384: USBDeviceState = DETACHED_STATE;
 11496  001A14  0E00               	movlw	0
 11497  001A16  0100               	movlb	0	; () banked
 11498  001A18  6F9F               	movwf	_USBDeviceState& (0+255),b	;volatile
 11499                           
 11500                           ; BSR set to: 0
 11501  001A1A  0012               	return		;funcret
 11502  001A1C                     __end_ofi2_USBDeviceInit:
 11503                           	opt stack 0
 11504                           pclatu	equ	0xFFB
 11505                           pclath	equ	0xFFA
 11506                           tblptru	equ	0xFF8
 11507                           tblptrh	equ	0xFF7
 11508                           tblptrl	equ	0xFF6
 11509                           tablat	equ	0xFF5
 11510                           prodh	equ	0xFF4
 11511                           prodl	equ	0xFF3
 11512                           intcon	equ	0xFF2
 11513                           postinc0	equ	0xFEE
 11514                           fsr0h	equ	0xFEA
 11515                           fsr0l	equ	0xFE9
 11516                           wreg	equ	0xFE8
 11517                           indf1	equ	0xFE7
 11518                           postdec1	equ	0xFE5
 11519                           fsr1h	equ	0xFE2
 11520                           fsr1l	equ	0xFE1
 11521                           indf2	equ	0xFDF
 11522                           postinc2	equ	0xFDE
 11523                           postdec2	equ	0xFDD
 11524                           plusw2	equ	0xFDB
 11525                           fsr2h	equ	0xFDA
 11526                           fsr2l	equ	0xFD9
 11527                           status	equ	0xFD8
 11528                           
 11529 ;; *************** function _USBWakeFromSuspend *****************
 11530 ;; Defined at:
 11531 ;;		line 2302 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_d
      +evice.c"
 11532 ;; Parameters:    Size  Location     Type
 11533 ;;		None
 11534 ;; Auto vars:     Size  Location     Type
 11535 ;;		None
 11536 ;; Return value:  Size  Location     Type
 11537 ;;		None               void
 11538 ;; Registers used:
 11539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11540 ;; Tracked objects:
 11541 ;;		On entry : 0/0
 11542 ;;		On exit  : 0/0
 11543 ;;		Unchanged: 0/0
 11544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11545 ;;      Params:         0       0       0       0       0       0       0       0       0
 11546 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11547 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11548 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11549 ;;Total ram usage:        0 bytes
 11550 ;; Hardware stack levels used:    1
 11551 ;; Hardware stack levels required when called:    5
 11552 ;; This function calls:
 11553 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11554 ;; This function is called by:
 11555 ;;		_USBDeviceTasks
 11556 ;; This function uses a non-reentrant model
 11557 ;;
 11558                           
 11559                           	psect	text55
 11560  00363C                     __ptext55:
 11561                           	opt stack 0
 11562  00363C                     _USBWakeFromSuspend:
 11563                           	opt stack 18
 11564                           
 11565                           ;usb_device.c: 2304: USBBusIsSuspended = 0;
 11566                           
 11567                           ; BSR set to: 0
 11568                           ;incstack = 0
 11569  00363C  0E00               	movlw	0
 11570  00363E  0100               	movlb	0	; () banked
 11571  003640  6F9E               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 11572                           
 11573                           ; BSR set to: 0
 11574                           ;usb_device.c: 2310: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 11575  003642  0E00               	movlw	0
 11576  003644  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11577  003646  0E74               	movlw	116
 11578  003648  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11579  00364A  0E00               	movlw	0
 11580  00364C  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11581  00364E  0E00               	movlw	0
 11582  003650  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11583  003652  0E00               	movlw	0
 11584  003654  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11585  003656  0E00               	movlw	0
 11586  003658  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11587  00365A  EC4E  F019         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11588                           
 11589                           ;usb_device.c: 2317: UCONbits.SUSPND = 0;
 11590  00365E  926D               	bcf	3949,1,c	;volatile
 11591                           
 11592                           ;usb_device.c: 2322: UIEbits.ACTVIE = 0;
 11593  003660  9469               	bcf	3945,2,c	;volatile
 11594                           
 11595                           ;usb_device.c: 2340: while(UIRbits.ACTVIF)
 11596  003662  D001               	goto	i2l5616
 11597  003664                     i2l5614:
 11598                           
 11599                           ;usb_device.c: 2342: {
 11600                           ;usb_device.c: 2343: (UIR &= 0xFB);
 11601  003664  9468               	bcf	3944,2,c	;volatile
 11602  003666                     i2l5616:
 11603  003666  A468               	btfss	3944,2,c	;volatile
 11604  003668  0012               	return	
 11605  00366A  D7FC               	goto	i2l5614
 11606  00366C                     __end_of_USBWakeFromSuspend:
 11607                           	opt stack 0
 11608                           pclatu	equ	0xFFB
 11609                           pclath	equ	0xFFA
 11610                           tblptru	equ	0xFF8
 11611                           tblptrh	equ	0xFF7
 11612                           tblptrl	equ	0xFF6
 11613                           tablat	equ	0xFF5
 11614                           prodh	equ	0xFF4
 11615                           prodl	equ	0xFF3
 11616                           intcon	equ	0xFF2
 11617                           postinc0	equ	0xFEE
 11618                           fsr0h	equ	0xFEA
 11619                           fsr0l	equ	0xFE9
 11620                           wreg	equ	0xFE8
 11621                           indf1	equ	0xFE7
 11622                           postdec1	equ	0xFE5
 11623                           fsr1h	equ	0xFE2
 11624                           fsr1l	equ	0xFE1
 11625                           indf2	equ	0xFDF
 11626                           postinc2	equ	0xFDE
 11627                           postdec2	equ	0xFDD
 11628                           plusw2	equ	0xFDB
 11629                           fsr2h	equ	0xFDA
 11630                           fsr2l	equ	0xFD9
 11631                           status	equ	0xFD8
 11632                           
 11633 ;; *************** function _USBSuspend *****************
 11634 ;; Defined at:
 11635 ;;		line 2245 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_d
      +evice.c"
 11636 ;; Parameters:    Size  Location     Type
 11637 ;;		None
 11638 ;; Auto vars:     Size  Location     Type
 11639 ;;		None
 11640 ;; Return value:  Size  Location     Type
 11641 ;;		None               void
 11642 ;; Registers used:
 11643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11644 ;; Tracked objects:
 11645 ;;		On entry : 0/0
 11646 ;;		On exit  : 0/0
 11647 ;;		Unchanged: 0/0
 11648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11649 ;;      Params:         0       0       0       0       0       0       0       0       0
 11650 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11651 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11652 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11653 ;;Total ram usage:        0 bytes
 11654 ;; Hardware stack levels used:    1
 11655 ;; Hardware stack levels required when called:    5
 11656 ;; This function calls:
 11657 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11658 ;; This function is called by:
 11659 ;;		_USBDeviceTasks
 11660 ;; This function uses a non-reentrant model
 11661 ;;
 11662                           
 11663                           	psect	text56
 11664  0036EC                     __ptext56:
 11665                           	opt stack 0
 11666  0036EC                     _USBSuspend:
 11667                           	opt stack 18
 11668                           
 11669                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
 11670                           
 11671                           ;incstack = 0
 11672  0036EC  8469               	bsf	3945,2,c	;volatile
 11673                           
 11674                           ;usb_device.c: 2271: (UIR &= 0xEF);
 11675  0036EE  9868               	bcf	3944,4,c	;volatile
 11676                           
 11677                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
 11678  0036F0  826D               	bsf	3949,1,c	;volatile
 11679                           
 11680                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
 11681  0036F2  0E01               	movlw	1
 11682  0036F4  0100               	movlb	0	; () banked
 11683  0036F6  6F9E               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 11684                           
 11685                           ; BSR set to: 0
 11686                           ;usb_device.c: 2284: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 11687  0036F8  0E00               	movlw	0
 11688  0036FA  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11689  0036FC  0E75               	movlw	117
 11690  0036FE  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11691  003700  0E00               	movlw	0
 11692  003702  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11693  003704  0E00               	movlw	0
 11694  003706  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11695  003708  0E00               	movlw	0
 11696  00370A  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11697  00370C  0E00               	movlw	0
 11698  00370E  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11699  003710  EC4E  F019         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11700  003714  0012               	return		;funcret
 11701  003716                     __end_of_USBSuspend:
 11702                           	opt stack 0
 11703                           pclatu	equ	0xFFB
 11704                           pclath	equ	0xFFA
 11705                           tblptru	equ	0xFF8
 11706                           tblptrh	equ	0xFF7
 11707                           tblptrl	equ	0xFF6
 11708                           tablat	equ	0xFF5
 11709                           prodh	equ	0xFF4
 11710                           prodl	equ	0xFF3
 11711                           intcon	equ	0xFF2
 11712                           postinc0	equ	0xFEE
 11713                           fsr0h	equ	0xFEA
 11714                           fsr0l	equ	0xFE9
 11715                           wreg	equ	0xFE8
 11716                           indf1	equ	0xFE7
 11717                           postdec1	equ	0xFE5
 11718                           fsr1h	equ	0xFE2
 11719                           fsr1l	equ	0xFE1
 11720                           indf2	equ	0xFDF
 11721                           postinc2	equ	0xFDE
 11722                           postdec2	equ	0xFDD
 11723                           plusw2	equ	0xFDB
 11724                           fsr2h	equ	0xFDA
 11725                           fsr2l	equ	0xFD9
 11726                           status	equ	0xFD8
 11727                           
 11728 ;; *************** function _USBStallHandler *****************
 11729 ;; Defined at:
 11730 ;;		line 2202 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_d
      +evice.c"
 11731 ;; Parameters:    Size  Location     Type
 11732 ;;		None
 11733 ;; Auto vars:     Size  Location     Type
 11734 ;;		None
 11735 ;; Return value:  Size  Location     Type
 11736 ;;		None               void
 11737 ;; Registers used:
 11738 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11739 ;; Tracked objects:
 11740 ;;		On entry : 0/0
 11741 ;;		On exit  : 0/0
 11742 ;;		Unchanged: 0/0
 11743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11744 ;;      Params:         0       0       0       0       0       0       0       0       0
 11745 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11746 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11747 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11748 ;;Total ram usage:        1 bytes
 11749 ;; Hardware stack levels used:    1
 11750 ;; This function calls:
 11751 ;;		Nothing
 11752 ;; This function is called by:
 11753 ;;		_USBDeviceTasks
 11754 ;; This function uses a non-reentrant model
 11755 ;;
 11756                           
 11757                           	psect	text57
 11758  00348A                     __ptext57:
 11759                           	opt stack 0
 11760  00348A                     _USBStallHandler:
 11761                           	opt stack 23
 11762                           
 11763                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
 11764                           
 11765                           ;incstack = 0
 11766  00348A  A070               	btfss	3952,0,c	;volatile
 11767  00348C  D01D               	goto	i2l680
 11768                           
 11769                           ;usb_device.c: 2215: {
 11770                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 11771  00348E  C007  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11772  003492  C008  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11773  003496  0E80               	movlw	128
 11774  003498  18DE               	xorwf	postinc2,w,c
 11775  00349A  A4D8               	btfss	status,2,c
 11776  00349C  D014               	goto	i2l5638
 11777  00349E  C078  FFD9         	movff	_pBDTEntryIn,fsr2l
 11778  0034A2  C079  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11779  0034A6  0E84               	movlw	132
 11780  0034A8  18DE               	xorwf	postinc2,w,c
 11781  0034AA  A4D8               	btfss	status,2,c
 11782  0034AC  D00C               	goto	i2l5638
 11783                           
 11784                           ;usb_device.c: 2218: {
 11785                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 11786  0034AE  C007  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11787  0034B2  C008  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11788  0034B6  0E0C               	movlw	12
 11789  0034B8  6EDF               	movwf	indf2,c
 11790                           
 11791                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 11792  0034BA  C007  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11793  0034BE  C008  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11794  0034C2  0E00               	movlw	0
 11795  0034C4  8EDB               	bsf	plusw2,7,c
 11796  0034C6                     i2l5638:
 11797                           
 11798                           ;usb_device.c: 2222: }
 11799                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
 11800  0034C6  9070               	bcf	3952,0,c	;volatile
 11801  0034C8                     i2l680:
 11802                           
 11803                           ;usb_device.c: 2224: }
 11804                           ;usb_device.c: 2226: (UIR &= 0xDF);
 11805  0034C8  9A68               	bcf	3944,5,c	;volatile
 11806  0034CA  0012               	return		;funcret
 11807  0034CC                     __end_of_USBStallHandler:
 11808                           	opt stack 0
 11809                           pclatu	equ	0xFFB
 11810                           pclath	equ	0xFFA
 11811                           tblptru	equ	0xFF8
 11812                           tblptrh	equ	0xFF7
 11813                           tblptrl	equ	0xFF6
 11814                           tablat	equ	0xFF5
 11815                           prodh	equ	0xFF4
 11816                           prodl	equ	0xFF3
 11817                           intcon	equ	0xFF2
 11818                           postinc0	equ	0xFEE
 11819                           fsr0h	equ	0xFEA
 11820                           fsr0l	equ	0xFE9
 11821                           wreg	equ	0xFE8
 11822                           indf1	equ	0xFE7
 11823                           postdec1	equ	0xFE5
 11824                           fsr1h	equ	0xFE2
 11825                           fsr1l	equ	0xFE1
 11826                           indf2	equ	0xFDF
 11827                           postinc2	equ	0xFDE
 11828                           postdec2	equ	0xFDD
 11829                           plusw2	equ	0xFDB
 11830                           fsr2h	equ	0xFDA
 11831                           fsr2l	equ	0xFD9
 11832                           status	equ	0xFD8
 11833                           
 11834 ;; *************** function _USBCtrlEPService *****************
 11835 ;; Defined at:
 11836 ;;		line 2369 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_d
      +evice.c"
 11837 ;; Parameters:    Size  Location     Type
 11838 ;;		None
 11839 ;; Auto vars:     Size  Location     Type
 11840 ;;  setup_cnt       1   28[COMRAM] unsigned char 
 11841 ;; Return value:  Size  Location     Type
 11842 ;;		None               void
 11843 ;; Registers used:
 11844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11845 ;; Tracked objects:
 11846 ;;		On entry : 0/0
 11847 ;;		On exit  : 0/0
 11848 ;;		Unchanged: 0/0
 11849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11850 ;;      Params:         0       0       0       0       0       0       0       0       0
 11851 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11852 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11853 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11854 ;;Total ram usage:        3 bytes
 11855 ;; Hardware stack levels used:    1
 11856 ;; Hardware stack levels required when called:    8
 11857 ;; This function calls:
 11858 ;;		_USBCtrlTrfInHandler
 11859 ;;		_USBCtrlTrfOutHandler
 11860 ;;		_USBCtrlTrfSetupHandler
 11861 ;; This function is called by:
 11862 ;;		_USBDeviceTasks
 11863 ;; This function uses a non-reentrant model
 11864 ;;
 11865                           
 11866                           	psect	text58
 11867  00254C                     __ptext58:
 11868                           	opt stack 0
 11869  00254C                     _USBCtrlEPService:
 11870                           	opt stack 15
 11871                           
 11872                           ;usb_device.c: 2375: USBStatusStageTimeoutCounter = (uint8_t)45;
 11873                           
 11874                           ;incstack = 0
 11875  00254C  0E2D               	movlw	45
 11876  00254E  6E14               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 11877                           
 11878                           ;usb_device.c: 2379: if((USTATcopy.Val & ~0x02) == 0x00)
 11879  002550  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 11880  002554  0EFD               	movlw	253
 11881  002556  1647               	andwf	??_USBCtrlEPService,f,c
 11882  002558  A4D8               	btfss	status,2,c
 11883  00255A  D057               	goto	i2l5672
 11884                           
 11885                           ;usb_device.c: 2380: {
 11886                           ;usb_device.c: 2383: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 11887  00255C  C02C  F047         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 11888  002560  90D8               	bcf	status,0,c
 11889  002562  3247               	rrcf	??_USBCtrlEPService,f,c
 11890  002564  0E3F               	movlw	63
 11891  002566  1647               	andwf	??_USBCtrlEPService,f,c
 11892  002568  5047               	movf	??_USBCtrlEPService,w,c
 11893  00256A  0D04               	mullw	4
 11894  00256C  0E00               	movlw	0
 11895  00256E  24F3               	addwf	prodl,w,c
 11896  002570  6E07               	movwf	_pBDTEntryEP0OutCurrent,c
 11897  002572  0E04               	movlw	4
 11898  002574  20F4               	addwfc	prodh,w,c
 11899  002576  6E08               	movwf	_pBDTEntryEP0OutCurrent+1,c
 11900                           
 11901                           ;usb_device.c: 2391: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 11902  002578  C007  F009         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 11903  00257C  C008  F00A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 11904                           
 11905                           ;usb_device.c: 2393: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 11906  002580  0E04               	movlw	4
 11907  002582  1A09               	xorwf	_pBDTEntryEP0OutNext,f,c
 11908                           
 11909                           ;usb_device.c: 2396: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 11910  002584  C007  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11911  002588  C008  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11912  00258C  30DF               	rrcf	indf2,w,c
 11913  00258E  32E8               	rrcf	wreg,f,c
 11914  002590  0B0F               	andlw	15
 11915  002592  0A0D               	xorlw	13
 11916  002594  A4D8               	btfss	status,2,c
 11917  002596  D036               	goto	i2l5670
 11918                           
 11919                           ;usb_device.c: 2397: {
 11920                           ;usb_device.c: 2398: unsigned char setup_cnt;
 11921                           ;usb_device.c: 2404: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 11922  002598  0E00               	movlw	0
 11923  00259A  6E49               	movwf	USBCtrlEPService@setup_cnt,c
 11924  00259C                     i2l5654:
 11925  00259C  0E07               	movlw	7
 11926  00259E  6449               	cpfsgt	USBCtrlEPService@setup_cnt,c
 11927  0025A0  D001               	goto	i2l5658
 11928  0025A2  D023               	goto	i2l5666
 11929  0025A4                     i2l5658:
 11930                           
 11931                           ;usb_device.c: 2405: {
 11932                           ;usb_device.c: 2406: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 11933  0025A4  EE20 F002          	lfsr	2,2
 11934  0025A8  5007               	movf	_pBDTEntryEP0OutCurrent,w,c
 11935  0025AA  26D9               	addwf	fsr2l,f,c
 11936  0025AC  5008               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 11937  0025AE  22DA               	addwfc	fsr2h,f,c
 11938  0025B0  CFDE F047          	movff	postinc2,??_USBCtrlEPService
 11939  0025B4  CFDD F048          	movff	postdec2,??_USBCtrlEPService+1
 11940  0025B8  C047  FFD9         	movff	??_USBCtrlEPService,fsr2l
 11941  0025BC  C048  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 11942  0025C0  5049               	movf	USBCtrlEPService@setup_cnt,w,c
 11943  0025C2  0D01               	mullw	1
 11944  0025C4  0E30               	movlw	48
 11945  0025C6  24F3               	addwf	prodl,w,c
 11946  0025C8  6EE1               	movwf	fsr1l,c
 11947  0025CA  0E04               	movlw	4
 11948  0025CC  20F4               	addwfc	prodh,w,c
 11949  0025CE  6EE2               	movwf	fsr1h,c
 11950  0025D0  CFDF FFE7          	movff	indf2,indf1
 11951                           
 11952                           ;usb_device.c: 2407: pBDTEntryEP0OutCurrent->ADR++;
 11953  0025D4  EE20 F002          	lfsr	2,2
 11954  0025D8  5007               	movf	_pBDTEntryEP0OutCurrent,w,c
 11955  0025DA  26D9               	addwf	fsr2l,f,c
 11956  0025DC  5008               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 11957  0025DE  22DA               	addwfc	fsr2h,f,c
 11958  0025E0  2ADE               	incf	postinc2,f,c
 11959  0025E2  0E00               	movlw	0
 11960  0025E4  22DD               	addwfc	postdec2,f,c
 11961  0025E6  2A49               	incf	USBCtrlEPService@setup_cnt,f,c
 11962  0025E8  D7D9               	goto	i2l5654
 11963  0025EA                     i2l5666:
 11964                           
 11965                           ;usb_device.c: 2408: }
 11966                           ;usb_device.c: 2409: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 11967  0025EA  EE20 F002          	lfsr	2,2
 11968  0025EE  5007               	movf	_pBDTEntryEP0OutCurrent,w,c
 11969  0025F0  26D9               	addwf	fsr2l,f,c
 11970  0025F2  5008               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 11971  0025F4  22DA               	addwfc	fsr2h,f,c
 11972  0025F6  0E30               	movlw	48
 11973  0025F8  6EDE               	movwf	postinc2,c
 11974  0025FA  0E04               	movlw	4
 11975  0025FC  6EDD               	movwf	postdec2,c
 11976                           
 11977                           ;usb_device.c: 2412: USBCtrlTrfSetupHandler();
 11978  0025FE  EC02  F017         	call	_USBCtrlTrfSetupHandler	;wreg free
 11979                           
 11980                           ;usb_device.c: 2413: }
 11981  002602  0012               	return	
 11982  002604                     i2l5670:
 11983                           
 11984                           ;usb_device.c: 2414: else
 11985                           ;usb_device.c: 2415: {
 11986                           ;usb_device.c: 2417: USBCtrlTrfOutHandler();
 11987  002604  EC7C  F019         	call	_USBCtrlTrfOutHandler	;wreg free
 11988                           
 11989                           ;usb_device.c: 2418: }
 11990                           ;usb_device.c: 2419: }
 11991  002608  0012               	return	
 11992  00260A                     i2l5672:
 11993                           
 11994                           ;usb_device.c: 2420: else if((USTATcopy.Val & ~0x02) == 0x04)
 11995  00260A  502C               	movf	_USTATcopy,w,c	;volatile
 11996  00260C  0BFD               	andlw	253
 11997  00260E  0A04               	xorlw	4
 11998  002610  A4D8               	btfss	status,2,c
 11999  002612  0012               	return	
 12000                           
 12001                           ;usb_device.c: 2421: {
 12002                           ;usb_device.c: 2424: USBCtrlTrfInHandler();
 12003  002614  EC9D  F014         	call	_USBCtrlTrfInHandler	;wreg free
 12004  002618  0012               	return	
 12005  00261A                     __end_of_USBCtrlEPService:
 12006                           	opt stack 0
 12007                           pclatu	equ	0xFFB
 12008                           pclath	equ	0xFFA
 12009                           tblptru	equ	0xFF8
 12010                           tblptrh	equ	0xFF7
 12011                           tblptrl	equ	0xFF6
 12012                           tablat	equ	0xFF5
 12013                           prodh	equ	0xFF4
 12014                           prodl	equ	0xFF3
 12015                           intcon	equ	0xFF2
 12016                           postinc0	equ	0xFEE
 12017                           fsr0h	equ	0xFEA
 12018                           fsr0l	equ	0xFE9
 12019                           wreg	equ	0xFE8
 12020                           indf1	equ	0xFE7
 12021                           postdec1	equ	0xFE5
 12022                           fsr1h	equ	0xFE2
 12023                           fsr1l	equ	0xFE1
 12024                           indf2	equ	0xFDF
 12025                           postinc2	equ	0xFDE
 12026                           postdec2	equ	0xFDD
 12027                           plusw2	equ	0xFDB
 12028                           fsr2h	equ	0xFDA
 12029                           fsr2l	equ	0xFD9
 12030                           status	equ	0xFD8
 12031                           
 12032 ;; *************** function _USBCtrlTrfSetupHandler *****************
 12033 ;; Defined at:
 12034 ;;		line 2469 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_d
      +evice.c"
 12035 ;; Parameters:    Size  Location     Type
 12036 ;;		None
 12037 ;; Auto vars:     Size  Location     Type
 12038 ;;		None
 12039 ;; Return value:  Size  Location     Type
 12040 ;;		None               void
 12041 ;; Registers used:
 12042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12043 ;; Tracked objects:
 12044 ;;		On entry : 0/0
 12045 ;;		On exit  : 0/0
 12046 ;;		Unchanged: 0/0
 12047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12048 ;;      Params:         0       0       0       0       0       0       0       0       0
 12049 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12050 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12051 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12052 ;;Total ram usage:        0 bytes
 12053 ;; Hardware stack levels used:    1
 12054 ;; Hardware stack levels required when called:    7
 12055 ;; This function calls:
 12056 ;;		_USBCheckStdRequest
 12057 ;;		_USBCtrlEPServiceComplete
 12058 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12059 ;; This function is called by:
 12060 ;;		_USBCtrlEPService
 12061 ;; This function uses a non-reentrant model
 12062 ;;
 12063                           
 12064                           	psect	text59
 12065  002E04                     __ptext59:
 12066                           	opt stack 0
 12067  002E04                     _USBCtrlTrfSetupHandler:
 12068                           	opt stack 15
 12069                           
 12070                           ;usb_device.c: 2474: shortPacketStatus = 0;
 12071                           
 12072                           ;incstack = 0
 12073  002E04  0E00               	movlw	0
 12074  002E06  6E19               	movwf	_shortPacketStatus,c	;volatile
 12075                           
 12076                           ;usb_device.c: 2475: USBDeferStatusStagePacket = 0;
 12077  002E08  0E00               	movlw	0
 12078  002E0A  6E11               	movwf	_USBDeferStatusStagePacket,c	;volatile
 12079                           
 12080                           ;usb_device.c: 2476: USBDeferINDataStagePackets = 0;
 12081  002E0C  0E00               	movlw	0
 12082  002E0E  6E0F               	movwf	_USBDeferINDataStagePackets,c	;volatile
 12083                           
 12084                           ;usb_device.c: 2477: USBDeferOUTDataStagePackets = 0;
 12085  002E10  0E00               	movlw	0
 12086  002E12  6E10               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 12087                           
 12088                           ;usb_device.c: 2478: BothEP0OutUOWNsSet = 0;
 12089  002E14  0E00               	movlw	0
 12090  002E16  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 12091                           
 12092                           ;usb_device.c: 2479: controlTransferState = 0;
 12093  002E18  0E00               	movlw	0
 12094  002E1A  6E16               	movwf	_controlTransferState,c	;volatile
 12095                           
 12096                           ;usb_device.c: 2488: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 12097  002E1C  C078  FFD9         	movff	_pBDTEntryIn,fsr2l
 12098  002E20  C079  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12099  002E24  0E7F               	movlw	127
 12100  002E26  16DF               	andwf	indf2,f,c
 12101                           
 12102                           ;usb_device.c: 2489: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12103  002E28  0E04               	movlw	4
 12104  002E2A  0100               	movlb	0	; () banked
 12105  002E2C  1B78               	xorwf	_pBDTEntryIn& (0+255),f,b
 12106                           
 12107                           ; BSR set to: 0
 12108                           ;usb_device.c: 2490: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 12109  002E2E  C078  FFD9         	movff	_pBDTEntryIn,fsr2l
 12110  002E32  C079  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12111  002E36  0E7F               	movlw	127
 12112  002E38  16DF               	andwf	indf2,f,c
 12113                           
 12114                           ; BSR set to: 0
 12115                           ;usb_device.c: 2491: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 12116  002E3A  0E04               	movlw	4
 12117  002E3C  0100               	movlb	0	; () banked
 12118  002E3E  1B78               	xorwf	_pBDTEntryIn& (0+255),f,b
 12119                           
 12120                           ; BSR set to: 0
 12121                           ;usb_device.c: 2492: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 12122  002E40  C009  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12123  002E44  C00A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12124  002E48  0E7F               	movlw	127
 12125  002E4A  16DF               	andwf	indf2,f,c
 12126                           
 12127                           ; BSR set to: 0
 12128                           ;usb_device.c: 2494: inPipes[0].info.Val = 0;
 12129  002E4C  0E00               	movlw	0
 12130  002E4E  0100               	movlb	0	; () banked
 12131  002E50  6F75               	movwf	(_inPipes+3)& (0+255),b	;volatile
 12132                           
 12133                           ; BSR set to: 0
 12134                           ;usb_device.c: 2495: inPipes[0].wCount.Val = 0;
 12135  002E52  0E00               	movlw	0
 12136  002E54  0100               	movlb	0	; () banked
 12137  002E56  6F77               	movwf	(_inPipes+5)& (0+255),b	;volatile
 12138  002E58  0E00               	movlw	0
 12139  002E5A  6F76               	movwf	(_inPipes+4)& (0+255),b	;volatile
 12140                           
 12141                           ; BSR set to: 0
 12142                           ;usb_device.c: 2496: outPipes[0].info.Val = 0;
 12143  002E5C  0E00               	movlw	0
 12144  002E5E  0100               	movlb	0	; () banked
 12145  002E60  6F6D               	movwf	(_outPipes+3)& (0+255),b	;volatile
 12146                           
 12147                           ; BSR set to: 0
 12148                           ;usb_device.c: 2497: outPipes[0].wCount.Val = 0;
 12149  002E62  0E00               	movlw	0
 12150  002E64  0100               	movlb	0	; () banked
 12151  002E66  6F6F               	movwf	(_outPipes+5)& (0+255),b	;volatile
 12152  002E68  0E00               	movlw	0
 12153  002E6A  6F6E               	movwf	(_outPipes+4)& (0+255),b	;volatile
 12154                           
 12155                           ; BSR set to: 0
 12156                           ;usb_device.c: 2503: USBCheckStdRequest();
 12157  002E6C  EC34  F00F         	call	_USBCheckStdRequest	;wreg free
 12158                           
 12159                           ;usb_device.c: 2504: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 12160  002E70  0E00               	movlw	0
 12161  002E72  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12162  002E74  0E03               	movlw	3
 12163  002E76  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12164  002E78  0E00               	movlw	0
 12165  002E7A  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12166  002E7C  0E00               	movlw	0
 12167  002E7E  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12168  002E80  0E00               	movlw	0
 12169  002E82  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12170  002E84  0E00               	movlw	0
 12171  002E86  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12172  002E88  EC4E  F019         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12173                           
 12174                           ;usb_device.c: 2517: USBCtrlEPServiceComplete();
 12175  002E8C  ECBA  F00E         	call	_USBCtrlEPServiceComplete	;wreg free
 12176  002E90  0012               	return		;funcret
 12177  002E92                     __end_of_USBCtrlTrfSetupHandler:
 12178                           	opt stack 0
 12179                           pclatu	equ	0xFFB
 12180                           pclath	equ	0xFFA
 12181                           tblptru	equ	0xFF8
 12182                           tblptrh	equ	0xFF7
 12183                           tblptrl	equ	0xFF6
 12184                           tablat	equ	0xFF5
 12185                           prodh	equ	0xFF4
 12186                           prodl	equ	0xFF3
 12187                           intcon	equ	0xFF2
 12188                           postinc0	equ	0xFEE
 12189                           fsr0h	equ	0xFEA
 12190                           fsr0l	equ	0xFE9
 12191                           wreg	equ	0xFE8
 12192                           indf1	equ	0xFE7
 12193                           postdec1	equ	0xFE5
 12194                           fsr1h	equ	0xFE2
 12195                           fsr1l	equ	0xFE1
 12196                           indf2	equ	0xFDF
 12197                           postinc2	equ	0xFDE
 12198                           postdec2	equ	0xFDD
 12199                           plusw2	equ	0xFDB
 12200                           fsr2h	equ	0xFDA
 12201                           fsr2l	equ	0xFD9
 12202                           status	equ	0xFD8
 12203                           
 12204 ;; *************** function _USBCtrlEPServiceComplete *****************
 12205 ;; Defined at:
 12206 ;;		line 1616 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_d
      +evice.c"
 12207 ;; Parameters:    Size  Location     Type
 12208 ;;		None
 12209 ;; Auto vars:     Size  Location     Type
 12210 ;;		None
 12211 ;; Return value:  Size  Location     Type
 12212 ;;		None               void
 12213 ;; Registers used:
 12214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12215 ;; Tracked objects:
 12216 ;;		On entry : 0/0
 12217 ;;		On exit  : 0/0
 12218 ;;		Unchanged: 0/0
 12219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12220 ;;      Params:         0       0       0       0       0       0       0       0       0
 12221 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12222 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12223 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12224 ;;Total ram usage:        0 bytes
 12225 ;; Hardware stack levels used:    1
 12226 ;; Hardware stack levels required when called:    2
 12227 ;; This function calls:
 12228 ;;		_USBCtrlEPAllowDataStage
 12229 ;;		_USBCtrlEPAllowStatusStage
 12230 ;; This function is called by:
 12231 ;;		_USBCtrlTrfSetupHandler
 12232 ;; This function uses a non-reentrant model
 12233 ;;
 12234                           
 12235                           	psect	text60
 12236  001D74                     __ptext60:
 12237                           	opt stack 0
 12238  001D74                     _USBCtrlEPServiceComplete:
 12239                           	opt stack 19
 12240                           
 12241                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
 12242                           
 12243                           ;incstack = 0
 12244  001D74  986D               	bcf	3949,4,c	;volatile
 12245                           
 12246                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
 12247  001D76  0100               	movlb	0	; () banked
 12248  001D78  BF75               	btfsc	(_inPipes+3)& (0+255),7,b	;volatile
 12249  001D7A  D039               	goto	i2l604
 12250                           
 12251                           ; BSR set to: 0
 12252                           ;usb_device.c: 1629: {
 12253                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
 12254  001D7C  0100               	movlb	0	; () banked
 12255  001D7E  AF6D               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 12256  001D80  D00B               	goto	i2l4634
 12257                           
 12258                           ; BSR set to: 0
 12259                           ;usb_device.c: 1631: {
 12260                           ;usb_device.c: 1632: controlTransferState = 2;
 12261  001D82  0E02               	movlw	2
 12262  001D84  6E16               	movwf	_controlTransferState,c	;volatile
 12263                           
 12264                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
 12265  001D86  5010               	movf	_USBDeferOUTDataStagePackets,w,c	;volatile
 12266  001D88  B4D8               	btfsc	status,2,c
 12267                           
 12268                           ; BSR set to: 0
 12269                           ;usb_device.c: 1644: {
 12270                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
 12271  001D8A  EC69  F016         	call	_USBCtrlEPAllowDataStage	;wreg free
 12272                           
 12273                           ;usb_device.c: 1646: }
 12274                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
 12275  001D8E  0E00               	movlw	0
 12276  001D90  6E13               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12277                           
 12278                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
 12279  001D92  0E00               	movlw	0
 12280  001D94  6E12               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 12281                           
 12282                           ;usb_device.c: 1652: }
 12283  001D96  0012               	return	
 12284  001D98                     i2l4634:
 12285                           
 12286                           ;usb_device.c: 1653: else
 12287                           ;usb_device.c: 1654: {
 12288                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
 12289  001D98  EE20 F001          	lfsr	2,1
 12290  001D9C  5009               	movf	_pBDTEntryEP0OutNext,w,c
 12291  001D9E  26D9               	addwf	fsr2l,f,c
 12292  001DA0  500A               	movf	_pBDTEntryEP0OutNext+1,w,c
 12293  001DA2  22DA               	addwfc	fsr2h,f,c
 12294  001DA4  0E08               	movlw	8
 12295  001DA6  6EDF               	movwf	indf2,c
 12296                           
 12297                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12298  001DA8  EE20 F002          	lfsr	2,2
 12299  001DAC  5009               	movf	_pBDTEntryEP0OutNext,w,c
 12300  001DAE  26D9               	addwf	fsr2l,f,c
 12301  001DB0  500A               	movf	_pBDTEntryEP0OutNext+1,w,c
 12302  001DB2  22DA               	addwfc	fsr2h,f,c
 12303  001DB4  0E30               	movlw	48
 12304  001DB6  6EDE               	movwf	postinc2,c
 12305  001DB8  0E04               	movlw	4
 12306  001DBA  6EDD               	movwf	postdec2,c
 12307                           
 12308                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12309  001DBC  C009  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12310  001DC0  C00A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12311  001DC4  0E0C               	movlw	12
 12312  001DC6  6EDF               	movwf	indf2,c
 12313                           
 12314                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12315  001DC8  C009  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12316  001DCC  C00A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12317  001DD0  0E00               	movlw	0
 12318  001DD2  8EDB               	bsf	plusw2,7,c
 12319                           
 12320                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
 12321  001DD4  C078  FFD9         	movff	_pBDTEntryIn,fsr2l
 12322  001DD8  C079  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12323  001DDC  0E04               	movlw	4
 12324  001DDE  6EDF               	movwf	indf2,c
 12325                           
 12326                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12327  001DE0  C078  FFD9         	movff	_pBDTEntryIn,fsr2l
 12328  001DE4  C079  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12329  001DE8  0E00               	movlw	0
 12330  001DEA  8EDB               	bsf	plusw2,7,c
 12331                           
 12332                           ;usb_device.c: 1665: }
 12333                           ;usb_device.c: 1666: }
 12334  001DEC  0012               	return	
 12335  001DEE                     i2l604:
 12336                           
 12337                           ; BSR set to: 0
 12338                           ;usb_device.c: 1667: else
 12339                           ;usb_device.c: 1668: {
 12340                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
 12341  001DEE  0104               	movlb	4	; () banked
 12342  001DF0  AF30               	btfss	48,7,b	;volatile
 12343  001DF2  D010               	goto	i2l4654
 12344                           
 12345                           ; BSR set to: 4
 12346                           ;usb_device.c: 1670: {
 12347                           ;usb_device.c: 1671: controlTransferState = 1;
 12348  001DF4  0E01               	movlw	1
 12349  001DF6  6E16               	movwf	_controlTransferState,c	;volatile
 12350                           
 12351                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
 12352  001DF8  500F               	movf	_USBDeferINDataStagePackets,w,c	;volatile
 12353  001DFA  B4D8               	btfsc	status,2,c
 12354                           
 12355                           ; BSR set to: 4
 12356                           ;usb_device.c: 1686: {
 12357                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
 12358  001DFC  EC69  F016         	call	_USBCtrlEPAllowDataStage	;wreg free
 12359                           
 12360                           ;usb_device.c: 1688: }
 12361                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
 12362  001E00  0E00               	movlw	0
 12363  001E02  6E13               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12364                           
 12365                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
 12366  001E04  0E00               	movlw	0
 12367  001E06  6E12               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 12368                           
 12369                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
 12370  001E08  5011               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 12371  001E0A  A4D8               	btfss	status,2,c
 12372  001E0C  0012               	return	
 12373                           
 12374                           ;usb_device.c: 1713: {
 12375                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
 12376  001E0E  EC3B  F014         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12377                           
 12378                           ;usb_device.c: 1715: }
 12379                           ;usb_device.c: 1716: }
 12380  001E12  0012               	return	
 12381  001E14                     i2l4654:
 12382                           
 12383                           ;usb_device.c: 1717: else
 12384                           ;usb_device.c: 1718: {
 12385                           ;usb_device.c: 1729: controlTransferState = 2;
 12386  001E14  0E02               	movlw	2
 12387  001E16  6E16               	movwf	_controlTransferState,c	;volatile
 12388                           
 12389                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
 12390  001E18  EE20 F001          	lfsr	2,1
 12391  001E1C  5009               	movf	_pBDTEntryEP0OutNext,w,c
 12392  001E1E  26D9               	addwf	fsr2l,f,c
 12393  001E20  500A               	movf	_pBDTEntryEP0OutNext+1,w,c
 12394  001E22  22DA               	addwfc	fsr2h,f,c
 12395  001E24  0E08               	movlw	8
 12396  001E26  6EDF               	movwf	indf2,c
 12397                           
 12398                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12399  001E28  EE20 F002          	lfsr	2,2
 12400  001E2C  5009               	movf	_pBDTEntryEP0OutNext,w,c
 12401  001E2E  26D9               	addwf	fsr2l,f,c
 12402  001E30  500A               	movf	_pBDTEntryEP0OutNext+1,w,c
 12403  001E32  22DA               	addwfc	fsr2h,f,c
 12404  001E34  0E30               	movlw	48
 12405  001E36  6EDE               	movwf	postinc2,c
 12406  001E38  0E04               	movlw	4
 12407  001E3A  6EDD               	movwf	postdec2,c
 12408                           
 12409                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12410  001E3C  C009  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12411  001E40  C00A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12412  001E44  0E04               	movlw	4
 12413  001E46  6EDF               	movwf	indf2,c
 12414                           
 12415                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12416  001E48  C009  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12417  001E4C  C00A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12418  001E50  0E00               	movlw	0
 12419  001E52  8EDB               	bsf	plusw2,7,c
 12420                           
 12421                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
 12422  001E54  0E00               	movlw	0
 12423  001E56  6E13               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 12424                           
 12425                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
 12426  001E58  0E00               	movlw	0
 12427  001E5A  6E12               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 12428                           
 12429                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
 12430  001E5C  5011               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 12431  001E5E  A4D8               	btfss	status,2,c
 12432  001E60  0012               	return	
 12433                           
 12434                           ;usb_device.c: 1741: {
 12435                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
 12436  001E62  EC3B  F014         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12437  001E66  0012               	return	
 12438  001E68                     __end_of_USBCtrlEPServiceComplete:
 12439                           	opt stack 0
 12440                           pclatu	equ	0xFFB
 12441                           pclath	equ	0xFFA
 12442                           tblptru	equ	0xFF8
 12443                           tblptrh	equ	0xFF7
 12444                           tblptrl	equ	0xFF6
 12445                           tablat	equ	0xFF5
 12446                           prodh	equ	0xFF4
 12447                           prodl	equ	0xFF3
 12448                           intcon	equ	0xFF2
 12449                           postinc0	equ	0xFEE
 12450                           fsr0h	equ	0xFEA
 12451                           fsr0l	equ	0xFE9
 12452                           wreg	equ	0xFE8
 12453                           indf1	equ	0xFE7
 12454                           postdec1	equ	0xFE5
 12455                           fsr1h	equ	0xFE2
 12456                           fsr1l	equ	0xFE1
 12457                           indf2	equ	0xFDF
 12458                           postinc2	equ	0xFDE
 12459                           postdec2	equ	0xFDD
 12460                           plusw2	equ	0xFDB
 12461                           fsr2h	equ	0xFDA
 12462                           fsr2l	equ	0xFD9
 12463                           status	equ	0xFD8
 12464                           
 12465 ;; *************** function _USBCtrlEPAllowDataStage *****************
 12466 ;; Defined at:
 12467 ;;		line 1488 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_d
      +evice.c"
 12468 ;; Parameters:    Size  Location     Type
 12469 ;;		None
 12470 ;; Auto vars:     Size  Location     Type
 12471 ;;		None
 12472 ;; Return value:  Size  Location     Type
 12473 ;;		None               void
 12474 ;; Registers used:
 12475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12476 ;; Tracked objects:
 12477 ;;		On entry : 0/0
 12478 ;;		On exit  : 0/0
 12479 ;;		Unchanged: 0/0
 12480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12481 ;;      Params:         0       0       0       0       0       0       0       0       0
 12482 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12483 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12484 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12485 ;;Total ram usage:        0 bytes
 12486 ;; Hardware stack levels used:    1
 12487 ;; Hardware stack levels required when called:    1
 12488 ;; This function calls:
 12489 ;;		_USBCtrlTrfTxService
 12490 ;; This function is called by:
 12491 ;;		_USBCtrlEPServiceComplete
 12492 ;; This function uses a non-reentrant model
 12493 ;;
 12494                           
 12495                           	psect	text61
 12496  002CD2                     __ptext61:
 12497                           	opt stack 0
 12498  002CD2                     _USBCtrlEPAllowDataStage:
 12499                           	opt stack 19
 12500                           
 12501                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
 12502                           
 12503                           ;incstack = 0
 12504  002CD2  0E00               	movlw	0
 12505  002CD4  6E0F               	movwf	_USBDeferINDataStagePackets,c	;volatile
 12506                           
 12507                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
 12508  002CD6  0E00               	movlw	0
 12509  002CD8  6E10               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
 12510                           
 12511                           ;usb_device.c: 1493: if(controlTransferState == 2)
 12512  002CDA  0E02               	movlw	2
 12513  002CDC  1816               	xorwf	_controlTransferState,w,c	;volatile
 12514  002CDE  A4D8               	btfss	status,2,c
 12515  002CE0  D01F               	goto	i2l4350
 12516                           
 12517                           ;usb_device.c: 1494: {
 12518                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
 12519  002CE2  EE20 F001          	lfsr	2,1
 12520  002CE6  5009               	movf	_pBDTEntryEP0OutNext,w,c
 12521  002CE8  26D9               	addwf	fsr2l,f,c
 12522  002CEA  500A               	movf	_pBDTEntryEP0OutNext+1,w,c
 12523  002CEC  22DA               	addwfc	fsr2h,f,c
 12524  002CEE  0E08               	movlw	8
 12525  002CF0  6EDF               	movwf	indf2,c
 12526                           
 12527                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12528  002CF2  EE20 F002          	lfsr	2,2
 12529  002CF6  5009               	movf	_pBDTEntryEP0OutNext,w,c
 12530  002CF8  26D9               	addwf	fsr2l,f,c
 12531  002CFA  500A               	movf	_pBDTEntryEP0OutNext+1,w,c
 12532  002CFC  22DA               	addwfc	fsr2h,f,c
 12533  002CFE  0E38               	movlw	56
 12534  002D00  6EDE               	movwf	postinc2,c
 12535  002D02  0E04               	movlw	4
 12536  002D04  6EDD               	movwf	postdec2,c
 12537                           
 12538                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12539  002D06  C009  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12540  002D0A  C00A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12541  002D0E  0E48               	movlw	72
 12542  002D10  6EDF               	movwf	indf2,c
 12543                           
 12544                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12545  002D12  C009  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12546  002D16  C00A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12547  002D1A  0E00               	movlw	0
 12548  002D1C  8EDB               	bsf	plusw2,7,c
 12549                           
 12550                           ;usb_device.c: 1500: }
 12551  002D1E  0012               	return	
 12552  002D20                     i2l4350:
 12553                           
 12554                           ;usb_device.c: 1501: else
 12555                           ;usb_device.c: 1502: {
 12556                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 12557  002D20  0100               	movlb	0	; () banked
 12558  002D22  5176               	movf	(_inPipes+4)& (0+255),w,b	;volatile
 12559  002D24  0104               	movlb	4	; () banked
 12560  002D26  5D36               	subwf	54,w,b	;volatile
 12561  002D28  0100               	movlb	0	; () banked
 12562  002D2A  5177               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 12563  002D2C  0104               	movlb	4	; () banked
 12564  002D2E  5937               	subwfb	55,w,b	;volatile
 12565  002D30  B0D8               	btfsc	status,0,c
 12566  002D32  D004               	goto	i2l4354
 12567                           
 12568                           ; BSR set to: 4
 12569                           ;usb_device.c: 1506: {
 12570                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
 12571  002D34  C436 F076          	movff	1078,_inPipes+4	;volatile
 12572  002D38  C437 F077          	movff	1079,_inPipes+5	;volatile
 12573  002D3C                     i2l4354:
 12574                           
 12575                           ; BSR set to: 4
 12576                           ;usb_device.c: 1508: }
 12577                           ;usb_device.c: 1509: USBCtrlTrfTxService();
 12578  002D3C  ECD4  F011         	call	_USBCtrlTrfTxService	;wreg free
 12579                           
 12580                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 12581  002D40  0100               	movlb	0	; () banked
 12582  002D42  EE20 F002          	lfsr	2,2
 12583  002D46  5178               	movf	_pBDTEntryIn& (0+255),w,b
 12584  002D48  26D9               	addwf	fsr2l,f,c
 12585  002D4A  5179               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12586  002D4C  22DA               	addwfc	fsr2h,f,c
 12587  002D4E  0E38               	movlw	56
 12588  002D50  6EDE               	movwf	postinc2,c
 12589  002D52  0E04               	movlw	4
 12590  002D54  6EDD               	movwf	postdec2,c
 12591                           
 12592                           ; BSR set to: 0
 12593                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12594  002D56  C078  FFD9         	movff	_pBDTEntryIn,fsr2l
 12595  002D5A  C079  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12596  002D5E  0E48               	movlw	72
 12597  002D60  6EDF               	movwf	indf2,c
 12598                           
 12599                           ; BSR set to: 0
 12600                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12601  002D62  C078  FFD9         	movff	_pBDTEntryIn,fsr2l
 12602  002D66  C079  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12603  002D6A  0E00               	movlw	0
 12604  002D6C  8EDB               	bsf	plusw2,7,c
 12605  002D6E  0012               	return	
 12606  002D70                     __end_of_USBCtrlEPAllowDataStage:
 12607                           	opt stack 0
 12608                           pclatu	equ	0xFFB
 12609                           pclath	equ	0xFFA
 12610                           tblptru	equ	0xFF8
 12611                           tblptrh	equ	0xFF7
 12612                           tblptrl	equ	0xFF6
 12613                           tablat	equ	0xFF5
 12614                           prodh	equ	0xFF4
 12615                           prodl	equ	0xFF3
 12616                           intcon	equ	0xFF2
 12617                           postinc0	equ	0xFEE
 12618                           fsr0h	equ	0xFEA
 12619                           fsr0l	equ	0xFE9
 12620                           wreg	equ	0xFE8
 12621                           indf1	equ	0xFE7
 12622                           postdec1	equ	0xFE5
 12623                           fsr1h	equ	0xFE2
 12624                           fsr1l	equ	0xFE1
 12625                           indf2	equ	0xFDF
 12626                           postinc2	equ	0xFDE
 12627                           postdec2	equ	0xFDD
 12628                           plusw2	equ	0xFDB
 12629                           fsr2h	equ	0xFDA
 12630                           fsr2l	equ	0xFD9
 12631                           status	equ	0xFD8
 12632                           
 12633 ;; *************** function _USBCheckStdRequest *****************
 12634 ;; Defined at:
 12635 ;;		line 2689 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_d
      +evice.c"
 12636 ;; Parameters:    Size  Location     Type
 12637 ;;		None
 12638 ;; Auto vars:     Size  Location     Type
 12639 ;;		None
 12640 ;; Return value:  Size  Location     Type
 12641 ;;		None               void
 12642 ;; Registers used:
 12643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12644 ;; Tracked objects:
 12645 ;;		On entry : 0/0
 12646 ;;		On exit  : 0/0
 12647 ;;		Unchanged: 0/0
 12648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12649 ;;      Params:         0       0       0       0       0       0       0       0       0
 12650 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12651 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12652 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12653 ;;Total ram usage:        0 bytes
 12654 ;; Hardware stack levels used:    1
 12655 ;; Hardware stack levels required when called:    6
 12656 ;; This function calls:
 12657 ;;		_USBStdFeatureReqHandler
 12658 ;;		_USBStdGetDscHandler
 12659 ;;		_USBStdGetStatusHandler
 12660 ;;		_USBStdSetCfgHandler
 12661 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12662 ;; This function is called by:
 12663 ;;		_USBCtrlTrfSetupHandler
 12664 ;; This function uses a non-reentrant model
 12665 ;;
 12666                           
 12667                           	psect	text62
 12668  001E68                     __ptext62:
 12669                           	opt stack 0
 12670  001E68                     _USBCheckStdRequest:
 12671                           	opt stack 15
 12672                           
 12673                           ;usb_device.c: 2691: if(SetupPkt.RequestType != (0x00>>5)) return;
 12674                           
 12675                           ;incstack = 0
 12676  001E68  0104               	movlb	4	; () banked
 12677  001E6A  3930               	swapf	48,w,b	;volatile
 12678  001E6C  32E8               	rrcf	wreg,f,c
 12679  001E6E  0B03               	andlw	3
 12680  001E70  0900               	iorlw	0
 12681  001E72  A4D8               	btfss	status,2,c
 12682  001E74  0012               	return	
 12683  001E76  D050               	goto	i2l4752
 12684  001E78                     i2l731:
 12685                           
 12686                           ; BSR set to: 4
 12687                           ;usb_device.c: 2696: inPipes[0].info.bits.busy = 1;
 12688  001E78  0100               	movlb	0	; () banked
 12689  001E7A  8F75               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 12690                           
 12691                           ; BSR set to: 0
 12692                           ;usb_device.c: 2697: USBDeviceState = ADR_PENDING_STATE;
 12693  001E7C  0E08               	movlw	8
 12694  001E7E  0100               	movlb	0	; () banked
 12695  001E80  6F9F               	movwf	_USBDeviceState& (0+255),b	;volatile
 12696                           
 12697                           ;usb_device.c: 2699: break;
 12698  001E82  0012               	return	
 12699  001E84                     i2l4722:
 12700                           
 12701                           ;usb_device.c: 2701: USBStdGetDscHandler();
 12702  001E84  ECD3  F00B         	call	_USBStdGetDscHandler	;wreg free
 12703                           
 12704                           ;usb_device.c: 2702: break;
 12705  001E88  0012               	return	
 12706  001E8A                     i2l4724:
 12707                           
 12708                           ;usb_device.c: 2704: USBStdSetCfgHandler();
 12709  001E8A  ECAE  F00F         	call	_USBStdSetCfgHandler	;wreg free
 12710                           
 12711                           ;usb_device.c: 2705: break;
 12712  001E8E  0012               	return	
 12713  001E90                     i2l4726:
 12714                           
 12715                           ;usb_device.c: 2707: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 12716  001E90  0E2B               	movlw	low _USBActiveConfiguration
 12717  001E92  0100               	movlb	0	; () banked
 12718  001E94  6F72               	movwf	_inPipes& (0+255),b	;volatile
 12719  001E96  0E00               	movlw	high _USBActiveConfiguration
 12720  001E98  0100               	movlb	0	; () banked
 12721  001E9A  6F73               	movwf	(_inPipes+1)& (0+255),b	;volatile
 12722                           
 12723                           ; BSR set to: 0
 12724                           ;usb_device.c: 2708: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12725  001E9C  0100               	movlb	0	; () banked
 12726  001E9E  8175               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 12727                           
 12728                           ; BSR set to: 0
 12729                           ;usb_device.c: 2709: inPipes[0].wCount.v[0] = 1;
 12730  001EA0  0E01               	movlw	1
 12731  001EA2  0100               	movlb	0	; () banked
 12732  001EA4  6F76               	movwf	(_inPipes+4)& (0+255),b	;volatile
 12733                           
 12734                           ; BSR set to: 0
 12735                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
 12736  001EA6  0100               	movlb	0	; () banked
 12737  001EA8  8F75               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 12738                           
 12739                           ;usb_device.c: 2711: break;
 12740  001EAA  0012               	return	
 12741  001EAC                     i2l4734:
 12742                           
 12743                           ;usb_device.c: 2713: USBStdGetStatusHandler();
 12744  001EAC  EC5E  F015         	call	_USBStdGetStatusHandler	;wreg free
 12745                           
 12746                           ;usb_device.c: 2714: break;
 12747  001EB0  0012               	return	
 12748  001EB2                     i2l4736:
 12749                           
 12750                           ;usb_device.c: 2716: case 3:
 12751                           ;usb_device.c: 2717: USBStdFeatureReqHandler();
 12752  001EB2  EC4B  F004         	call	_USBStdFeatureReqHandler	;wreg free
 12753                           
 12754                           ;usb_device.c: 2718: break;
 12755  001EB6  0012               	return	
 12756  001EB8                     i2l4738:
 12757                           
 12758                           ;usb_device.c: 2720: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 12759  001EB8  0104               	movlb	4	; () banked
 12760  001EBA  5134               	movf	52,w,b	;volatile
 12761  001EBC  0D01               	mullw	1
 12762  001EBE  0E29               	movlw	low _USBAlternateInterface
 12763  001EC0  24F3               	addwf	prodl,w,c
 12764  001EC2  0100               	movlb	0	; () banked
 12765  001EC4  6F72               	movwf	_inPipes& (0+255),b	;volatile
 12766  001EC6  0E00               	movlw	high _USBAlternateInterface
 12767  001EC8  20F4               	addwfc	prodh,w,c
 12768  001ECA  0100               	movlb	0	; () banked
 12769  001ECC  6F73               	movwf	(_inPipes+1)& (0+255),b	;volatile
 12770                           
 12771                           ; BSR set to: 0
 12772                           ;usb_device.c: 2721: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12773  001ECE  0100               	movlb	0	; () banked
 12774  001ED0  8175               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 12775                           
 12776                           ; BSR set to: 0
 12777                           ;usb_device.c: 2722: inPipes[0].wCount.v[0] = 1;
 12778  001ED2  0E01               	movlw	1
 12779  001ED4  0100               	movlb	0	; () banked
 12780  001ED6  6F76               	movwf	(_inPipes+4)& (0+255),b	;volatile
 12781                           
 12782                           ; BSR set to: 0
 12783                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
 12784  001ED8  0100               	movlb	0	; () banked
 12785  001EDA  8F75               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 12786                           
 12787                           ;usb_device.c: 2724: break;
 12788  001EDC  0012               	return	
 12789  001EDE                     i2l740:
 12790                           
 12791                           ; BSR set to: 4
 12792                           ;usb_device.c: 2726: inPipes[0].info.bits.busy = 1;
 12793  001EDE  0100               	movlb	0	; () banked
 12794  001EE0  8F75               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 12795                           
 12796                           ; BSR set to: 0
 12797                           ;usb_device.c: 2727: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 12798  001EE2  0104               	movlb	4	; () banked
 12799  001EE4  5134               	movf	52,w,b	;volatile
 12800  001EE6  0D01               	mullw	1
 12801  001EE8  0E29               	movlw	low _USBAlternateInterface
 12802  001EEA  24F3               	addwf	prodl,w,c
 12803  001EEC  6ED9               	movwf	fsr2l,c
 12804  001EEE  0E00               	movlw	high _USBAlternateInterface
 12805  001EF0  20F4               	addwfc	prodh,w,c
 12806  001EF2  6EDA               	movwf	fsr2h,c
 12807  001EF4  C432 FFDF          	movff	1074,indf2	;volatile
 12808                           
 12809                           ;usb_device.c: 2728: break;
 12810  001EF8  0012               	return	
 12811  001EFA                     i2l4748:
 12812                           
 12813                           ; BSR set to: 4
 12814                           ;usb_device.c: 2730: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 12815  001EFA  0E00               	movlw	0
 12816  001EFC  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12817  001EFE  0E02               	movlw	2
 12818  001F00  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12819  001F02  0E00               	movlw	0
 12820  001F04  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12821  001F06  0E00               	movlw	0
 12822  001F08  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12823  001F0A  0E00               	movlw	0
 12824  001F0C  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12825  001F0E  0E00               	movlw	0
 12826  001F10  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12827  001F12  EC4E  F019         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12828                           
 12829                           ;usb_device.c: 2735: }
 12830                           
 12831                           ;usb_device.c: 2734: break;
 12832                           
 12833                           ;usb_device.c: 2733: default:
 12834                           
 12835                           ;usb_device.c: 2732: case 12:
 12836                           
 12837                           ;usb_device.c: 2731: break;
 12838  001F16  0012               	return	
 12839  001F18                     i2l4752:
 12840  001F18  0104               	movlb	4	; () banked
 12841  001F1A  5131               	movf	49,w,b	;volatile
 12842                           
 12843                           ; Switch size 1, requested type "space"
 12844                           ; Number of cases is 11, Range of values is 0 to 12
 12845                           ; switch strategies available:
 12846                           ; Name         Instructions Cycles
 12847                           ; simple_byte           34    18 (average)
 12848                           ;	Chosen strategy is simple_byte
 12849  001F1C  0A00               	xorlw	0	; case 0
 12850  001F1E  B4D8               	btfsc	status,2,c
 12851  001F20  D7C5               	goto	i2l4734
 12852  001F22  0A01               	xorlw	1	; case 1
 12853  001F24  B4D8               	btfsc	status,2,c
 12854  001F26  D7C5               	goto	i2l4736
 12855  001F28  0A02               	xorlw	2	; case 3
 12856  001F2A  B4D8               	btfsc	status,2,c
 12857  001F2C  D7C2               	goto	i2l4736
 12858  001F2E  0A06               	xorlw	6	; case 5
 12859  001F30  B4D8               	btfsc	status,2,c
 12860  001F32  D7A2               	goto	i2l731
 12861  001F34  0A03               	xorlw	3	; case 6
 12862  001F36  B4D8               	btfsc	status,2,c
 12863  001F38  D7A5               	goto	i2l4722
 12864  001F3A  0A01               	xorlw	1	; case 7
 12865  001F3C  B4D8               	btfsc	status,2,c
 12866  001F3E  D7DD               	goto	i2l4748
 12867  001F40  0A0F               	xorlw	15	; case 8
 12868  001F42  B4D8               	btfsc	status,2,c
 12869  001F44  D7A5               	goto	i2l4726
 12870  001F46  0A01               	xorlw	1	; case 9
 12871  001F48  B4D8               	btfsc	status,2,c
 12872  001F4A  D79F               	goto	i2l4724
 12873  001F4C  0A03               	xorlw	3	; case 10
 12874  001F4E  B4D8               	btfsc	status,2,c
 12875  001F50  D7B3               	goto	i2l4738
 12876  001F52  0A01               	xorlw	1	; case 11
 12877  001F54  B4D8               	btfsc	status,2,c
 12878  001F56  D7C3               	goto	i2l740
 12879  001F58  0A07               	xorlw	7	; case 12
 12880  001F5A  0012               	return	
 12881  001F5C                     __end_of_USBCheckStdRequest:
 12882                           	opt stack 0
 12883                           pclatu	equ	0xFFB
 12884                           pclath	equ	0xFFA
 12885                           tblptru	equ	0xFF8
 12886                           tblptrh	equ	0xFF7
 12887                           tblptrl	equ	0xFF6
 12888                           tablat	equ	0xFF5
 12889                           prodh	equ	0xFF4
 12890                           prodl	equ	0xFF3
 12891                           intcon	equ	0xFF2
 12892                           postinc0	equ	0xFEE
 12893                           fsr0h	equ	0xFEA
 12894                           fsr0l	equ	0xFE9
 12895                           wreg	equ	0xFE8
 12896                           indf1	equ	0xFE7
 12897                           postdec1	equ	0xFE5
 12898                           fsr1h	equ	0xFE2
 12899                           fsr1l	equ	0xFE1
 12900                           indf2	equ	0xFDF
 12901                           postinc2	equ	0xFDE
 12902                           postdec2	equ	0xFDD
 12903                           plusw2	equ	0xFDB
 12904                           fsr2h	equ	0xFDA
 12905                           fsr2l	equ	0xFD9
 12906                           status	equ	0xFD8
 12907                           
 12908 ;; *************** function _USBStdSetCfgHandler *****************
 12909 ;; Defined at:
 12910 ;;		line 1968 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_d
      +evice.c"
 12911 ;; Parameters:    Size  Location     Type
 12912 ;;		None
 12913 ;; Auto vars:     Size  Location     Type
 12914 ;;  i               1   20[COMRAM] unsigned char 
 12915 ;; Return value:  Size  Location     Type
 12916 ;;		None               void
 12917 ;; Registers used:
 12918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12919 ;; Tracked objects:
 12920 ;;		On entry : 0/0
 12921 ;;		On exit  : 0/0
 12922 ;;		Unchanged: 0/0
 12923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12924 ;;      Params:         0       0       0       0       0       0       0       0       0
 12925 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12926 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12927 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12928 ;;Total ram usage:        1 bytes
 12929 ;; Hardware stack levels used:    1
 12930 ;; Hardware stack levels required when called:    5
 12931 ;; This function calls:
 12932 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12933 ;;		i2_memset
 12934 ;; This function is called by:
 12935 ;;		_USBCheckStdRequest
 12936 ;; This function uses a non-reentrant model
 12937 ;;
 12938                           
 12939                           	psect	text63
 12940  001F5C                     __ptext63:
 12941                           	opt stack 0
 12942  001F5C                     _USBStdSetCfgHandler:
 12943                           	opt stack 15
 12944                           
 12945                           ;usb_device.c: 1970: uint8_t i;
 12946                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
 12947                           
 12948                           ;incstack = 0
 12949  001F5C  0100               	movlb	0	; () banked
 12950  001F5E  8F75               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 12951                           
 12952                           ; BSR set to: 0
 12953                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
 12954  001F60  0E71               	movlw	113
 12955  001F62  6E2D               	movwf	i2memset@p1,c
 12956  001F64  0E0F               	movlw	15
 12957  001F66  6E2E               	movwf	i2memset@p1+1,c
 12958  001F68  0E00               	movlw	0
 12959  001F6A  6E30               	movwf	i2memset@c+1,c
 12960  001F6C  0E00               	movlw	0
 12961  001F6E  6E2F               	movwf	i2memset@c,c
 12962  001F70  0E00               	movlw	0
 12963  001F72  6E32               	movwf	i2memset@n+1,c
 12964  001F74  0E02               	movlw	2
 12965  001F76  6E31               	movwf	i2memset@n,c
 12966  001F78  EC36  F01B         	call	i2_memset	;wreg free
 12967                           
 12968                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 12969  001F7C  0E00               	movlw	0
 12970  001F7E  6E2D               	movwf	i2memset@p1,c
 12971  001F80  0E04               	movlw	4
 12972  001F82  6E2E               	movwf	i2memset@p1+1,c
 12973  001F84  0E00               	movlw	0
 12974  001F86  6E30               	movwf	i2memset@c+1,c
 12975  001F88  0E00               	movlw	0
 12976  001F8A  6E2F               	movwf	i2memset@c,c
 12977  001F8C  0E00               	movlw	0
 12978  001F8E  6E32               	movwf	i2memset@n+1,c
 12979  001F90  0E30               	movlw	48
 12980  001F92  6E31               	movwf	i2memset@n,c
 12981  001F94  EC36  F01B         	call	i2_memset	;wreg free
 12982                           
 12983                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
 12984  001F98  8C6D               	bsf	3949,6,c	;volatile
 12985                           
 12986                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
 12987  001F9A  0E00               	movlw	0
 12988  001F9C  6E41               	movwf	USBStdSetCfgHandler@i,c
 12989  001F9E                     i2l4370:
 12990  001F9E  0E02               	movlw	2
 12991  001FA0  6441               	cpfsgt	USBStdSetCfgHandler@i,c
 12992  001FA2  D001               	goto	i2l4374
 12993  001FA4  D016               	goto	i2l4380
 12994  001FA6                     i2l4374:
 12995                           
 12996                           ;usb_device.c: 1988: {
 12997                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
 12998  001FA6  5041               	movf	USBStdSetCfgHandler@i,w,c
 12999  001FA8  0D01               	mullw	1
 13000  001FAA  0E8B               	movlw	low _ep_data_in
 13001  001FAC  24F3               	addwf	prodl,w,c
 13002  001FAE  6ED9               	movwf	fsr2l,c
 13003  001FB0  0E00               	movlw	high _ep_data_in
 13004  001FB2  20F4               	addwfc	prodh,w,c
 13005  001FB4  6EDA               	movwf	fsr2h,c
 13006  001FB6  0E00               	movlw	0
 13007  001FB8  6EDF               	movwf	indf2,c
 13008                           
 13009                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
 13010  001FBA  5041               	movf	USBStdSetCfgHandler@i,w,c
 13011  001FBC  0D01               	mullw	1
 13012  001FBE  0E8E               	movlw	low _ep_data_out
 13013  001FC0  24F3               	addwf	prodl,w,c
 13014  001FC2  6ED9               	movwf	fsr2l,c
 13015  001FC4  0E00               	movlw	high _ep_data_out
 13016  001FC6  20F4               	addwfc	prodh,w,c
 13017  001FC8  6EDA               	movwf	fsr2h,c
 13018  001FCA  0E00               	movlw	0
 13019  001FCC  6EDF               	movwf	indf2,c
 13020  001FCE  2A41               	incf	USBStdSetCfgHandler@i,f,c
 13021  001FD0  D7E6               	goto	i2l4370
 13022  001FD2                     i2l4380:
 13023                           
 13024                           ;usb_device.c: 1991: }
 13025                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
 13026  001FD2  0E29               	movlw	low _USBAlternateInterface
 13027  001FD4  6E2D               	movwf	i2memset@p1,c
 13028  001FD6  0E00               	movlw	high _USBAlternateInterface
 13029  001FD8  6E2E               	movwf	i2memset@p1+1,c
 13030  001FDA  0E00               	movlw	0
 13031  001FDC  6E30               	movwf	i2memset@c+1,c
 13032  001FDE  0E00               	movlw	0
 13033  001FE0  6E2F               	movwf	i2memset@c,c
 13034  001FE2  0E00               	movlw	0
 13035  001FE4  6E32               	movwf	i2memset@n+1,c
 13036  001FE6  0E02               	movlw	2
 13037  001FE8  6E31               	movwf	i2memset@n,c
 13038  001FEA  EC36  F01B         	call	i2_memset	;wreg free
 13039                           
 13040                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
 13041  001FEE  9C6D               	bcf	3949,6,c	;volatile
 13042                           
 13043                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13044  001FF0  0E08               	movlw	8
 13045  001FF2  0100               	movlb	0	; () banked
 13046  001FF4  6F78               	movwf	_pBDTEntryIn& (0+255),b
 13047  001FF6  0E04               	movlw	4
 13048  001FF8  0100               	movlb	0	; () banked
 13049  001FFA  6F79               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13050                           
 13051                           ; BSR set to: 0
 13052                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 13053  001FFC  0E00               	movlw	0
 13054  001FFE  6E07               	movwf	_pBDTEntryEP0OutCurrent,c
 13055  002000  0E04               	movlw	4
 13056  002002  6E08               	movwf	_pBDTEntryEP0OutCurrent+1,c
 13057                           
 13058                           ; BSR set to: 0
 13059                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 13060  002004  C007  F009         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 13061  002008  C008  F00A         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 13062                           
 13063                           ; BSR set to: 0
 13064                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 13065  00200C  C432 F02B          	movff	1074,_USBActiveConfiguration	;volatile
 13066                           
 13067                           ; BSR set to: 0
 13068                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
 13069  002010  502B               	movf	_USBActiveConfiguration,w,c	;volatile
 13070  002012  A4D8               	btfss	status,2,c
 13071  002014  D004               	goto	i2l4396
 13072                           
 13073                           ; BSR set to: 0
 13074                           ;usb_device.c: 2010: {
 13075                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
 13076  002016  0E10               	movlw	16
 13077  002018  0100               	movlb	0	; () banked
 13078  00201A  6F9F               	movwf	_USBDeviceState& (0+255),b	;volatile
 13079                           
 13080                           ;usb_device.c: 2013: }
 13081  00201C  0012               	return	
 13082  00201E                     i2l4396:
 13083                           
 13084                           ; BSR set to: 0
 13085                           ;usb_device.c: 2014: else
 13086                           ;usb_device.c: 2015: {
 13087                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 13088  00201E  0E00               	movlw	0
 13089  002020  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13090  002022  0E01               	movlw	1
 13091  002024  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13092  002026  0E2B               	movlw	low _USBActiveConfiguration
 13093  002028  6E3B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13094  00202A  0E00               	movlw	high _USBActiveConfiguration
 13095  00202C  6E3C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13096  00202E  0E00               	movlw	0
 13097  002030  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13098  002032  0E01               	movlw	1
 13099  002034  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13100  002036  EC4E  F019         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13101                           
 13102                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
 13103  00203A  0E20               	movlw	32
 13104  00203C  0100               	movlb	0	; () banked
 13105  00203E  6F9F               	movwf	_USBDeviceState& (0+255),b	;volatile
 13106  002040  0012               	return	
 13107  002042                     __end_of_USBStdSetCfgHandler:
 13108                           	opt stack 0
 13109                           pclatu	equ	0xFFB
 13110                           pclath	equ	0xFFA
 13111                           tblptru	equ	0xFF8
 13112                           tblptrh	equ	0xFF7
 13113                           tblptrl	equ	0xFF6
 13114                           tablat	equ	0xFF5
 13115                           prodh	equ	0xFF4
 13116                           prodl	equ	0xFF3
 13117                           intcon	equ	0xFF2
 13118                           postinc0	equ	0xFEE
 13119                           fsr0h	equ	0xFEA
 13120                           fsr0l	equ	0xFE9
 13121                           wreg	equ	0xFE8
 13122                           indf1	equ	0xFE7
 13123                           postdec1	equ	0xFE5
 13124                           fsr1h	equ	0xFE2
 13125                           fsr1l	equ	0xFE1
 13126                           indf2	equ	0xFDF
 13127                           postinc2	equ	0xFDE
 13128                           postdec2	equ	0xFDD
 13129                           plusw2	equ	0xFDB
 13130                           fsr2h	equ	0xFDA
 13131                           fsr2l	equ	0xFD9
 13132                           status	equ	0xFD8
 13133                           
 13134 ;; *************** function i2_memset *****************
 13135 ;; Defined at:
 13136 ;;		line 8 in file "D:\Info\Soft\MPLABX\v1.35\sources\common\memset.c"
 13137 ;; Parameters:    Size  Location     Type
 13138 ;;  p1              2    0[COMRAM] PTR void 
 13139 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13140 ;;  c               2    2[COMRAM] int 
 13141 ;;  n               2    4[COMRAM] unsigned int 
 13142 ;; Auto vars:     Size  Location     Type
 13143 ;;  memset          2    6[COMRAM] PTR unsigned char 
 13144 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13145 ;; Return value:  Size  Location     Type
 13146 ;;                  2    0[COMRAM] PTR void 
 13147 ;; Registers used:
 13148 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13149 ;; Tracked objects:
 13150 ;;		On entry : 0/0
 13151 ;;		On exit  : 0/0
 13152 ;;		Unchanged: 0/0
 13153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13154 ;;      Params:         6       0       0       0       0       0       0       0       0
 13155 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13156 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13157 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13158 ;;Total ram usage:        8 bytes
 13159 ;; Hardware stack levels used:    1
 13160 ;; This function calls:
 13161 ;;		Nothing
 13162 ;; This function is called by:
 13163 ;;		_USBStdSetCfgHandler
 13164 ;;		i2_USBDeviceInit
 13165 ;; This function uses a non-reentrant model
 13166 ;;
 13167                           
 13168                           	psect	text64
 13169  00366C                     __ptext64:
 13170                           	opt stack 0
 13171  00366C                     i2_memset:
 13172                           	opt stack 22
 13173                           
 13174                           ; BSR set to: 0
 13175                           ;incstack = 0
 13176  00366C  C02D  F033         	movff	i2memset@p1,i2memset@p
 13177  003670  C02E  F034         	movff	i2memset@p1+1,i2memset@p+1
 13178  003674  D008               	goto	i2l4304
 13179  003676                     i2l4300:
 13180  003676  C033  FFD9         	movff	i2memset@p,fsr2l
 13181  00367A  C034  FFDA         	movff	i2memset@p+1,fsr2h
 13182  00367E  C02F  FFDF         	movff	i2memset@c,indf2
 13183  003682  4A33               	infsnz	i2memset@p,f,c
 13184  003684  2A34               	incf	i2memset@p+1,f,c
 13185  003686                     i2l4304:
 13186  003686  0631               	decf	i2memset@n,f,c
 13187  003688  A0D8               	btfss	status,0,c
 13188  00368A  0632               	decf	i2memset@n+1,f,c
 13189  00368C  2831               	incf	i2memset@n,w,c
 13190  00368E  E1F3               	bnz	i2l4300
 13191  003690  2832               	incf	i2memset@n+1,w,c
 13192  003692  B4D8               	btfsc	status,2,c
 13193  003694  0012               	return	
 13194  003696  D7EF               	goto	i2l4300
 13195  003698                     __end_ofi2_memset:
 13196                           	opt stack 0
 13197                           pclatu	equ	0xFFB
 13198                           pclath	equ	0xFFA
 13199                           tblptru	equ	0xFF8
 13200                           tblptrh	equ	0xFF7
 13201                           tblptrl	equ	0xFF6
 13202                           tablat	equ	0xFF5
 13203                           prodh	equ	0xFF4
 13204                           prodl	equ	0xFF3
 13205                           intcon	equ	0xFF2
 13206                           postinc0	equ	0xFEE
 13207                           fsr0h	equ	0xFEA
 13208                           fsr0l	equ	0xFE9
 13209                           wreg	equ	0xFE8
 13210                           indf1	equ	0xFE7
 13211                           postdec1	equ	0xFE5
 13212                           fsr1h	equ	0xFE2
 13213                           fsr1l	equ	0xFE1
 13214                           indf2	equ	0xFDF
 13215                           postinc2	equ	0xFDE
 13216                           postdec2	equ	0xFDD
 13217                           plusw2	equ	0xFDB
 13218                           fsr2h	equ	0xFDA
 13219                           fsr2l	equ	0xFD9
 13220                           status	equ	0xFD8
 13221                           
 13222 ;; *************** function _USBStdGetStatusHandler *****************
 13223 ;; Defined at:
 13224 ;;		line 2129 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_d
      +evice.c"
 13225 ;; Parameters:    Size  Location     Type
 13226 ;;		None
 13227 ;; Auto vars:     Size  Location     Type
 13228 ;;  p               2    1[COMRAM] PTR struct __BDT
 13229 ;;		 -> NULL(0), BDT(48), 
 13230 ;; Return value:  Size  Location     Type
 13231 ;;		None               void
 13232 ;; Registers used:
 13233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13234 ;; Tracked objects:
 13235 ;;		On entry : 0/0
 13236 ;;		On exit  : 0/0
 13237 ;;		Unchanged: 0/0
 13238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13239 ;;      Params:         0       0       0       0       0       0       0       0       0
 13240 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13241 ;;      Temps:          1       0       0       0       0       0       0       0       0
 13242 ;;      Totals:         3       0       0       0       0       0       0       0       0
 13243 ;;Total ram usage:        3 bytes
 13244 ;; Hardware stack levels used:    1
 13245 ;; This function calls:
 13246 ;;		Nothing
 13247 ;; This function is called by:
 13248 ;;		_USBCheckStdRequest
 13249 ;; This function uses a non-reentrant model
 13250 ;;
 13251                           
 13252                           	psect	text65
 13253  002ABC                     __ptext65:
 13254                           	opt stack 0
 13255  002ABC                     _USBStdGetStatusHandler:
 13256                           	opt stack 20
 13257                           
 13258                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
 13259                           
 13260                           ;incstack = 0
 13261  002ABC  0E00               	movlw	0
 13262  002ABE  0104               	movlb	4	; () banked
 13263  002AC0  6F38               	movwf	56,b	;volatile
 13264                           
 13265                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
 13266  002AC2  0E00               	movlw	0
 13267  002AC4  0104               	movlb	4	; () banked
 13268  002AC6  6F39               	movwf	57,b	;volatile
 13269                           
 13270                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
 13271  002AC8  D03B               	goto	i2l4452
 13272  002ACA                     i2l667:
 13273                           
 13274                           ; BSR set to: 4
 13275                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
 13276  002ACA  0100               	movlb	0	; () banked
 13277  002ACC  8F75               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 13278                           
 13279                           ;usb_device.c: 2145: }
 13280                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
 13281                           
 13282                           ; BSR set to: 4
 13283                           
 13284                           ; BSR set to: 0
 13285                           ;usb_device.c: 2143: {
 13286                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
 13287                           
 13288                           ;usb_device.c: 2142: if(0 == 1)
 13289  002ACE  040E               	decf	_RemoteWakeup,w,c	;volatile
 13290  002AD0  A4D8               	btfss	status,2,c
 13291  002AD2  D042               	goto	i2l670
 13292                           
 13293                           ;usb_device.c: 2148: {
 13294                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
 13295  002AD4  0104               	movlb	4	; () banked
 13296  002AD6  8338               	bsf	56,1,b	;volatile
 13297                           
 13298                           ; BSR set to: 4
 13299                           ;usb_device.c: 2150: }
 13300                           ;usb_device.c: 2151: break;
 13301  002AD8  D03F               	goto	i2l670
 13302  002ADA                     i2l671:
 13303                           
 13304                           ; BSR set to: 4
 13305                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
 13306  002ADA  0100               	movlb	0	; () banked
 13307  002ADC  8F75               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 13308                           
 13309                           ;usb_device.c: 2154: break;
 13310  002ADE  D03C               	goto	i2l670
 13311  002AE0                     i2l672:
 13312                           
 13313                           ; BSR set to: 4
 13314                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
 13315  002AE0  0100               	movlb	0	; () banked
 13316  002AE2  8F75               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 13317                           
 13318                           ;usb_device.c: 2160: {
 13319                           ;usb_device.c: 2161: BDT_ENTRY *p;
 13320                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
 13321  002AE4  0104               	movlb	4	; () banked
 13322  002AE6  BF34               	btfsc	52,7,b	;volatile
 13323  002AE8  D00B               	goto	i2l4442
 13324                           
 13325                           ; BSR set to: 4
 13326                           ;usb_device.c: 2164: {
 13327                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 13328  002AEA  0104               	movlb	4	; () banked
 13329  002AEC  5134               	movf	52,w,b	;volatile
 13330  002AEE  0B0F               	andlw	15
 13331  002AF0  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 13332  002AF2  502D               	movf	??_USBStdGetStatusHandler,w,c
 13333  002AF4  0D02               	mullw	2
 13334  002AF6  0E7E               	movlw	low _pBDTEntryOut
 13335  002AF8  24F3               	addwf	prodl,w,c
 13336  002AFA  6ED9               	movwf	fsr2l,c
 13337  002AFC  0E00               	movlw	high _pBDTEntryOut
 13338  002AFE  D00A               	goto	L46
 13339  002B00                     i2l4442:
 13340                           
 13341                           ; BSR set to: 4
 13342                           ;usb_device.c: 2167: else
 13343                           ;usb_device.c: 2168: {
 13344                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 13345  002B00  0104               	movlb	4	; () banked
 13346  002B02  5134               	movf	52,w,b	;volatile
 13347  002B04  0B0F               	andlw	15
 13348  002B06  6E2D               	movwf	??_USBStdGetStatusHandler& (0+255),c
 13349  002B08  502D               	movf	??_USBStdGetStatusHandler,w,c
 13350  002B0A  0D02               	mullw	2
 13351  002B0C  0E78               	movlw	low _pBDTEntryIn
 13352  002B0E  24F3               	addwf	prodl,w,c
 13353  002B10  6ED9               	movwf	fsr2l,c
 13354  002B12  0E00               	movlw	high _pBDTEntryIn
 13355  002B14                     L46:
 13356  002B14  20F4               	addwfc	prodh,w,c
 13357  002B16  6EDA               	movwf	fsr2h,c
 13358  002B18  CFDE F02E          	movff	postinc2,USBStdGetStatusHandler@p
 13359  002B1C  CFDD F02F          	movff	postdec2,USBStdGetStatusHandler@p+1
 13360                           
 13361                           ; BSR set to: 4
 13362                           ;usb_device.c: 2170: }
 13363                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 13364                           
 13365                           ; BSR set to: 4
 13366  002B20  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 13367  002B24  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 13368  002B28  AEDF               	btfss	indf2,7,c
 13369  002B2A  D016               	goto	i2l670
 13370                           
 13371                           ; BSR set to: 4
 13372  002B2C  C02E  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 13373  002B30  C02F  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 13374  002B34  A4DF               	btfss	indf2,2,c
 13375  002B36  D010               	goto	i2l670
 13376                           
 13377                           ; BSR set to: 4
 13378                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
 13379  002B38  0E01               	movlw	1
 13380  002B3A  0104               	movlb	4	; () banked
 13381  002B3C  6F38               	movwf	56,b	;volatile
 13382                           
 13383                           ; BSR set to: 4
 13384                           ;usb_device.c: 2175: }
 13385                           ;usb_device.c: 2176: }
 13386                           
 13387                           ; BSR set to: 4
 13388                           ;usb_device.c: 2174: break;
 13389  002B3E  D00C               	goto	i2l670
 13390  002B40                     i2l4452:
 13391                           
 13392                           ; BSR set to: 4
 13393  002B40  0104               	movlb	4	; () banked
 13394  002B42  5130               	movf	48,w,b	;volatile
 13395  002B44  0B1F               	andlw	31
 13396                           
 13397                           ; Switch size 1, requested type "space"
 13398                           ; Number of cases is 3, Range of values is 0 to 2
 13399                           ; switch strategies available:
 13400                           ; Name         Instructions Cycles
 13401                           ; simple_byte           10     6 (average)
 13402                           ;	Chosen strategy is simple_byte
 13403  002B46  0A00               	xorlw	0	; case 0
 13404  002B48  B4D8               	btfsc	status,2,c
 13405  002B4A  D7BF               	goto	i2l667
 13406  002B4C  0A01               	xorlw	1	; case 1
 13407  002B4E  B4D8               	btfsc	status,2,c
 13408  002B50  D7C4               	goto	i2l671
 13409  002B52  0A03               	xorlw	3	; case 2
 13410  002B54  B4D8               	btfsc	status,2,c
 13411  002B56  D7C4               	goto	i2l672
 13412  002B58                     i2l670:
 13413                           
 13414                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
 13415  002B58  0100               	movlb	0	; () banked
 13416  002B5A  AF75               	btfss	(_inPipes+3)& (0+255),7,b	;volatile
 13417  002B5C  0012               	return	
 13418                           
 13419                           ; BSR set to: 0
 13420                           ;usb_device.c: 2179: {
 13421                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 13422  002B5E  0E38               	movlw	56
 13423  002B60  0100               	movlb	0	; () banked
 13424  002B62  6F72               	movwf	_inPipes& (0+255),b	;volatile
 13425  002B64  0E04               	movlw	4
 13426  002B66  0100               	movlb	0	; () banked
 13427  002B68  6F73               	movwf	(_inPipes+1)& (0+255),b	;volatile
 13428                           
 13429                           ; BSR set to: 0
 13430                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13431  002B6A  0100               	movlb	0	; () banked
 13432  002B6C  8175               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 13433                           
 13434                           ; BSR set to: 0
 13435                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
 13436  002B6E  0E02               	movlw	2
 13437  002B70  0100               	movlb	0	; () banked
 13438  002B72  6F76               	movwf	(_inPipes+4)& (0+255),b	;volatile
 13439  002B74  0012               	return	
 13440  002B76                     __end_of_USBStdGetStatusHandler:
 13441                           	opt stack 0
 13442                           pclatu	equ	0xFFB
 13443                           pclath	equ	0xFFA
 13444                           tblptru	equ	0xFF8
 13445                           tblptrh	equ	0xFF7
 13446                           tblptrl	equ	0xFF6
 13447                           tablat	equ	0xFF5
 13448                           prodh	equ	0xFF4
 13449                           prodl	equ	0xFF3
 13450                           intcon	equ	0xFF2
 13451                           postinc0	equ	0xFEE
 13452                           fsr0h	equ	0xFEA
 13453                           fsr0l	equ	0xFE9
 13454                           wreg	equ	0xFE8
 13455                           indf1	equ	0xFE7
 13456                           postdec1	equ	0xFE5
 13457                           fsr1h	equ	0xFE2
 13458                           fsr1l	equ	0xFE1
 13459                           indf2	equ	0xFDF
 13460                           postinc2	equ	0xFDE
 13461                           postdec2	equ	0xFDD
 13462                           plusw2	equ	0xFDB
 13463                           fsr2h	equ	0xFDA
 13464                           fsr2l	equ	0xFD9
 13465                           status	equ	0xFD8
 13466                           
 13467 ;; *************** function _USBStdGetDscHandler *****************
 13468 ;; Defined at:
 13469 ;;		line 2043 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_d
      +evice.c"
 13470 ;; Parameters:    Size  Location     Type
 13471 ;;		None
 13472 ;; Auto vars:     Size  Location     Type
 13473 ;;		None
 13474 ;; Return value:  Size  Location     Type
 13475 ;;		None               void
 13476 ;; Registers used:
 13477 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 13478 ;; Tracked objects:
 13479 ;;		On entry : 0/0
 13480 ;;		On exit  : 0/0
 13481 ;;		Unchanged: 0/0
 13482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13483 ;;      Params:         0       0       0       0       0       0       0       0       0
 13484 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13485 ;;      Temps:          2       0       0       0       0       0       0       0       0
 13486 ;;      Totals:         2       0       0       0       0       0       0       0       0
 13487 ;;Total ram usage:        2 bytes
 13488 ;; Hardware stack levels used:    1
 13489 ;; This function calls:
 13490 ;;		Nothing
 13491 ;; This function is called by:
 13492 ;;		_USBCheckStdRequest
 13493 ;; This function uses a non-reentrant model
 13494 ;;
 13495                           
 13496                           	psect	text66
 13497  0017A6                     __ptext66:
 13498                           	opt stack 0
 13499  0017A6                     _USBStdGetDscHandler:
 13500                           	opt stack 20
 13501                           
 13502                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
 13503                           
 13504                           ; BSR set to: 0
 13505                           ;incstack = 0
 13506  0017A6  0E80               	movlw	128
 13507  0017A8  0104               	movlb	4	; () banked
 13508  0017AA  1930               	xorwf	48,w,b	;volatile
 13509  0017AC  A4D8               	btfss	status,2,c
 13510  0017AE  0012               	return	
 13511                           
 13512                           ; BSR set to: 4
 13513                           ;usb_device.c: 2046: {
 13514                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 13515  0017B0  0EC0               	movlw	192
 13516  0017B2  0100               	movlb	0	; () banked
 13517  0017B4  6F75               	movwf	(_inPipes+3)& (0+255),b	;volatile
 13518                           
 13519                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
 13520  0017B6  D089               	goto	i2l4430
 13521  0017B8                     i2l4404:
 13522                           
 13523                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 13524  0017B8  0E32               	movlw	low _device_dsc
 13525  0017BA  0100               	movlb	0	; () banked
 13526  0017BC  6F72               	movwf	_inPipes& (0+255),b	;volatile
 13527  0017BE  0E7E               	movlw	high _device_dsc
 13528  0017C0  0100               	movlb	0	; () banked
 13529  0017C2  6F73               	movwf	(_inPipes+1)& (0+255),b	;volatile
 13530                           
 13531                           ; BSR set to: 0
 13532                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
 13533  0017C4  0E00               	movlw	0
 13534  0017C6  0100               	movlb	0	; () banked
 13535  0017C8  6F77               	movwf	(_inPipes+5)& (0+255),b	;volatile
 13536  0017CA  0E12               	movlw	18
 13537  0017CC  6F76               	movwf	(_inPipes+4)& (0+255),b	;volatile
 13538                           
 13539                           ;usb_device.c: 2058: break;
 13540  0017CE  0012               	return	
 13541  0017D0                     i2l4408:
 13542                           
 13543                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
 13544  0017D0  0104               	movlb	4	; () banked
 13545  0017D2  5132               	movf	50,w,b	;volatile
 13546  0017D4  A4D8               	btfss	status,2,c
 13547  0017D6  D044               	goto	i2l4416
 13548                           
 13549                           ; BSR set to: 4
 13550                           ;usb_device.c: 2064: {
 13551                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 13552  0017D8  0104               	movlb	4	; () banked
 13553  0017DA  5132               	movf	50,w,b	;volatile
 13554  0017DC  0D02               	mullw	2
 13555  0017DE  0E67               	movlw	low _USB_CD_Ptr
 13556  0017E0  24F3               	addwf	prodl,w,c
 13557  0017E2  6EF6               	movwf	tblptrl,c
 13558  0017E4  0E7D               	movlw	high _USB_CD_Ptr
 13559  0017E6  20F4               	addwfc	prodh,w,c
 13560  0017E8  6EF7               	movwf	tblptrh,c
 13561  0017EA                     	if	0	;There are less than 3 active tblptr bytes
 13562  0017EA                     	endif
 13563  0017EA  0009               	tblrd		*+
 13564  0017EC  CFF5 F072          	movff	tablat,_inPipes	;volatile
 13565  0017F0  000A               	tblrd		*-
 13566  0017F2  CFF5 F073          	movff	tablat,_inPipes+1	;volatile
 13567                           
 13568                           ; BSR set to: 4
 13569                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 13570  0017F6  0E02               	movlw	2
 13571  0017F8  0100               	movlb	0	; () banked
 13572  0017FA  2572               	addwf	_inPipes& (0+255),w,b	;volatile
 13573  0017FC  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 13574  0017FE  0E00               	movlw	0
 13575  001800  0100               	movlb	0	; () banked
 13576  001802  2173               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 13577  001804  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 13578  001806  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 13579  00180A  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 13580  00180E  6AF8               	clrf	tblptru,c
 13581  001810  0E07               	movlw	(high __ramtop+-1)
 13582  001812  64F7               	cpfsgt	tblptrh,c
 13583  001814  D003               	bra	i2u352_47
 13584  001816  0008               	tblrd		*
 13585  001818  50F5               	movf	tablat,w,c
 13586  00181A  D005               	bra	i2u352_40
 13587  00181C                     i2u352_47:
 13588  00181C  CFF6 FFE1          	movff	tblptrl,fsr1l
 13589  001820  CFF7 FFE2          	movff	tblptrh,fsr1h
 13590  001824  50E7               	movf	indf1,w,c
 13591  001826                     i2u352_40:
 13592  001826  0100               	movlb	0	; () banked
 13593  001828  6F76               	movwf	(_inPipes+4)& (0+255),b	;volatile
 13594                           
 13595                           ; BSR set to: 0
 13596                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 13597  00182A  0E03               	movlw	3
 13598  00182C  0100               	movlb	0	; () banked
 13599  00182E  2572               	addwf	_inPipes& (0+255),w,b	;volatile
 13600  001830  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 13601  001832  0E00               	movlw	0
 13602  001834  0100               	movlb	0	; () banked
 13603  001836  2173               	addwfc	(_inPipes+1)& (0+255),w,b	;volatile
 13604  001838  6E2E               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 13605  00183A  C02D  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 13606  00183E  C02E  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 13607  001842  6AF8               	clrf	tblptru,c
 13608  001844  0E07               	movlw	(high __ramtop+-1)
 13609  001846  64F7               	cpfsgt	tblptrh,c
 13610  001848  D003               	bra	i2u353_47
 13611  00184A  0008               	tblrd		*
 13612  00184C  50F5               	movf	tablat,w,c
 13613  00184E  D005               	bra	i2u353_40
 13614  001850                     i2u353_47:
 13615  001850  CFF6 FFE1          	movff	tblptrl,fsr1l
 13616  001854  CFF7 FFE2          	movff	tblptrh,fsr1h
 13617  001858  50E7               	movf	indf1,w,c
 13618  00185A                     i2u353_40:
 13619  00185A  0100               	movlb	0	; () banked
 13620  00185C  6F77               	movwf	(_inPipes+5)& (0+255),b	;volatile
 13621                           
 13622                           ;usb_device.c: 2076: }
 13623  00185E  0012               	return	
 13624  001860                     i2l4416:
 13625                           
 13626                           ;usb_device.c: 2077: else
 13627                           ;usb_device.c: 2078: {
 13628                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
 13629  001860  0E00               	movlw	0
 13630  001862  0100               	movlb	0	; () banked
 13631  001864  6F75               	movwf	(_inPipes+3)& (0+255),b	;volatile
 13632                           
 13633                           ; BSR set to: 0
 13634                           ;usb_device.c: 2080: }
 13635                           ;usb_device.c: 2081: break;
 13636  001866  0012               	return	
 13637  001868                     i2l4418:
 13638                           
 13639                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
 13640  001868  0E03               	movlw	3
 13641  00186A  0104               	movlb	4	; () banked
 13642  00186C  6132               	cpfslt	50,b	;volatile
 13643  00186E  D025               	goto	i2l4424
 13644                           
 13645                           ; BSR set to: 4
 13646                           ;usb_device.c: 2087: {
 13647                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 13648  001870  0104               	movlb	4	; () banked
 13649  001872  5132               	movf	50,w,b	;volatile
 13650  001874  0D02               	mullw	2
 13651  001876  0E61               	movlw	low _USB_SD_Ptr
 13652  001878  24F3               	addwf	prodl,w,c
 13653  00187A  6EF6               	movwf	tblptrl,c
 13654  00187C  0E7D               	movlw	high _USB_SD_Ptr
 13655  00187E  20F4               	addwfc	prodh,w,c
 13656  001880  6EF7               	movwf	tblptrh,c
 13657  001882                     	if	0	;There are less than 3 active tblptr bytes
 13658  001882                     	endif
 13659  001882  0009               	tblrd		*+
 13660  001884  CFF5 F072          	movff	tablat,_inPipes	;volatile
 13661  001888  000A               	tblrd		*-
 13662  00188A  CFF5 F073          	movff	tablat,_inPipes+1	;volatile
 13663                           
 13664                           ; BSR set to: 4
 13665                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 13666  00188E  C072  FFF6         	movff	_inPipes,tblptrl	;volatile
 13667  001892  C073  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 13668  001896  6AF8               	clrf	tblptru,c
 13669  001898  0E07               	movlw	(high __ramtop+-1)
 13670  00189A  64F7               	cpfsgt	tblptrh,c
 13671  00189C  D003               	bra	i2u355_47
 13672  00189E  0008               	tblrd		*
 13673  0018A0  50F5               	movf	tablat,w,c
 13674  0018A2  D005               	bra	i2u355_40
 13675  0018A4                     i2u355_47:
 13676  0018A4  CFF6 FFE1          	movff	tblptrl,fsr1l
 13677  0018A8  CFF7 FFE2          	movff	tblptrh,fsr1h
 13678  0018AC  50E7               	movf	indf1,w,c
 13679  0018AE                     i2u355_40:
 13680  0018AE  6E2D               	movwf	??_USBStdGetDscHandler& (0+255),c
 13681  0018B0  502D               	movf	??_USBStdGetDscHandler,w,c
 13682  0018B2  0100               	movlb	0	; () banked
 13683  0018B4  6F76               	movwf	(_inPipes+4)& (0+255),b	;volatile
 13684  0018B6  6B77               	clrf	(_inPipes+5)& (0+255),b	;volatile
 13685                           
 13686                           ;usb_device.c: 2092: }
 13687  0018B8  0012               	return	
 13688  0018BA                     i2l4424:
 13689                           
 13690                           ;usb_device.c: 2102: else
 13691                           ;usb_device.c: 2103: {
 13692                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
 13693  0018BA  0E00               	movlw	0
 13694  0018BC  0100               	movlb	0	; () banked
 13695  0018BE  6F75               	movwf	(_inPipes+3)& (0+255),b	;volatile
 13696                           
 13697                           ; BSR set to: 0
 13698                           ;usb_device.c: 2105: }
 13699                           ;usb_device.c: 2106: break;
 13700  0018C0  0012               	return	
 13701  0018C2                     i2l4426:
 13702                           
 13703                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
 13704  0018C2  0E00               	movlw	0
 13705  0018C4  0100               	movlb	0	; () banked
 13706  0018C6  6F75               	movwf	(_inPipes+3)& (0+255),b	;volatile
 13707                           
 13708                           ; BSR set to: 0
 13709                           ;usb_device.c: 2110: }
 13710                           
 13711                           ;usb_device.c: 2109: break;
 13712  0018C8  0012               	return	
 13713  0018CA                     i2l4430:
 13714                           
 13715                           ; BSR set to: 0
 13716  0018CA  0104               	movlb	4	; () banked
 13717  0018CC  5133               	movf	51,w,b	;volatile
 13718                           
 13719                           ; Switch size 1, requested type "space"
 13720                           ; Number of cases is 3, Range of values is 1 to 3
 13721                           ; switch strategies available:
 13722                           ; Name         Instructions Cycles
 13723                           ; simple_byte           10     6 (average)
 13724                           ;	Chosen strategy is simple_byte
 13725  0018CE  0A01               	xorlw	1	; case 1
 13726  0018D0  B4D8               	btfsc	status,2,c
 13727  0018D2  D772               	goto	i2l4404
 13728  0018D4  0A03               	xorlw	3	; case 2
 13729  0018D6  B4D8               	btfsc	status,2,c
 13730  0018D8  D77B               	goto	i2l4408
 13731  0018DA  0A01               	xorlw	1	; case 3
 13732  0018DC  B4D8               	btfsc	status,2,c
 13733  0018DE  D7C4               	goto	i2l4418
 13734  0018E0  D7F0               	goto	i2l4426
 13735  0018E2                     __end_of_USBStdGetDscHandler:
 13736                           	opt stack 0
 13737                           pclatu	equ	0xFFB
 13738                           pclath	equ	0xFFA
 13739                           tblptru	equ	0xFF8
 13740                           tblptrh	equ	0xFF7
 13741                           tblptrl	equ	0xFF6
 13742                           tablat	equ	0xFF5
 13743                           prodh	equ	0xFF4
 13744                           prodl	equ	0xFF3
 13745                           intcon	equ	0xFF2
 13746                           postinc0	equ	0xFEE
 13747                           fsr0h	equ	0xFEA
 13748                           fsr0l	equ	0xFE9
 13749                           wreg	equ	0xFE8
 13750                           indf1	equ	0xFE7
 13751                           postdec1	equ	0xFE5
 13752                           fsr1h	equ	0xFE2
 13753                           fsr1l	equ	0xFE1
 13754                           indf2	equ	0xFDF
 13755                           postinc2	equ	0xFDE
 13756                           postdec2	equ	0xFDD
 13757                           plusw2	equ	0xFDB
 13758                           fsr2h	equ	0xFDA
 13759                           fsr2l	equ	0xFD9
 13760                           status	equ	0xFD8
 13761                           
 13762 ;; *************** function _USBStdFeatureReqHandler *****************
 13763 ;; Defined at:
 13764 ;;		line 2757 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_d
      +evice.c"
 13765 ;; Parameters:    Size  Location     Type
 13766 ;;		None
 13767 ;; Auto vars:     Size  Location     Type
 13768 ;;  p               2   24[COMRAM] PTR struct __BDT
 13769 ;;		 -> NULL(0), BDT(48), 
 13770 ;;  pUEP            2   21[COMRAM] PTR unsigned char 
 13771 ;;		 -> UEP0(1), 
 13772 ;;  current_ep_d    1   23[COMRAM] struct .
 13773 ;; Return value:  Size  Location     Type
 13774 ;;		None               void
 13775 ;; Registers used:
 13776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13777 ;; Tracked objects:
 13778 ;;		On entry : 0/0
 13779 ;;		On exit  : 0/0
 13780 ;;		Unchanged: 0/0
 13781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13782 ;;      Params:         0       0       0       0       0       0       0       0       0
 13783 ;;      Locals:         5       0       0       0       0       0       0       0       0
 13784 ;;      Temps:          1       0       0       0       0       0       0       0       0
 13785 ;;      Totals:         6       0       0       0       0       0       0       0       0
 13786 ;;Total ram usage:        6 bytes
 13787 ;; Hardware stack levels used:    1
 13788 ;; Hardware stack levels required when called:    5
 13789 ;; This function calls:
 13790 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13791 ;; This function is called by:
 13792 ;;		_USBCheckStdRequest
 13793 ;; This function uses a non-reentrant model
 13794 ;;
 13795                           
 13796                           	psect	text67
 13797  000896                     __ptext67:
 13798                           	opt stack 0
 13799  000896                     _USBStdFeatureReqHandler:
 13800                           	opt stack 15
 13801                           
 13802                           ;usb_device.c: 2759: BDT_ENTRY *p;
 13803                           ;usb_device.c: 2760: EP_STATUS current_ep_data;
 13804                           ;usb_device.c: 2764: unsigned char* pUEP;
 13805                           ;usb_device.c: 2802: if((SetupPkt.bFeature == 1)&&
 13806                           ;usb_device.c: 2803: (SetupPkt.Recipient == (0x00)))
 13807                           
 13808                           ;incstack = 0
 13809  000896  0104               	movlb	4	; () banked
 13810  000898  0532               	decf	50,w,b	;volatile
 13811  00089A  A4D8               	btfss	status,2,c
 13812  00089C  D011               	goto	i2l746
 13813                           
 13814                           ; BSR set to: 4
 13815  00089E  0104               	movlb	4	; () banked
 13816  0008A0  5130               	movf	48,w,b	;volatile
 13817  0008A2  0B1F               	andlw	31
 13818  0008A4  0900               	iorlw	0
 13819  0008A6  A4D8               	btfss	status,2,c
 13820  0008A8  D00B               	goto	i2l746
 13821                           
 13822                           ; BSR set to: 4
 13823                           ;usb_device.c: 2804: {
 13824                           ;usb_device.c: 2805: inPipes[0].info.bits.busy = 1;
 13825  0008AA  0100               	movlb	0	; () banked
 13826  0008AC  8F75               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 13827                           
 13828                           ; BSR set to: 0
 13829                           ;usb_device.c: 2806: if(SetupPkt.bRequest == 3)
 13830  0008AE  0E03               	movlw	3
 13831  0008B0  0104               	movlb	4	; () banked
 13832  0008B2  1931               	xorwf	49,w,b	;volatile
 13833  0008B4  A4D8               	btfss	status,2,c
 13834  0008B6  D002               	goto	i2l4470
 13835                           
 13836                           ; BSR set to: 4
 13837                           ;usb_device.c: 2807: RemoteWakeup = 1;
 13838  0008B8  0E01               	movlw	1
 13839  0008BA  D001               	goto	L47
 13840  0008BC                     i2l4470:
 13841                           
 13842                           ; BSR set to: 4
 13843                           ;usb_device.c: 2808: else
 13844                           ;usb_device.c: 2809: RemoteWakeup = 0;
 13845  0008BC  0E00               	movlw	0
 13846  0008BE                     L47:
 13847  0008BE  6E0E               	movwf	_RemoteWakeup,c	;volatile
 13848  0008C0                     i2l746:
 13849                           
 13850                           ; BSR set to: 4
 13851                           ;usb_device.c: 2810: }
 13852                           ;usb_device.c: 2813: if((SetupPkt.bFeature == 0)&&
 13853                           ;usb_device.c: 2814: (SetupPkt.Recipient == (0x02))&&
 13854                           ;usb_device.c: 2815: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 13855                           ;usb_device.c: 2816: (USBDeviceState == CONFIGURED_STATE))
 13856  0008C0  0104               	movlb	4	; () banked
 13857  0008C2  5132               	movf	50,w,b	;volatile
 13858  0008C4  A4D8               	btfss	status,2,c
 13859  0008C6  0012               	return	
 13860                           
 13861                           ; BSR set to: 4
 13862  0008C8  0104               	movlb	4	; () banked
 13863  0008CA  5130               	movf	48,w,b	;volatile
 13864  0008CC  0B1F               	andlw	31
 13865  0008CE  0A02               	xorlw	2
 13866  0008D0  A4D8               	btfss	status,2,c
 13867  0008D2  0012               	return	
 13868                           
 13869                           ; BSR set to: 4
 13870  0008D4  0104               	movlb	4	; () banked
 13871  0008D6  5134               	movf	52,w,b	;volatile
 13872  0008D8  0B0F               	andlw	15
 13873  0008DA  0900               	iorlw	0
 13874  0008DC  B4D8               	btfsc	status,2,c
 13875  0008DE  0012               	return	
 13876                           
 13877                           ; BSR set to: 4
 13878  0008E0  0104               	movlb	4	; () banked
 13879  0008E2  5134               	movf	52,w,b	;volatile
 13880  0008E4  0B0F               	andlw	15
 13881  0008E6  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 13882  0008E8  0E03               	movlw	3
 13883  0008EA  6041               	cpfslt	??_USBStdFeatureReqHandler,c
 13884  0008EC  0012               	return	
 13885                           
 13886                           ; BSR set to: 4
 13887  0008EE  0E20               	movlw	32
 13888  0008F0  0100               	movlb	0	; () banked
 13889  0008F2  199F               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 13890  0008F4  A4D8               	btfss	status,2,c
 13891  0008F6  0012               	return	
 13892                           
 13893                           ; BSR set to: 0
 13894                           ;usb_device.c: 2817: {
 13895                           ;usb_device.c: 2820: inPipes[0].info.bits.busy = 1;
 13896  0008F8  0100               	movlb	0	; () banked
 13897  0008FA  8F75               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 13898                           
 13899                           ;usb_device.c: 2823: if(SetupPkt.EPDir == 0)
 13900  0008FC  0104               	movlb	4	; () banked
 13901  0008FE  BF34               	btfsc	52,7,b	;volatile
 13902  000900  D01B               	goto	i2l4484
 13903                           
 13904                           ; BSR set to: 4
 13905                           ;usb_device.c: 2824: {
 13906                           ;usb_device.c: 2825: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 13907  000902  0104               	movlb	4	; () banked
 13908  000904  5134               	movf	52,w,b	;volatile
 13909  000906  0B0F               	andlw	15
 13910  000908  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 13911  00090A  5041               	movf	??_USBStdFeatureReqHandler,w,c
 13912  00090C  0D02               	mullw	2
 13913  00090E  0E7E               	movlw	low _pBDTEntryOut
 13914  000910  24F3               	addwf	prodl,w,c
 13915  000912  6ED9               	movwf	fsr2l,c
 13916  000914  0E00               	movlw	high _pBDTEntryOut
 13917  000916  20F4               	addwfc	prodh,w,c
 13918  000918  6EDA               	movwf	fsr2h,c
 13919  00091A  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 13920  00091E  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 13921                           
 13922                           ;usb_device.c: 2826: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 13923  000922  0104               	movlb	4	; () banked
 13924  000924  5134               	movf	52,w,b	;volatile
 13925  000926  0B0F               	andlw	15
 13926  000928  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 13927  00092A  5041               	movf	??_USBStdFeatureReqHandler,w,c
 13928  00092C  0D01               	mullw	1
 13929  00092E  0E8E               	movlw	low _ep_data_out
 13930  000930  24F3               	addwf	prodl,w,c
 13931  000932  6ED9               	movwf	fsr2l,c
 13932  000934  0E00               	movlw	high _ep_data_out
 13933  000936  D01A               	goto	L48
 13934  000938                     i2l4484:
 13935                           
 13936                           ; BSR set to: 4
 13937                           ;usb_device.c: 2828: else
 13938                           ;usb_device.c: 2829: {
 13939                           ;usb_device.c: 2830: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 13940  000938  0104               	movlb	4	; () banked
 13941  00093A  5134               	movf	52,w,b	;volatile
 13942  00093C  0B0F               	andlw	15
 13943  00093E  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 13944  000940  5041               	movf	??_USBStdFeatureReqHandler,w,c
 13945  000942  0D02               	mullw	2
 13946  000944  0E78               	movlw	low _pBDTEntryIn
 13947  000946  24F3               	addwf	prodl,w,c
 13948  000948  6ED9               	movwf	fsr2l,c
 13949  00094A  0E00               	movlw	high _pBDTEntryIn
 13950  00094C  20F4               	addwfc	prodh,w,c
 13951  00094E  6EDA               	movwf	fsr2h,c
 13952  000950  CFDE F045          	movff	postinc2,USBStdFeatureReqHandler@p
 13953  000954  CFDD F046          	movff	postdec2,USBStdFeatureReqHandler@p+1
 13954                           
 13955                           ;usb_device.c: 2831: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 13956  000958  0104               	movlb	4	; () banked
 13957  00095A  5134               	movf	52,w,b	;volatile
 13958  00095C  0B0F               	andlw	15
 13959  00095E  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 13960  000960  5041               	movf	??_USBStdFeatureReqHandler,w,c
 13961  000962  0D01               	mullw	1
 13962  000964  0E8B               	movlw	low _ep_data_in
 13963  000966  24F3               	addwf	prodl,w,c
 13964  000968  6ED9               	movwf	fsr2l,c
 13965  00096A  0E00               	movlw	high _ep_data_in
 13966  00096C                     L48:
 13967  00096C  20F4               	addwfc	prodh,w,c
 13968  00096E  6EDA               	movwf	fsr2h,c
 13969  000970  50DF               	movf	indf2,w,c
 13970  000972  6E44               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 13971                           
 13972                           ; BSR set to: 4
 13973                           ;usb_device.c: 2832: }
 13974                           ;usb_device.c: 2838: if(current_ep_data.bits.ping_pong_state == 0)
 13975                           
 13976                           ; BSR set to: 4
 13977  000974  B044               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 13978  000976  D002               	goto	i2l4490
 13979                           
 13980                           ; BSR set to: 4
 13981                           ;usb_device.c: 2839: {
 13982                           ;usb_device.c: 2840: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 13983  000978  9445               	bcf	USBStdFeatureReqHandler@p,2,c
 13984                           
 13985                           ;usb_device.c: 2841: }
 13986  00097A  D001               	goto	i2l4492
 13987  00097C                     i2l4490:
 13988                           
 13989                           ; BSR set to: 4
 13990                           ;usb_device.c: 2842: else
 13991                           ;usb_device.c: 2843: {
 13992                           ;usb_device.c: 2844: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 13993  00097C  8445               	bsf	USBStdFeatureReqHandler@p,2,c
 13994  00097E                     i2l4492:
 13995                           
 13996                           ; BSR set to: 4
 13997                           ;usb_device.c: 2845: }
 13998                           ;usb_device.c: 2850: if(SetupPkt.EPDir == 0)
 13999  00097E  0104               	movlb	4	; () banked
 14000  000980  BF34               	btfsc	52,7,b	;volatile
 14001  000982  D00B               	goto	i2l4496
 14002                           
 14003                           ; BSR set to: 4
 14004                           ;usb_device.c: 2851: {
 14005                           ;usb_device.c: 2852: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 14006  000984  0104               	movlb	4	; () banked
 14007  000986  5134               	movf	52,w,b	;volatile
 14008  000988  0B0F               	andlw	15
 14009  00098A  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14010  00098C  5041               	movf	??_USBStdFeatureReqHandler,w,c
 14011  00098E  0D02               	mullw	2
 14012  000990  0E7E               	movlw	low _pBDTEntryOut
 14013  000992  24F3               	addwf	prodl,w,c
 14014  000994  6ED9               	movwf	fsr2l,c
 14015  000996  0E00               	movlw	high _pBDTEntryOut
 14016  000998  D00A               	goto	L49
 14017  00099A                     i2l4496:
 14018                           
 14019                           ; BSR set to: 4
 14020                           ;usb_device.c: 2854: else
 14021                           ;usb_device.c: 2855: {
 14022                           ;usb_device.c: 2856: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 14023  00099A  0104               	movlb	4	; () banked
 14024  00099C  5134               	movf	52,w,b	;volatile
 14025  00099E  0B0F               	andlw	15
 14026  0009A0  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14027  0009A2  5041               	movf	??_USBStdFeatureReqHandler,w,c
 14028  0009A4  0D02               	mullw	2
 14029  0009A6  0E78               	movlw	low _pBDTEntryIn
 14030  0009A8  24F3               	addwf	prodl,w,c
 14031  0009AA  6ED9               	movwf	fsr2l,c
 14032  0009AC  0E00               	movlw	high _pBDTEntryIn
 14033  0009AE                     L49:
 14034  0009AE  20F4               	addwfc	prodh,w,c
 14035  0009B0  6EDA               	movwf	fsr2h,c
 14036  0009B2  C045  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 14037  0009B6  C046  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 14038                           
 14039                           ; BSR set to: 4
 14040                           ;usb_device.c: 2857: }
 14041                           ;usb_device.c: 2860: if(SetupPkt.bRequest == 3)
 14042                           
 14043                           ; BSR set to: 4
 14044  0009BA  0E03               	movlw	3
 14045  0009BC  0104               	movlb	4	; () banked
 14046  0009BE  1931               	xorwf	49,w,b	;volatile
 14047  0009C0  A4D8               	btfss	status,2,c
 14048  0009C2  D02F               	goto	i2l4512
 14049                           
 14050                           ; BSR set to: 4
 14051                           ;usb_device.c: 2861: {
 14052                           ;usb_device.c: 2862: if(p->STAT.UOWN == 1)
 14053  0009C4  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14054  0009C8  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14055  0009CC  AEDF               	btfss	indf2,7,c
 14056  0009CE  D01C               	goto	i2l4508
 14057                           
 14058                           ; BSR set to: 4
 14059                           ;usb_device.c: 2863: {
 14060                           ;usb_device.c: 2866: if(SetupPkt.EPDir == 0)
 14061  0009D0  0104               	movlb	4	; () banked
 14062  0009D2  BF34               	btfsc	52,7,b	;volatile
 14063  0009D4  D00B               	goto	i2l4506
 14064                           
 14065                           ; BSR set to: 4
 14066                           ;usb_device.c: 2867: {
 14067                           ;usb_device.c: 2868: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 14068  0009D6  0104               	movlb	4	; () banked
 14069  0009D8  5134               	movf	52,w,b	;volatile
 14070  0009DA  0B0F               	andlw	15
 14071  0009DC  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14072  0009DE  5041               	movf	??_USBStdFeatureReqHandler,w,c
 14073  0009E0  0D01               	mullw	1
 14074  0009E2  0E8E               	movlw	low _ep_data_out
 14075  0009E4  24F3               	addwf	prodl,w,c
 14076  0009E6  6ED9               	movwf	fsr2l,c
 14077  0009E8  0E00               	movlw	high _ep_data_out
 14078  0009EA  D00A               	goto	L50
 14079  0009EC                     i2l4506:
 14080                           
 14081                           ;usb_device.c: 2870: else
 14082                           ;usb_device.c: 2871: {
 14083                           ;usb_device.c: 2872: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 14084  0009EC  0104               	movlb	4	; () banked
 14085  0009EE  5134               	movf	52,w,b	;volatile
 14086  0009F0  0B0F               	andlw	15
 14087  0009F2  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14088  0009F4  5041               	movf	??_USBStdFeatureReqHandler,w,c
 14089  0009F6  0D01               	mullw	1
 14090  0009F8  0E8B               	movlw	low _ep_data_in
 14091  0009FA  24F3               	addwf	prodl,w,c
 14092  0009FC  6ED9               	movwf	fsr2l,c
 14093  0009FE  0E00               	movlw	high _ep_data_in
 14094  000A00                     L50:
 14095  000A00  20F4               	addwfc	prodh,w,c
 14096  000A02  6EDA               	movwf	fsr2h,c
 14097  000A04  0100               	movlb	0	; () banked
 14098  000A06  82DF               	bsf	indf2,1,c
 14099  000A08                     i2l4508:
 14100                           
 14101                           ;usb_device.c: 2873: }
 14102                           ;usb_device.c: 2874: }
 14103                           ;usb_device.c: 2877: p->STAT.Val |= 0x04;
 14104  000A08  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14105  000A0C  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14106  000A10  0E00               	movlw	0
 14107  000A12  84DB               	bsf	plusw2,2,c
 14108                           
 14109                           ;usb_device.c: 2878: p->STAT.Val |= 0x80;
 14110  000A14  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14111  000A18  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14112  000A1C  0E00               	movlw	0
 14113  000A1E  8EDB               	bsf	plusw2,7,c
 14114                           
 14115                           ;usb_device.c: 2879: }
 14116  000A20  0012               	return	
 14117  000A22                     i2l4512:
 14118                           
 14119                           ;usb_device.c: 2880: else
 14120                           ;usb_device.c: 2881: {
 14121                           ;usb_device.c: 2885: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 14122  000A22  0E04               	movlw	4
 14123  000A24  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 14124                           
 14125                           ;usb_device.c: 2887: if(p->STAT.UOWN == 1)
 14126  000A26  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14127  000A2A  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14128  000A2E  AEDF               	btfss	indf2,7,c
 14129  000A30  D01B               	goto	i2l4522
 14130                           
 14131                           ;usb_device.c: 2888: {
 14132                           ;usb_device.c: 2891: p->STAT.Val &= (~0x80);
 14133  000A32  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14134  000A36  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14135  000A3A  0E7F               	movlw	127
 14136  000A3C  16DF               	andwf	indf2,f,c
 14137                           
 14138                           ;usb_device.c: 2892: p->STAT.Val |= 0x40;
 14139  000A3E  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14140  000A42  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14141  000A46  0E00               	movlw	0
 14142  000A48  8CDB               	bsf	plusw2,6,c
 14143                           
 14144                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 14145  000A4A  0E00               	movlw	0
 14146  000A4C  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14147  000A4E  0E05               	movlw	5
 14148  000A50  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14149  000A52  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 14150  000A56  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 14151  000A5A  0E00               	movlw	0
 14152  000A5C  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14153  000A5E  0E02               	movlw	2
 14154  000A60  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14155  000A62  EC4E  F019         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14156                           
 14157                           ;usb_device.c: 2894: }
 14158  000A66  D006               	goto	i2l4524
 14159  000A68                     i2l4522:
 14160                           
 14161                           ;usb_device.c: 2895: else
 14162                           ;usb_device.c: 2896: {
 14163                           ;usb_device.c: 2898: p->STAT.Val |= 0x40;
 14164  000A68  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14165  000A6C  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14166  000A70  0E00               	movlw	0
 14167  000A72  8CDB               	bsf	plusw2,6,c
 14168  000A74                     i2l4524:
 14169                           
 14170                           ;usb_device.c: 2899: }
 14171                           ;usb_device.c: 2903: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 14172  000A74  0E04               	movlw	4
 14173  000A76  1A45               	xorwf	USBStdFeatureReqHandler@p,f,c
 14174                           
 14175                           ;usb_device.c: 2909: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 14176  000A78  B244               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 14177  000A7A  D006               	goto	i2l765
 14178  000A7C  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14179  000A80  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14180  000A84  AEDF               	btfss	indf2,7,c
 14181  000A86  D031               	goto	i2l4538
 14182  000A88                     i2l765:
 14183                           
 14184                           ;usb_device.c: 2910: {
 14185                           ;usb_device.c: 2911: if(SetupPkt.EPDir == 0)
 14186  000A88  0104               	movlb	4	; () banked
 14187  000A8A  BF34               	btfsc	52,7,b	;volatile
 14188  000A8C  D00B               	goto	i2l4532
 14189                           
 14190                           ; BSR set to: 4
 14191                           ;usb_device.c: 2912: {
 14192                           ;usb_device.c: 2913: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 14193  000A8E  0104               	movlb	4	; () banked
 14194  000A90  5134               	movf	52,w,b	;volatile
 14195  000A92  0B0F               	andlw	15
 14196  000A94  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14197  000A96  5041               	movf	??_USBStdFeatureReqHandler,w,c
 14198  000A98  0D01               	mullw	1
 14199  000A9A  0E8E               	movlw	low _ep_data_out
 14200  000A9C  24F3               	addwf	prodl,w,c
 14201  000A9E  6ED9               	movwf	fsr2l,c
 14202  000AA0  0E00               	movlw	high _ep_data_out
 14203  000AA2  D00A               	goto	L51
 14204  000AA4                     i2l4532:
 14205                           
 14206                           ;usb_device.c: 2915: else
 14207                           ;usb_device.c: 2916: {
 14208                           ;usb_device.c: 2917: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 14209  000AA4  0104               	movlb	4	; () banked
 14210  000AA6  5134               	movf	52,w,b	;volatile
 14211  000AA8  0B0F               	andlw	15
 14212  000AAA  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14213  000AAC  5041               	movf	??_USBStdFeatureReqHandler,w,c
 14214  000AAE  0D01               	mullw	1
 14215  000AB0  0E8B               	movlw	low _ep_data_in
 14216  000AB2  24F3               	addwf	prodl,w,c
 14217  000AB4  6ED9               	movwf	fsr2l,c
 14218  000AB6  0E00               	movlw	high _ep_data_in
 14219  000AB8                     L51:
 14220  000AB8  20F4               	addwfc	prodh,w,c
 14221  000ABA  6EDA               	movwf	fsr2h,c
 14222  000ABC  0100               	movlb	0	; () banked
 14223  000ABE  92DF               	bcf	indf2,1,c
 14224                           
 14225                           ; BSR set to: 0
 14226                           ;usb_device.c: 2918: }
 14227                           ;usb_device.c: 2920: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 14228                           
 14229                           ; BSR set to: 0
 14230  000AC0  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14231  000AC4  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14232  000AC8  0E3B               	movlw	59
 14233  000ACA  16DF               	andwf	indf2,f,c
 14234                           
 14235                           ; BSR set to: 0
 14236                           ;usb_device.c: 2923: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 14237  000ACC  0E00               	movlw	0
 14238  000ACE  6E3A               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14239  000AD0  0E05               	movlw	5
 14240  000AD2  6E39               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14241  000AD4  C045  F03B         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 14242  000AD8  C046  F03C         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 14243  000ADC  0E00               	movlw	0
 14244  000ADE  6E3E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14245  000AE0  0E02               	movlw	2
 14246  000AE2  6E3D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14247  000AE4  EC4E  F019         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14248                           
 14249                           ;usb_device.c: 2924: }
 14250  000AE8  D006               	goto	i2l4540
 14251  000AEA                     i2l4538:
 14252                           
 14253                           ;usb_device.c: 2925: else
 14254                           ;usb_device.c: 2926: {
 14255                           ;usb_device.c: 2928: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 14256  000AEA  C045  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14257  000AEE  C046  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14258  000AF2  0E3B               	movlw	59
 14259  000AF4  16DF               	andwf	indf2,f,c
 14260  000AF6                     i2l4540:
 14261                           
 14262                           ;usb_device.c: 2929: }
 14263                           ;usb_device.c: 2976: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 14264  000AF6  0104               	movlb	4	; () banked
 14265  000AF8  5134               	movf	52,w,b	;volatile
 14266  000AFA  0B0F               	andlw	15
 14267  000AFC  6E41               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14268  000AFE  5041               	movf	??_USBStdFeatureReqHandler,w,c
 14269  000B00  0D01               	mullw	1
 14270  000B02  0E70               	movlw	112
 14271  000B04  24F3               	addwf	prodl,w,c
 14272  000B06  6E42               	movwf	USBStdFeatureReqHandler@pUEP,c
 14273  000B08  0E0F               	movlw	15
 14274  000B0A  20F4               	addwfc	prodh,w,c
 14275  000B0C  6E43               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 14276                           
 14277                           ; BSR set to: 4
 14278                           ;usb_device.c: 2980: *pUEP &= ~0x0001;
 14279  000B0E  C042  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 14280  000B12  C043  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 14281  000B16  0EFE               	movlw	254
 14282  000B18  16DF               	andwf	indf2,f,c
 14283                           
 14284                           ; BSR set to: 4
 14285  000B1A  0012               	return	
 14286  000B1C                     __end_of_USBStdFeatureReqHandler:
 14287                           	opt stack 0
 14288                           pclatu	equ	0xFFB
 14289                           pclath	equ	0xFFA
 14290                           tblptru	equ	0xFF8
 14291                           tblptrh	equ	0xFF7
 14292                           tblptrl	equ	0xFF6
 14293                           tablat	equ	0xFF5
 14294                           prodh	equ	0xFF4
 14295                           prodl	equ	0xFF3
 14296                           intcon	equ	0xFF2
 14297                           postinc0	equ	0xFEE
 14298                           fsr0h	equ	0xFEA
 14299                           fsr0l	equ	0xFE9
 14300                           wreg	equ	0xFE8
 14301                           indf1	equ	0xFE7
 14302                           postdec1	equ	0xFE5
 14303                           fsr1h	equ	0xFE2
 14304                           fsr1l	equ	0xFE1
 14305                           indf2	equ	0xFDF
 14306                           postinc2	equ	0xFDE
 14307                           postdec2	equ	0xFDD
 14308                           plusw2	equ	0xFDB
 14309                           fsr2h	equ	0xFDA
 14310                           fsr2l	equ	0xFD9
 14311                           status	equ	0xFD8
 14312                           
 14313 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 14314 ;; Defined at:
 14315 ;;		line 54 in file "main.c"
 14316 ;; Parameters:    Size  Location     Type
 14317 ;;  event           2   12[COMRAM] enum E4867
 14318 ;;  pdata           2   14[COMRAM] PTR void 
 14319 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
 14320 ;;  size            2   16[COMRAM] unsigned int 
 14321 ;; Auto vars:     Size  Location     Type
 14322 ;;		None
 14323 ;; Return value:  Size  Location     Type
 14324 ;;                  1    wreg      unsigned char 
 14325 ;; Registers used:
 14326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14327 ;; Tracked objects:
 14328 ;;		On entry : 0/0
 14329 ;;		On exit  : 0/0
 14330 ;;		Unchanged: 0/0
 14331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14332 ;;      Params:         6       0       0       0       0       0       0       0       0
 14333 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14334 ;;      Temps:          2       0       0       0       0       0       0       0       0
 14335 ;;      Totals:         8       0       0       0       0       0       0       0       0
 14336 ;;Total ram usage:        8 bytes
 14337 ;; Hardware stack levels used:    1
 14338 ;; Hardware stack levels required when called:    4
 14339 ;; This function calls:
 14340 ;;		_APP_CustomCDCInitialize
 14341 ;;		_USBCheckCDCRequest
 14342 ;; This function is called by:
 14343 ;;		_USBDeviceTasks
 14344 ;;		_USBStdSetCfgHandler
 14345 ;;		_USBSuspend
 14346 ;;		_USBWakeFromSuspend
 14347 ;;		_USBCtrlTrfSetupHandler
 14348 ;;		_USBCheckStdRequest
 14349 ;;		_USBStdFeatureReqHandler
 14350 ;; This function uses a non-reentrant model
 14351 ;;
 14352                           
 14353                           	psect	text68
 14354  00329C                     __ptext68:
 14355                           	opt stack 0
 14356  00329C                     _USER_USB_CALLBACK_EVENT_HANDLER:
 14357                           	opt stack 19
 14358                           
 14359                           ;main.c: 56: switch(event)
 14360                           
 14361                           ;incstack = 0
 14362  00329C  D006               	goto	i2l4244
 14363  00329E                     i2l4238:
 14364                           
 14365                           ;main.c: 78: APP_CustomCDCInitialize();
 14366  00329E  ECE8  F01B         	call	_APP_CustomCDCInitialize	;wreg free
 14367                           
 14368                           ;main.c: 82: break;
 14369                           
 14370                           ;main.c: 80: case EVENT_SET_DESCRIPTOR:
 14371                           
 14372                           ;main.c: 79: break;
 14373  0032A2  0012               	return	
 14374  0032A4                     i2l4240:
 14375                           
 14376                           ;main.c: 87: USBCheckCDCRequest();
 14377  0032A4  EC3E  F012         	call	_USBCheckCDCRequest	;wreg free
 14378                           
 14379                           ;main.c: 103: }
 14380                           
 14381                           ;main.c: 102: break;
 14382                           
 14383                           ;main.c: 101: default:
 14384                           
 14385                           ;main.c: 100: break;
 14386                           
 14387                           ;main.c: 91: case EVENT_TRANSFER_TERMINATED:
 14388                           
 14389                           ;main.c: 90: break;
 14390                           
 14391                           ;main.c: 89: case EVENT_BUS_ERROR:
 14392                           
 14393                           ;main.c: 88: break;
 14394  0032A8  0012               	return	
 14395  0032AA                     i2l4244:
 14396  0032AA  C039  F03F         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 14397  0032AE  C03A  F040         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 14398                           
 14399                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 14400                           ; Switch size 1, requested type "space"
 14401                           ; Number of cases is 2, Range of values is 0 to 127
 14402                           ; switch strategies available:
 14403                           ; Name         Instructions Cycles
 14404                           ; simple_byte            7     4 (average)
 14405                           ;	Chosen strategy is simple_byte
 14406  0032B2  5040               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 14407  0032B4  0A00               	xorlw	0	; case 0
 14408  0032B6  B4D8               	btfsc	status,2,c
 14409  0032B8  D004               	goto	i2l7992
 14410  0032BA  0A7F               	xorlw	127	; case 127
 14411  0032BC  A4D8               	btfss	status,2,c
 14412  0032BE  0012               	return	
 14413  0032C0  D018               	goto	i2l7994
 14414  0032C2                     i2l7992:
 14415                           
 14416                           ; Switch size 1, requested type "space"
 14417                           ; Number of cases is 8, Range of values is 1 to 117
 14418                           ; switch strategies available:
 14419                           ; Name         Instructions Cycles
 14420                           ; simple_byte           25    13 (average)
 14421                           ;	Chosen strategy is simple_byte
 14422  0032C2  503F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 14423  0032C4  0A01               	xorlw	1	; case 1
 14424  0032C6  B4D8               	btfsc	status,2,c
 14425  0032C8  D7EA               	goto	i2l4238
 14426  0032CA  0A03               	xorlw	3	; case 2
 14427  0032CC  B4D8               	btfsc	status,2,c
 14428  0032CE  0012               	return	
 14429  0032D0  0A01               	xorlw	1	; case 3
 14430  0032D2  B4D8               	btfsc	status,2,c
 14431  0032D4  D7E7               	goto	i2l4240
 14432  0032D6  0A06               	xorlw	6	; case 5
 14433  0032D8  B4D8               	btfsc	status,2,c
 14434  0032DA  0012               	return	
 14435  0032DC  0A77               	xorlw	119	; case 114
 14436  0032DE  B4D8               	btfsc	status,2,c
 14437  0032E0  0012               	return	
 14438  0032E2  0A01               	xorlw	1	; case 115
 14439  0032E4  B4D8               	btfsc	status,2,c
 14440  0032E6  0012               	return	
 14441  0032E8  0A07               	xorlw	7	; case 116
 14442  0032EA  B4D8               	btfsc	status,2,c
 14443  0032EC  0012               	return	
 14444  0032EE  0A01               	xorlw	1	; case 117
 14445  0032F0  0012               	return	
 14446  0032F2                     i2l7994:
 14447                           
 14448                           ; Switch size 1, requested type "space"
 14449                           ; Number of cases is 1, Range of values is 255 to 255
 14450                           ; switch strategies available:
 14451                           ; Name         Instructions Cycles
 14452                           ; simple_byte            4     3 (average)
 14453                           ;	Chosen strategy is simple_byte
 14454  0032F2  503F               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 14455  0032F4  0AFF               	xorlw	255	; case 255
 14456  0032F6  0012               	return	
 14457  0032F8                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 14458                           	opt stack 0
 14459                           pclatu	equ	0xFFB
 14460                           pclath	equ	0xFFA
 14461                           tblptru	equ	0xFF8
 14462                           tblptrh	equ	0xFF7
 14463                           tblptrl	equ	0xFF6
 14464                           tablat	equ	0xFF5
 14465                           prodh	equ	0xFF4
 14466                           prodl	equ	0xFF3
 14467                           intcon	equ	0xFF2
 14468                           postinc0	equ	0xFEE
 14469                           fsr0h	equ	0xFEA
 14470                           fsr0l	equ	0xFE9
 14471                           wreg	equ	0xFE8
 14472                           indf1	equ	0xFE7
 14473                           postdec1	equ	0xFE5
 14474                           fsr1h	equ	0xFE2
 14475                           fsr1l	equ	0xFE1
 14476                           indf2	equ	0xFDF
 14477                           postinc2	equ	0xFDE
 14478                           postdec2	equ	0xFDD
 14479                           plusw2	equ	0xFDB
 14480                           fsr2h	equ	0xFDA
 14481                           fsr2l	equ	0xFD9
 14482                           status	equ	0xFD8
 14483                           
 14484 ;; *************** function _USBCheckCDCRequest *****************
 14485 ;; Defined at:
 14486 ;;		line 212 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_de
      +vice_cdc.c"
 14487 ;; Parameters:    Size  Location     Type
 14488 ;;		None
 14489 ;; Auto vars:     Size  Location     Type
 14490 ;;		None
 14491 ;; Return value:  Size  Location     Type
 14492 ;;		None               void
 14493 ;; Registers used:
 14494 ;;		wreg, status,2, status,0
 14495 ;; Tracked objects:
 14496 ;;		On entry : 0/0
 14497 ;;		On exit  : 0/0
 14498 ;;		Unchanged: 0/0
 14499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14500 ;;      Params:         0       0       0       0       0       0       0       0       0
 14501 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14502 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14503 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14504 ;;Total ram usage:        0 bytes
 14505 ;; Hardware stack levels used:    1
 14506 ;; This function calls:
 14507 ;;		Nothing
 14508 ;; This function is called by:
 14509 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14510 ;; This function uses a non-reentrant model
 14511 ;;
 14512                           
 14513                           	psect	text69
 14514  00247C                     __ptext69:
 14515                           	opt stack 0
 14516  00247C                     _USBCheckCDCRequest:
 14517                           	opt stack 22
 14518                           
 14519                           ;usb_device_cdc.c: 217: if(SetupPkt.Recipient != (0x01)) return;
 14520                           
 14521                           ;incstack = 0
 14522  00247C  0104               	movlb	4	; () banked
 14523  00247E  5130               	movf	48,w,b	;volatile
 14524  002480  0B1F               	andlw	31
 14525  002482  06E8               	decf	wreg,f,c
 14526  002484  A4D8               	btfss	status,2,c
 14527  002486  0012               	return	
 14528                           
 14529                           ; BSR set to: 4
 14530                           ;usb_device_cdc.c: 222: if(SetupPkt.RequestType != (0x20>>5)) return;
 14531                           
 14532                           ; BSR set to: 4
 14533                           
 14534                           ; BSR set to: 4
 14535  002488  0104               	movlb	4	; () banked
 14536  00248A  3930               	swapf	48,w,b	;volatile
 14537  00248C  32E8               	rrcf	wreg,f,c
 14538  00248E  0B03               	andlw	3
 14539  002490  06E8               	decf	wreg,f,c
 14540  002492  A4D8               	btfss	status,2,c
 14541  002494  0012               	return	
 14542                           
 14543                           ; BSR set to: 4
 14544                           ;usb_device_cdc.c: 228: if((SetupPkt.bIntfID != 0x0)&&
 14545                           ;usb_device_cdc.c: 229: (SetupPkt.bIntfID != 0x01)) return;
 14546                           
 14547                           ; BSR set to: 4
 14548                           
 14549                           ; BSR set to: 4
 14550  002496  0104               	movlb	4	; () banked
 14551  002498  5134               	movf	52,w,b	;volatile
 14552  00249A  B4D8               	btfsc	status,2,c
 14553  00249C  D045               	goto	i2l4234
 14554                           
 14555                           ; BSR set to: 4
 14556  00249E  0104               	movlb	4	; () banked
 14557  0024A0  0534               	decf	52,w,b	;volatile
 14558  0024A2  A4D8               	btfss	status,2,c
 14559  0024A4  0012               	return	
 14560  0024A6  D040               	goto	i2l4234
 14561  0024A8                     i2l4210:
 14562                           
 14563                           ; BSR set to: 4
 14564                           ;usb_device_cdc.c: 236: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 14565  0024A8  0E1A               	movlw	low _dummy_encapsulated_cmd_response
 14566  0024AA  0100               	movlb	0	; () banked
 14567  0024AC  6F72               	movwf	_inPipes& (0+255),b	;volatile
 14568  0024AE  0E00               	movlw	high _dummy_encapsulated_cmd_response
 14569  0024B0  0100               	movlb	0	; () banked
 14570  0024B2  6F73               	movwf	(_inPipes+1)& (0+255),b	;volatile
 14571                           
 14572                           ; BSR set to: 0
 14573                           ;usb_device_cdc.c: 237: inPipes[0].wCount.Val = 0x08;
 14574  0024B4  0E00               	movlw	0
 14575  0024B6  0100               	movlb	0	; () banked
 14576  0024B8  6F77               	movwf	(_inPipes+5)& (0+255),b	;volatile
 14577  0024BA  0E08               	movlw	8
 14578  0024BC  6F76               	movwf	(_inPipes+4)& (0+255),b	;volatile
 14579                           
 14580                           ; BSR set to: 0
 14581                           ;usb_device_cdc.c: 238: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14582  0024BE  0100               	movlb	0	; () banked
 14583  0024C0  8175               	bsf	(_inPipes+3)& (0+255),0,b	;volatile
 14584                           
 14585                           ; BSR set to: 0
 14586                           ;usb_device_cdc.c: 239: inPipes[0].info.bits.busy = 1;
 14587  0024C2  0100               	movlb	0	; () banked
 14588  0024C4  8F75               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 14589                           
 14590                           ;usb_device_cdc.c: 240: break;
 14591  0024C6  0012               	return	
 14592  0024C8                     i2l4218:
 14593                           
 14594                           ;usb_device_cdc.c: 243: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 14595  0024C8  0E1A               	movlw	low _dummy_encapsulated_cmd_response
 14596  0024CA  0100               	movlb	0	; () banked
 14597  0024CC  6F72               	movwf	_inPipes& (0+255),b	;volatile
 14598  0024CE  0E00               	movlw	high _dummy_encapsulated_cmd_response
 14599  0024D0  0100               	movlb	0	; () banked
 14600  0024D2  6F73               	movwf	(_inPipes+1)& (0+255),b	;volatile
 14601                           
 14602                           ; BSR set to: 0
 14603                           ;usb_device_cdc.c: 244: inPipes[0].info.bits.busy = 1;
 14604  0024D4  0100               	movlb	0	; () banked
 14605  0024D6  8F75               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 14606                           
 14607                           ;usb_device_cdc.c: 245: break;
 14608  0024D8  0012               	return	
 14609  0024DA                     i2l822:
 14610                           
 14611                           ; BSR set to: 4
 14612                           ;usb_device_cdc.c: 250: outPipes[0].wCount.Val = SetupPkt.wLength;
 14613  0024DA  C436 F06E          	movff	1078,_outPipes+4	;volatile
 14614  0024DE  C437 F06F          	movff	1079,_outPipes+5	;volatile
 14615                           
 14616                           ; BSR set to: 4
 14617                           ;usb_device_cdc.c: 251: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 14618  0024E2  0E22               	movlw	low _line_coding
 14619  0024E4  0100               	movlb	0	; () banked
 14620  0024E6  6F6A               	movwf	_outPipes& (0+255),b	;volatile
 14621  0024E8  0E00               	movlw	high _line_coding
 14622  0024EA  0100               	movlb	0	; () banked
 14623  0024EC  6F6B               	movwf	(_outPipes+1)& (0+255),b	;volatile
 14624                           
 14625                           ;usb_device_cdc.c: 252: outPipes[0].pFunc = (0);
 14626  0024EE  0E00               	movlw	0
 14627  0024F0  0100               	movlb	0	; () banked
 14628  0024F2  6F70               	movwf	(_outPipes+6)& (0+255),b	;volatile
 14629  0024F4  0E00               	movlw	0
 14630  0024F6  0100               	movlb	0	; () banked
 14631  0024F8  6F71               	movwf	(_outPipes+7)& (0+255),b	;volatile
 14632                           
 14633                           ; BSR set to: 0
 14634                           ;usb_device_cdc.c: 253: outPipes[0].info.bits.busy = 1;
 14635  0024FA  0100               	movlb	0	; () banked
 14636  0024FC  8F6D               	bsf	(_outPipes+3)& (0+255),7,b	;volatile
 14637                           
 14638                           ;usb_device_cdc.c: 254: break;
 14639  0024FE  0012               	return	
 14640  002500                     i2l4226:
 14641                           
 14642                           ;usb_device_cdc.c: 257: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 14643  002500  0E22               	movlw	low _line_coding
 14644  002502  0100               	movlb	0	; () banked
 14645  002504  6F72               	movwf	_inPipes& (0+255),b	;volatile
 14646  002506  0E00               	movlw	high _line_coding
 14647  002508  0100               	movlb	0	; () banked
 14648  00250A  6F73               	movwf	(_inPipes+1)& (0+255),b	;volatile
 14649                           
 14650                           ; BSR set to: 0
 14651  00250C  0E00               	movlw	0
 14652  00250E  0100               	movlb	0	; () banked
 14653  002510  6F77               	movwf	(_inPipes+5)& (0+255),b	;volatile
 14654  002512  0E07               	movlw	7
 14655  002514  6F76               	movwf	(_inPipes+4)& (0+255),b	;volatile
 14656                           
 14657                           ; BSR set to: 0
 14658  002516  0EC1               	movlw	193
 14659  002518  0100               	movlb	0	; () banked
 14660  00251A  6F75               	movwf	(_inPipes+3)& (0+255),b	;volatile
 14661                           
 14662                           ;usb_device_cdc.c: 261: break;
 14663  00251C  0012               	return	
 14664  00251E                     i2l824:
 14665                           
 14666                           ; BSR set to: 4
 14667                           ;usb_device_cdc.c: 264: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 14668  00251E  C432 F017          	movff	1074,_control_signal_bitmap	;volatile
 14669                           
 14670                           ;usb_device_cdc.c: 296: inPipes[0].info.bits.busy = 1;
 14671  002522  0100               	movlb	0	; () banked
 14672  002524  8F75               	bsf	(_inPipes+3)& (0+255),7,b	;volatile
 14673                           
 14674                           ; BSR set to: 0
 14675                           ;usb_device_cdc.c: 323: }
 14676                           
 14677                           ; BSR set to: 0
 14678                           ;usb_device_cdc.c: 322: break;
 14679                           
 14680                           ;usb_device_cdc.c: 321: default:
 14681                           
 14682                           ;usb_device_cdc.c: 297: break;
 14683  002526  0012               	return	
 14684  002528                     i2l4234:
 14685  002528  0104               	movlb	4	; () banked
 14686  00252A  5131               	movf	49,w,b	;volatile
 14687                           
 14688                           ; Switch size 1, requested type "space"
 14689                           ; Number of cases is 5, Range of values is 0 to 34
 14690                           ; switch strategies available:
 14691                           ; Name         Instructions Cycles
 14692                           ; simple_byte           16     9 (average)
 14693                           ;	Chosen strategy is simple_byte
 14694  00252C  0A00               	xorlw	0	; case 0
 14695  00252E  B4D8               	btfsc	status,2,c
 14696  002530  D7BB               	goto	i2l4210
 14697  002532  0A01               	xorlw	1	; case 1
 14698  002534  B4D8               	btfsc	status,2,c
 14699  002536  D7C8               	goto	i2l4218
 14700  002538  0A21               	xorlw	33	; case 32
 14701  00253A  B4D8               	btfsc	status,2,c
 14702  00253C  D7CE               	goto	i2l822
 14703  00253E  0A01               	xorlw	1	; case 33
 14704  002540  B4D8               	btfsc	status,2,c
 14705  002542  D7DE               	goto	i2l4226
 14706  002544  0A03               	xorlw	3	; case 34
 14707  002546  A4D8               	btfss	status,2,c
 14708  002548  0012               	return	
 14709  00254A  D7E9               	goto	i2l824
 14710  00254C                     __end_of_USBCheckCDCRequest:
 14711                           	opt stack 0
 14712                           pclatu	equ	0xFFB
 14713                           pclath	equ	0xFFA
 14714                           tblptru	equ	0xFF8
 14715                           tblptrh	equ	0xFF7
 14716                           tblptrl	equ	0xFF6
 14717                           tablat	equ	0xFF5
 14718                           prodh	equ	0xFF4
 14719                           prodl	equ	0xFF3
 14720                           intcon	equ	0xFF2
 14721                           postinc0	equ	0xFEE
 14722                           fsr0h	equ	0xFEA
 14723                           fsr0l	equ	0xFE9
 14724                           wreg	equ	0xFE8
 14725                           indf1	equ	0xFE7
 14726                           postdec1	equ	0xFE5
 14727                           fsr1h	equ	0xFE2
 14728                           fsr1l	equ	0xFE1
 14729                           indf2	equ	0xFDF
 14730                           postinc2	equ	0xFDE
 14731                           postdec2	equ	0xFDD
 14732                           plusw2	equ	0xFDB
 14733                           fsr2h	equ	0xFDA
 14734                           fsr2l	equ	0xFD9
 14735                           status	equ	0xFD8
 14736                           
 14737 ;; *************** function _APP_CustomCDCInitialize *****************
 14738 ;; Defined at:
 14739 ;;		line 22 in file "usb_comm.c"
 14740 ;; Parameters:    Size  Location     Type
 14741 ;;		None
 14742 ;; Auto vars:     Size  Location     Type
 14743 ;;		None
 14744 ;; Return value:  Size  Location     Type
 14745 ;;		None               void
 14746 ;; Registers used:
 14747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14748 ;; Tracked objects:
 14749 ;;		On entry : 0/0
 14750 ;;		On exit  : 0/0
 14751 ;;		Unchanged: 0/0
 14752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14753 ;;      Params:         0       0       0       0       0       0       0       0       0
 14754 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14755 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14756 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14757 ;;Total ram usage:        0 bytes
 14758 ;; Hardware stack levels used:    1
 14759 ;; Hardware stack levels required when called:    3
 14760 ;; This function calls:
 14761 ;;		_CDCInitEP
 14762 ;; This function is called by:
 14763 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14764 ;; This function uses a non-reentrant model
 14765 ;;
 14766                           
 14767                           	psect	text70
 14768  0037D0                     __ptext70:
 14769                           	opt stack 0
 14770  0037D0                     _APP_CustomCDCInitialize:
 14771                           	opt stack 19
 14772                           
 14773                           ;usb_comm.c: 24: CDCInitEP();
 14774                           
 14775                           ;incstack = 0
 14776  0037D0  ECEC  F018         	call	_CDCInitEP	;wreg free
 14777  0037D4  0012               	return		;funcret
 14778  0037D6                     __end_of_APP_CustomCDCInitialize:
 14779                           	opt stack 0
 14780                           pclatu	equ	0xFFB
 14781                           pclath	equ	0xFFA
 14782                           tblptru	equ	0xFF8
 14783                           tblptrh	equ	0xFF7
 14784                           tblptrl	equ	0xFF6
 14785                           tablat	equ	0xFF5
 14786                           prodh	equ	0xFF4
 14787                           prodl	equ	0xFF3
 14788                           intcon	equ	0xFF2
 14789                           postinc0	equ	0xFEE
 14790                           fsr0h	equ	0xFEA
 14791                           fsr0l	equ	0xFE9
 14792                           wreg	equ	0xFE8
 14793                           indf1	equ	0xFE7
 14794                           postdec1	equ	0xFE5
 14795                           fsr1h	equ	0xFE2
 14796                           fsr1l	equ	0xFE1
 14797                           indf2	equ	0xFDF
 14798                           postinc2	equ	0xFDE
 14799                           postdec2	equ	0xFDD
 14800                           plusw2	equ	0xFDB
 14801                           fsr2h	equ	0xFDA
 14802                           fsr2l	equ	0xFD9
 14803                           status	equ	0xFD8
 14804                           
 14805 ;; *************** function _CDCInitEP *****************
 14806 ;; Defined at:
 14807 ;;		line 359 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_de
      +vice_cdc.c"
 14808 ;; Parameters:    Size  Location     Type
 14809 ;;		None
 14810 ;; Auto vars:     Size  Location     Type
 14811 ;;		None
 14812 ;; Return value:  Size  Location     Type
 14813 ;;		None               void
 14814 ;; Registers used:
 14815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14816 ;; Tracked objects:
 14817 ;;		On entry : 0/0
 14818 ;;		On exit  : 0/0
 14819 ;;		Unchanged: 0/0
 14820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14821 ;;      Params:         0       0       0       0       0       0       0       0       0
 14822 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14823 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14824 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14825 ;;Total ram usage:        0 bytes
 14826 ;; Hardware stack levels used:    1
 14827 ;; Hardware stack levels required when called:    2
 14828 ;; This function calls:
 14829 ;;		_USBEnableEndpoint
 14830 ;;		i2_USBTransferOnePacket
 14831 ;; This function is called by:
 14832 ;;		_APP_CustomCDCInitialize
 14833 ;; This function uses a non-reentrant model
 14834 ;;
 14835                           
 14836                           	psect	text71
 14837  0031D8                     __ptext71:
 14838                           	opt stack 0
 14839  0031D8                     _CDCInitEP:
 14840                           	opt stack 19
 14841                           
 14842                           ;usb_device_cdc.c: 362: line_coding.dwDTERate = 19200;
 14843                           
 14844                           ;incstack = 0
 14845  0031D8  0E00               	movlw	0
 14846  0031DA  6E22               	movwf	_line_coding,c
 14847  0031DC  0E4B               	movlw	75
 14848  0031DE  6E23               	movwf	_line_coding+1,c
 14849  0031E0  0E00               	movlw	0
 14850  0031E2  6E24               	movwf	_line_coding+2,c
 14851  0031E4  0E00               	movlw	0
 14852  0031E6  6E25               	movwf	_line_coding+3,c
 14853                           
 14854                           ;usb_device_cdc.c: 363: line_coding.bCharFormat = 0x00;
 14855  0031E8  0E00               	movlw	0
 14856  0031EA  6E26               	movwf	_line_coding+4,c
 14857                           
 14858                           ;usb_device_cdc.c: 364: line_coding.bParityType = 0x00;
 14859  0031EC  0E00               	movlw	0
 14860  0031EE  6E27               	movwf	_line_coding+5,c
 14861                           
 14862                           ;usb_device_cdc.c: 365: line_coding.bDataBits = 0x08;
 14863  0031F0  0E08               	movlw	8
 14864  0031F2  6E28               	movwf	_line_coding+6,c
 14865                           
 14866                           ;usb_device_cdc.c: 367: cdc_rx_len = 0;
 14867  0031F4  0E00               	movlw	0
 14868  0031F6  6E15               	movwf	_cdc_rx_len,c
 14869                           
 14870                           ;usb_device_cdc.c: 380: USBEnableEndpoint(1,0x02|0x10|0x08);
 14871  0031F8  0E1A               	movlw	26
 14872  0031FA  6E35               	movwf	USBEnableEndpoint@options,c
 14873  0031FC  0E01               	movlw	1
 14874  0031FE  EC66  F01A         	call	_USBEnableEndpoint
 14875                           
 14876                           ;usb_device_cdc.c: 381: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 14877  003202  0E1E               	movlw	30
 14878  003204  6E35               	movwf	USBEnableEndpoint@options,c
 14879  003206  0E02               	movlw	2
 14880  003208  EC66  F01A         	call	_USBEnableEndpoint
 14881                           
 14882                           ;usb_device_cdc.c: 383: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 14883  00320C  0E00               	movlw	0
 14884  00320E  6E2D               	movwf	i2USBTransferOnePacket@dir,c
 14885  003210  0E40               	movlw	64
 14886  003212  6E2E               	movwf	i2USBTransferOnePacket@data,c
 14887  003214  0E05               	movlw	5
 14888  003216  6E2F               	movwf	i2USBTransferOnePacket@data+1,c
 14889  003218  0E40               	movlw	64
 14890  00321A  6E30               	movwf	i2USBTransferOnePacket@len,c
 14891  00321C  0E02               	movlw	2
 14892  00321E  ECBB  F015         	call	i2_USBTransferOnePacket
 14893  003222  C02D  F005         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 14894  003226  C02E  F006         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 14895                           
 14896                           ;usb_device_cdc.c: 384: CDCDataInHandle = (0);
 14897  00322A  0E00               	movlw	0
 14898  00322C  0100               	movlb	0	; () banked
 14899  00322E  6F9A               	movwf	_CDCDataInHandle& (0+255),b
 14900  003230  0E00               	movlw	0
 14901  003232  0100               	movlb	0	; () banked
 14902  003234  6F9B               	movwf	(_CDCDataInHandle+1)& (0+255),b
 14903                           
 14904                           ; BSR set to: 0
 14905                           ;usb_device_cdc.c: 411: cdc_trf_state = 0;
 14906  003236  0E00               	movlw	0
 14907  003238  0100               	movlb	0	; () banked
 14908  00323A  6FA1               	movwf	_cdc_trf_state& (0+255),b
 14909                           
 14910                           ; BSR set to: 0
 14911  00323C  0012               	return		;funcret
 14912  00323E                     __end_of_CDCInitEP:
 14913                           	opt stack 0
 14914                           pclatu	equ	0xFFB
 14915                           pclath	equ	0xFFA
 14916                           tblptru	equ	0xFF8
 14917                           tblptrh	equ	0xFF7
 14918                           tblptrl	equ	0xFF6
 14919                           tablat	equ	0xFF5
 14920                           prodh	equ	0xFF4
 14921                           prodl	equ	0xFF3
 14922                           intcon	equ	0xFF2
 14923                           postinc0	equ	0xFEE
 14924                           fsr0h	equ	0xFEA
 14925                           fsr0l	equ	0xFE9
 14926                           wreg	equ	0xFE8
 14927                           indf1	equ	0xFE7
 14928                           postdec1	equ	0xFE5
 14929                           fsr1h	equ	0xFE2
 14930                           fsr1l	equ	0xFE1
 14931                           indf2	equ	0xFDF
 14932                           postinc2	equ	0xFDE
 14933                           postdec2	equ	0xFDD
 14934                           plusw2	equ	0xFDB
 14935                           fsr2h	equ	0xFDA
 14936                           fsr2l	equ	0xFD9
 14937                           status	equ	0xFD8
 14938                           
 14939 ;; *************** function i2_USBTransferOnePacket *****************
 14940 ;; Defined at:
 14941 ;;		line 995 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_de
      +vice.c"
 14942 ;; Parameters:    Size  Location     Type
 14943 ;;  ep              1    wreg     unsigned char 
 14944 ;;  dir             1    0[COMRAM] unsigned char 
 14945 ;;  data            2    1[COMRAM] PTR unsigned char 
 14946 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 14947 ;;  len             1    3[COMRAM] unsigned char 
 14948 ;; Auto vars:     Size  Location     Type
 14949 ;;  ep              1    4[COMRAM] unsigned char 
 14950 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 14951 ;;		 -> NULL(0), BDT(48), 
 14952 ;; Return value:  Size  Location     Type
 14953 ;;                  2    0[COMRAM] PTR void 
 14954 ;; Registers used:
 14955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14956 ;; Tracked objects:
 14957 ;;		On entry : 0/0
 14958 ;;		On exit  : 0/0
 14959 ;;		Unchanged: 0/0
 14960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14961 ;;      Params:         4       0       0       0       0       0       0       0       0
 14962 ;;      Locals:         3       0       0       0       0       0       0       0       0
 14963 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14964 ;;      Totals:         7       0       0       0       0       0       0       0       0
 14965 ;;Total ram usage:        7 bytes
 14966 ;; Hardware stack levels used:    1
 14967 ;; This function calls:
 14968 ;;		Nothing
 14969 ;; This function is called by:
 14970 ;;		_CDCInitEP
 14971 ;; This function uses a non-reentrant model
 14972 ;;
 14973                           
 14974                           	psect	text72
 14975  002B76                     __ptext72:
 14976                           	opt stack 0
 14977  002B76                     i2_USBTransferOnePacket:
 14978                           	opt stack 20
 14979                           
 14980                           ; BSR set to: 0
 14981                           ;incstack = 0
 14982                           ;i2USBTransferOnePacket@ep stored from wreg
 14983  002B76  6E31               	movwf	i2USBTransferOnePacket@ep,c
 14984                           
 14985                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
 14986                           ;usb_device.c: 1000: if(dir != 0)
 14987  002B78  502D               	movf	i2USBTransferOnePacket@dir,w,c
 14988  002B7A  B4D8               	btfsc	status,2,c
 14989  002B7C  D007               	goto	i2l4156
 14990                           
 14991                           ;usb_device.c: 1001: {
 14992                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 14993  002B7E  5031               	movf	i2USBTransferOnePacket@ep,w,c
 14994  002B80  0D02               	mullw	2
 14995  002B82  0E78               	movlw	low _pBDTEntryIn
 14996  002B84  24F3               	addwf	prodl,w,c
 14997  002B86  6ED9               	movwf	fsr2l,c
 14998  002B88  0E00               	movlw	high _pBDTEntryIn
 14999  002B8A  D006               	goto	L52
 15000  002B8C                     i2l4156:
 15001                           
 15002                           ;usb_device.c: 1005: else
 15003                           ;usb_device.c: 1006: {
 15004                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
 15005  002B8C  5031               	movf	i2USBTransferOnePacket@ep,w,c
 15006  002B8E  0D02               	mullw	2
 15007  002B90  0E7E               	movlw	low _pBDTEntryOut
 15008  002B92  24F3               	addwf	prodl,w,c
 15009  002B94  6ED9               	movwf	fsr2l,c
 15010  002B96  0E00               	movlw	high _pBDTEntryOut
 15011  002B98                     L52:
 15012  002B98  20F4               	addwfc	prodh,w,c
 15013  002B9A  6EDA               	movwf	fsr2h,c
 15014  002B9C  CFDE F032          	movff	postinc2,i2USBTransferOnePacket@handle
 15015  002BA0  CFDD F033          	movff	postdec2,i2USBTransferOnePacket@handle+1
 15016                           
 15017                           ;usb_device.c: 1009: }
 15018                           ;usb_device.c: 1013: if(handle == 0)
 15019  002BA4  5032               	movf	i2USBTransferOnePacket@handle,w,c
 15020  002BA6  1033               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 15021  002BA8  A4D8               	btfss	status,2,c
 15022  002BAA  D005               	goto	i2l4164
 15023                           
 15024                           ;usb_device.c: 1014: {
 15025                           ;usb_device.c: 1015: return 0;
 15026  002BAC  0E00               	movlw	0
 15027  002BAE  6E2D               	movwf	?i2_USBTransferOnePacket,c
 15028  002BB0  0E00               	movlw	0
 15029  002BB2  6E2E               	movwf	?i2_USBTransferOnePacket+1,c
 15030  002BB4  0012               	return	
 15031  002BB6                     i2l4164:
 15032                           
 15033                           ;usb_device.c: 1016: }
 15034                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 15035  002BB6  EE20 F002          	lfsr	2,2
 15036  002BBA  5032               	movf	i2USBTransferOnePacket@handle,w,c
 15037  002BBC  26D9               	addwf	fsr2l,f,c
 15038  002BBE  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 15039  002BC0  22DA               	addwfc	fsr2h,f,c
 15040  002BC2  C02E  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 15041  002BC6  C02F  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 15042                           
 15043                           ;usb_device.c: 1030: handle->CNT = len;
 15044  002BCA  EE20 F001          	lfsr	2,1
 15045  002BCE  5032               	movf	i2USBTransferOnePacket@handle,w,c
 15046  002BD0  26D9               	addwf	fsr2l,f,c
 15047  002BD2  5033               	movf	i2USBTransferOnePacket@handle+1,w,c
 15048  002BD4  22DA               	addwfc	fsr2h,f,c
 15049  002BD6  C030  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 15050                           
 15051                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 15052  002BDA  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 15053  002BDE  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 15054  002BE2  0E40               	movlw	64
 15055  002BE4  16DF               	andwf	indf2,f,c
 15056                           
 15057                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 15058  002BE6  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 15059  002BEA  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 15060  002BEE  0E00               	movlw	0
 15061  002BF0  86DB               	bsf	plusw2,3,c
 15062                           
 15063                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 15064  002BF2  C032  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 15065  002BF6  C033  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 15066  002BFA  0E00               	movlw	0
 15067  002BFC  8EDB               	bsf	plusw2,7,c
 15068                           
 15069                           ;usb_device.c: 1036: if(dir != 0)
 15070  002BFE  502D               	movf	i2USBTransferOnePacket@dir,w,c
 15071  002C00  B4D8               	btfsc	status,2,c
 15072  002C02  D007               	goto	i2l4176
 15073                           
 15074                           ;usb_device.c: 1037: {
 15075                           ;usb_device.c: 1039: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 15076  002C04  5031               	movf	i2USBTransferOnePacket@ep,w,c
 15077  002C06  0D02               	mullw	2
 15078  002C08  0E78               	movlw	low _pBDTEntryIn
 15079  002C0A  24F3               	addwf	prodl,w,c
 15080  002C0C  6ED9               	movwf	fsr2l,c
 15081  002C0E  0E00               	movlw	high _pBDTEntryIn
 15082  002C10  D006               	goto	L53
 15083  002C12                     i2l4176:
 15084                           
 15085                           ;usb_device.c: 1041: else
 15086                           ;usb_device.c: 1042: {
 15087                           ;usb_device.c: 1044: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 15088  002C12  5031               	movf	i2USBTransferOnePacket@ep,w,c
 15089  002C14  0D02               	mullw	2
 15090  002C16  0E7E               	movlw	low _pBDTEntryOut
 15091  002C18  24F3               	addwf	prodl,w,c
 15092  002C1A  6ED9               	movwf	fsr2l,c
 15093  002C1C  0E00               	movlw	high _pBDTEntryOut
 15094  002C1E                     L53:
 15095  002C1E  20F4               	addwfc	prodh,w,c
 15096  002C20  6EDA               	movwf	fsr2h,c
 15097  002C22  0E04               	movlw	4
 15098  002C24  1ADF               	xorwf	indf2,f,c
 15099                           
 15100                           ;usb_device.c: 1045: }
 15101                           ;usb_device.c: 1046: return (void*)handle;
 15102  002C26  C032  F02D         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 15103  002C2A  C033  F02E         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 15104  002C2E  0012               	return	
 15105  002C30                     __end_ofi2_USBTransferOnePacket:
 15106                           	opt stack 0
 15107                           pclatu	equ	0xFFB
 15108                           pclath	equ	0xFFA
 15109                           tblptru	equ	0xFF8
 15110                           tblptrh	equ	0xFF7
 15111                           tblptrl	equ	0xFF6
 15112                           tablat	equ	0xFF5
 15113                           prodh	equ	0xFF4
 15114                           prodl	equ	0xFF3
 15115                           intcon	equ	0xFF2
 15116                           postinc0	equ	0xFEE
 15117                           fsr0h	equ	0xFEA
 15118                           fsr0l	equ	0xFE9
 15119                           wreg	equ	0xFE8
 15120                           indf1	equ	0xFE7
 15121                           postdec1	equ	0xFE5
 15122                           fsr1h	equ	0xFE2
 15123                           fsr1l	equ	0xFE1
 15124                           indf2	equ	0xFDF
 15125                           postinc2	equ	0xFDE
 15126                           postdec2	equ	0xFDD
 15127                           plusw2	equ	0xFDB
 15128                           fsr2h	equ	0xFDA
 15129                           fsr2l	equ	0xFD9
 15130                           status	equ	0xFD8
 15131                           
 15132 ;; *************** function _USBEnableEndpoint *****************
 15133 ;; Defined at:
 15134 ;;		line 878 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_de
      +vice.c"
 15135 ;; Parameters:    Size  Location     Type
 15136 ;;  ep              1    wreg     unsigned char 
 15137 ;;  options         1    8[COMRAM] unsigned char 
 15138 ;; Auto vars:     Size  Location     Type
 15139 ;;  ep              1   11[COMRAM] unsigned char 
 15140 ;;  p               2    9[COMRAM] PTR unsigned char 
 15141 ;;		 -> UEP0(1), 
 15142 ;; Return value:  Size  Location     Type
 15143 ;;		None               void
 15144 ;; Registers used:
 15145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15146 ;; Tracked objects:
 15147 ;;		On entry : 0/0
 15148 ;;		On exit  : 0/0
 15149 ;;		Unchanged: 0/0
 15150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15151 ;;      Params:         1       0       0       0       0       0       0       0       0
 15152 ;;      Locals:         3       0       0       0       0       0       0       0       0
 15153 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15154 ;;      Totals:         4       0       0       0       0       0       0       0       0
 15155 ;;Total ram usage:        4 bytes
 15156 ;; Hardware stack levels used:    1
 15157 ;; Hardware stack levels required when called:    1
 15158 ;; This function calls:
 15159 ;;		_USBConfigureEndpoint
 15160 ;; This function is called by:
 15161 ;;		_CDCInitEP
 15162 ;; This function uses a non-reentrant model
 15163 ;;
 15164                           
 15165                           	psect	text73
 15166  0034CC                     __ptext73:
 15167                           	opt stack 0
 15168  0034CC                     _USBEnableEndpoint:
 15169                           	opt stack 19
 15170                           
 15171                           ;incstack = 0
 15172                           ;USBEnableEndpoint@ep stored from wreg
 15173  0034CC  6E38               	movwf	USBEnableEndpoint@ep,c
 15174                           
 15175                           ;usb_device.c: 880: unsigned char* p;
 15176                           ;usb_device.c: 884: if(options & 0x04)
 15177  0034CE  A435               	btfss	USBEnableEndpoint@options,2,c
 15178  0034D0  D005               	goto	i2l4144
 15179                           
 15180                           ;usb_device.c: 885: {
 15181                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 15182  0034D2  0E00               	movlw	0
 15183  0034D4  6E2D               	movwf	USBConfigureEndpoint@direction,c
 15184  0034D6  5038               	movf	USBEnableEndpoint@ep,w,c
 15185  0034D8  ECB8  F016         	call	_USBConfigureEndpoint
 15186  0034DC                     i2l4144:
 15187                           
 15188                           ;usb_device.c: 887: }
 15189                           ;usb_device.c: 888: if(options & 0x02)
 15190  0034DC  A235               	btfss	USBEnableEndpoint@options,1,c
 15191  0034DE  D005               	goto	i2l4148
 15192                           
 15193                           ;usb_device.c: 889: {
 15194                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 15195  0034E0  0E01               	movlw	1
 15196  0034E2  6E2D               	movwf	USBConfigureEndpoint@direction,c
 15197  0034E4  5038               	movf	USBEnableEndpoint@ep,w,c
 15198  0034E6  ECB8  F016         	call	_USBConfigureEndpoint
 15199  0034EA                     i2l4148:
 15200                           
 15201                           ;usb_device.c: 891: }
 15202                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 15203  0034EA  5038               	movf	USBEnableEndpoint@ep,w,c
 15204  0034EC  0D01               	mullw	1
 15205  0034EE  0E70               	movlw	112
 15206  0034F0  24F3               	addwf	prodl,w,c
 15207  0034F2  6E36               	movwf	USBEnableEndpoint@p,c
 15208  0034F4  0E0F               	movlw	15
 15209  0034F6  20F4               	addwfc	prodh,w,c
 15210  0034F8  6E37               	movwf	USBEnableEndpoint@p+1,c
 15211                           
 15212                           ;usb_device.c: 901: *p = options;
 15213  0034FA  C036  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 15214  0034FE  C037  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 15215  003502  C035  FFDF         	movff	USBEnableEndpoint@options,indf2
 15216  003506  0012               	return		;funcret
 15217  003508                     __end_of_USBEnableEndpoint:
 15218                           	opt stack 0
 15219                           pclatu	equ	0xFFB
 15220                           pclath	equ	0xFFA
 15221                           tblptru	equ	0xFF8
 15222                           tblptrh	equ	0xFF7
 15223                           tblptrl	equ	0xFF6
 15224                           tablat	equ	0xFF5
 15225                           prodh	equ	0xFF4
 15226                           prodl	equ	0xFF3
 15227                           intcon	equ	0xFF2
 15228                           postinc0	equ	0xFEE
 15229                           fsr0h	equ	0xFEA
 15230                           fsr0l	equ	0xFE9
 15231                           wreg	equ	0xFE8
 15232                           indf1	equ	0xFE7
 15233                           postdec1	equ	0xFE5
 15234                           fsr1h	equ	0xFE2
 15235                           fsr1l	equ	0xFE1
 15236                           indf2	equ	0xFDF
 15237                           postinc2	equ	0xFDE
 15238                           postdec2	equ	0xFDD
 15239                           plusw2	equ	0xFDB
 15240                           fsr2h	equ	0xFDA
 15241                           fsr2l	equ	0xFD9
 15242                           status	equ	0xFD8
 15243                           
 15244 ;; *************** function _USBConfigureEndpoint *****************
 15245 ;; Defined at:
 15246 ;;		line 1543 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_d
      +evice.c"
 15247 ;; Parameters:    Size  Location     Type
 15248 ;;  EPNum           1    wreg     unsigned char 
 15249 ;;  direction       1    0[COMRAM] unsigned char 
 15250 ;; Auto vars:     Size  Location     Type
 15251 ;;  EPNum           1    5[COMRAM] unsigned char 
 15252 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 15253 ;;		 -> BDT(48), 
 15254 ;; Return value:  Size  Location     Type
 15255 ;;		None               void
 15256 ;; Registers used:
 15257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15258 ;; Tracked objects:
 15259 ;;		On entry : 0/0
 15260 ;;		On exit  : 0/0
 15261 ;;		Unchanged: 0/0
 15262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15263 ;;      Params:         1       0       0       0       0       0       0       0       0
 15264 ;;      Locals:         3       0       0       0       0       0       0       0       0
 15265 ;;      Temps:          4       0       0       0       0       0       0       0       0
 15266 ;;      Totals:         8       0       0       0       0       0       0       0       0
 15267 ;;Total ram usage:        8 bytes
 15268 ;; Hardware stack levels used:    1
 15269 ;; This function calls:
 15270 ;;		Nothing
 15271 ;; This function is called by:
 15272 ;;		_USBEnableEndpoint
 15273 ;; This function uses a non-reentrant model
 15274 ;;
 15275                           
 15276                           	psect	text74
 15277  002D70                     __ptext74:
 15278                           	opt stack 0
 15279  002D70                     _USBConfigureEndpoint:
 15280                           	opt stack 19
 15281                           
 15282                           ;incstack = 0
 15283                           ;USBConfigureEndpoint@EPNum stored from wreg
 15284  002D70  6E32               	movwf	USBConfigureEndpoint@EPNum,c
 15285                           
 15286                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
 15287                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
 15288  002D72  0E00               	movlw	0
 15289  002D74  6E33               	movwf	USBConfigureEndpoint@handle,c
 15290  002D76  0E04               	movlw	4
 15291  002D78  6E34               	movwf	USBConfigureEndpoint@handle+1,c
 15292                           
 15293                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
 15294  002D7A  502D               	movf	USBConfigureEndpoint@direction,w,c
 15295  002D7C  6E2E               	movwf	??_USBConfigureEndpoint& (0+255),c
 15296  002D7E  6A2F               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 15297  002D80  90D8               	bcf	status,0,c
 15298  002D82  362E               	rlcf	??_USBConfigureEndpoint,f,c
 15299  002D84  362F               	rlcf	??_USBConfigureEndpoint+1,f,c
 15300  002D86  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 15301  002D88  6E30               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 15302  002D8A  6A31               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 15303  002D8C  90D8               	bcf	status,0,c
 15304  002D8E  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 15305  002D90  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 15306  002D92  90D8               	bcf	status,0,c
 15307  002D94  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 15308  002D96  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 15309  002D98  502E               	movf	??_USBConfigureEndpoint,w,c
 15310  002D9A  2630               	addwf	??_USBConfigureEndpoint+2,f,c
 15311  002D9C  502F               	movf	??_USBConfigureEndpoint+1,w,c
 15312  002D9E  2231               	addwfc	??_USBConfigureEndpoint+3,f,c
 15313  002DA0  90D8               	bcf	status,0,c
 15314  002DA2  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 15315  002DA4  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 15316  002DA6  90D8               	bcf	status,0,c
 15317  002DA8  3630               	rlcf	??_USBConfigureEndpoint+2,f,c
 15318  002DAA  3631               	rlcf	??_USBConfigureEndpoint+3,f,c
 15319  002DAC  5030               	movf	??_USBConfigureEndpoint+2,w,c
 15320  002DAE  2633               	addwf	USBConfigureEndpoint@handle,f,c
 15321  002DB0  5031               	movf	??_USBConfigureEndpoint+3,w,c
 15322  002DB2  2234               	addwfc	USBConfigureEndpoint@handle+1,f,c
 15323                           
 15324                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
 15325  002DB4  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 15326  002DB8  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 15327  002DBC  9EDF               	bcf	indf2,7,c
 15328                           
 15329                           ;usb_device.c: 1557: if(direction == 0)
 15330  002DBE  502D               	movf	USBConfigureEndpoint@direction,w,c
 15331  002DC0  A4D8               	btfss	status,2,c
 15332  002DC2  D007               	goto	i2l4134
 15333                           
 15334                           ;usb_device.c: 1558: {
 15335                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
 15336  002DC4  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 15337  002DC6  0D02               	mullw	2
 15338  002DC8  0E7E               	movlw	low _pBDTEntryOut
 15339  002DCA  24F3               	addwf	prodl,w,c
 15340  002DCC  6ED9               	movwf	fsr2l,c
 15341  002DCE  0E00               	movlw	high _pBDTEntryOut
 15342  002DD0  D006               	goto	L54
 15343  002DD2                     i2l4134:
 15344                           
 15345                           ;usb_device.c: 1561: else
 15346                           ;usb_device.c: 1562: {
 15347                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
 15348  002DD2  5032               	movf	USBConfigureEndpoint@EPNum,w,c
 15349  002DD4  0D02               	mullw	2
 15350  002DD6  0E78               	movlw	low _pBDTEntryIn
 15351  002DD8  24F3               	addwf	prodl,w,c
 15352  002DDA  6ED9               	movwf	fsr2l,c
 15353  002DDC  0E00               	movlw	high _pBDTEntryIn
 15354  002DDE                     L54:
 15355  002DDE  20F4               	addwfc	prodh,w,c
 15356  002DE0  6EDA               	movwf	fsr2h,c
 15357  002DE2  C033  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 15358  002DE6  C034  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 15359                           
 15360                           ;usb_device.c: 1564: }
 15361                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
 15362  002DEA  C033  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 15363  002DEE  C034  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 15364  002DF2  9CDF               	bcf	indf2,6,c
 15365                           
 15366                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
 15367  002DF4  EE20 F004          	lfsr	2,4
 15368  002DF8  5033               	movf	USBConfigureEndpoint@handle,w,c
 15369  002DFA  26D9               	addwf	fsr2l,f,c
 15370  002DFC  5034               	movf	USBConfigureEndpoint@handle+1,w,c
 15371  002DFE  22DA               	addwfc	fsr2h,f,c
 15372  002E00  8CDF               	bsf	indf2,6,c
 15373  002E02  0012               	return		;funcret
 15374  002E04                     __end_of_USBConfigureEndpoint:
 15375                           	opt stack 0
 15376                           pclatu	equ	0xFFB
 15377                           pclath	equ	0xFFA
 15378                           tblptru	equ	0xFF8
 15379                           tblptrh	equ	0xFF7
 15380                           tblptrl	equ	0xFF6
 15381                           tablat	equ	0xFF5
 15382                           prodh	equ	0xFF4
 15383                           prodl	equ	0xFF3
 15384                           intcon	equ	0xFF2
 15385                           postinc0	equ	0xFEE
 15386                           fsr0h	equ	0xFEA
 15387                           fsr0l	equ	0xFE9
 15388                           wreg	equ	0xFE8
 15389                           indf1	equ	0xFE7
 15390                           postdec1	equ	0xFE5
 15391                           fsr1h	equ	0xFE2
 15392                           fsr1l	equ	0xFE1
 15393                           indf2	equ	0xFDF
 15394                           postinc2	equ	0xFDE
 15395                           postdec2	equ	0xFDD
 15396                           plusw2	equ	0xFDB
 15397                           fsr2h	equ	0xFDA
 15398                           fsr2l	equ	0xFD9
 15399                           status	equ	0xFD8
 15400                           
 15401 ;; *************** function _USBCtrlTrfOutHandler *****************
 15402 ;; Defined at:
 15403 ;;		line 2541 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_d
      +evice.c"
 15404 ;; Parameters:    Size  Location     Type
 15405 ;;		None
 15406 ;; Auto vars:     Size  Location     Type
 15407 ;;		None
 15408 ;; Return value:  Size  Location     Type
 15409 ;;		None               void
 15410 ;; Registers used:
 15411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15412 ;; Tracked objects:
 15413 ;;		On entry : 0/0
 15414 ;;		On exit  : 0/0
 15415 ;;		Unchanged: 0/0
 15416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15417 ;;      Params:         0       0       0       0       0       0       0       0       0
 15418 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15419 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15420 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15421 ;;Total ram usage:        0 bytes
 15422 ;; Hardware stack levels used:    1
 15423 ;; Hardware stack levels required when called:    2
 15424 ;; This function calls:
 15425 ;;		_USBCtrlTrfRxService
 15426 ;; This function is called by:
 15427 ;;		_USBCtrlEPService
 15428 ;; This function uses a non-reentrant model
 15429 ;;
 15430                           
 15431                           	psect	text75
 15432  0032F8                     __ptext75:
 15433                           	opt stack 0
 15434  0032F8                     _USBCtrlTrfOutHandler:
 15435                           	opt stack 20
 15436                           
 15437                           ;usb_device.c: 2543: if(controlTransferState == 2)
 15438                           
 15439                           ;incstack = 0
 15440  0032F8  0E02               	movlw	2
 15441  0032FA  1816               	xorwf	_controlTransferState,w,c	;volatile
 15442  0032FC  A4D8               	btfss	status,2,c
 15443  0032FE  D003               	goto	i2l5336
 15444                           
 15445                           ;usb_device.c: 2544: {
 15446                           ;usb_device.c: 2545: USBCtrlTrfRxService();
 15447  003300  ECA8  F00D         	call	_USBCtrlTrfRxService	;wreg free
 15448                           
 15449                           ;usb_device.c: 2546: }
 15450  003304  0012               	return	
 15451  003306                     i2l5336:
 15452                           
 15453                           ;usb_device.c: 2547: else
 15454                           ;usb_device.c: 2548: {
 15455                           ;usb_device.c: 2551: controlTransferState = 0;
 15456  003306  0E00               	movlw	0
 15457  003308  6E16               	movwf	_controlTransferState,c	;volatile
 15458                           
 15459                           ;usb_device.c: 2558: if(BothEP0OutUOWNsSet == 0)
 15460  00330A  500D               	movf	_BothEP0OutUOWNsSet,w,c	;volatile
 15461  00330C  A4D8               	btfss	status,2,c
 15462  00330E  D01F               	goto	i2l5344
 15463                           
 15464                           ;usb_device.c: 2559: {
 15465                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->CNT = 8;
 15466  003310  EE20 F001          	lfsr	2,1
 15467  003314  5009               	movf	_pBDTEntryEP0OutNext,w,c
 15468  003316  26D9               	addwf	fsr2l,f,c
 15469  003318  500A               	movf	_pBDTEntryEP0OutNext+1,w,c
 15470  00331A  22DA               	addwfc	fsr2h,f,c
 15471  00331C  0E08               	movlw	8
 15472  00331E  6EDF               	movwf	indf2,c
 15473                           
 15474                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 15475  003320  EE20 F002          	lfsr	2,2
 15476  003324  5009               	movf	_pBDTEntryEP0OutNext,w,c
 15477  003326  26D9               	addwf	fsr2l,f,c
 15478  003328  500A               	movf	_pBDTEntryEP0OutNext+1,w,c
 15479  00332A  22DA               	addwfc	fsr2h,f,c
 15480  00332C  0E30               	movlw	48
 15481  00332E  6EDE               	movwf	postinc2,c
 15482  003330  0E04               	movlw	4
 15483  003332  6EDD               	movwf	postdec2,c
 15484                           
 15485                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 15486  003334  C009  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15487  003338  C00A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15488  00333C  0E0C               	movlw	12
 15489  00333E  6EDF               	movwf	indf2,c
 15490                           
 15491                           ;usb_device.c: 2563: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15492  003340  C009  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15493  003344  C00A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15494  003348  0E00               	movlw	0
 15495  00334A  8EDB               	bsf	plusw2,7,c
 15496                           
 15497                           ;usb_device.c: 2564: }
 15498  00334C  0012               	return	
 15499  00334E                     i2l5344:
 15500                           
 15501                           ;usb_device.c: 2565: else
 15502                           ;usb_device.c: 2566: {
 15503                           ;usb_device.c: 2567: BothEP0OutUOWNsSet = 0;
 15504  00334E  0E00               	movlw	0
 15505  003350  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 15506  003352  0012               	return	
 15507  003354                     __end_of_USBCtrlTrfOutHandler:
 15508                           	opt stack 0
 15509                           pclatu	equ	0xFFB
 15510                           pclath	equ	0xFFA
 15511                           tblptru	equ	0xFF8
 15512                           tblptrh	equ	0xFF7
 15513                           tblptrl	equ	0xFF6
 15514                           tablat	equ	0xFF5
 15515                           prodh	equ	0xFF4
 15516                           prodl	equ	0xFF3
 15517                           intcon	equ	0xFF2
 15518                           postinc0	equ	0xFEE
 15519                           fsr0h	equ	0xFEA
 15520                           fsr0l	equ	0xFE9
 15521                           wreg	equ	0xFE8
 15522                           indf1	equ	0xFE7
 15523                           postdec1	equ	0xFE5
 15524                           fsr1h	equ	0xFE2
 15525                           fsr1l	equ	0xFE1
 15526                           indf2	equ	0xFDF
 15527                           postinc2	equ	0xFDE
 15528                           postdec2	equ	0xFDD
 15529                           plusw2	equ	0xFDB
 15530                           fsr2h	equ	0xFDA
 15531                           fsr2l	equ	0xFD9
 15532                           status	equ	0xFD8
 15533                           
 15534 ;; *************** function _USBCtrlTrfRxService *****************
 15535 ;; Defined at:
 15536 ;;		line 1852 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_d
      +evice.c"
 15537 ;; Parameters:    Size  Location     Type
 15538 ;;		None
 15539 ;; Auto vars:     Size  Location     Type
 15540 ;;  byteToRead      1    1[COMRAM] unsigned char 
 15541 ;;  i               1    0[COMRAM] unsigned char 
 15542 ;; Return value:  Size  Location     Type
 15543 ;;		None               void
 15544 ;; Registers used:
 15545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15546 ;; Tracked objects:
 15547 ;;		On entry : 0/0
 15548 ;;		On exit  : 0/0
 15549 ;;		Unchanged: 0/0
 15550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15551 ;;      Params:         0       0       0       0       0       0       0       0       0
 15552 ;;      Locals:         2       0       0       0       0       0       0       0       0
 15553 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15554 ;;      Totals:         2       0       0       0       0       0       0       0       0
 15555 ;;Total ram usage:        2 bytes
 15556 ;; Hardware stack levels used:    1
 15557 ;; Hardware stack levels required when called:    1
 15558 ;; This function calls:
 15559 ;;		_USBCtrlEPAllowStatusStage
 15560 ;; This function is called by:
 15561 ;;		_USBCtrlTrfOutHandler
 15562 ;; This function uses a non-reentrant model
 15563 ;;
 15564                           
 15565                           	psect	text76
 15566  001B50                     __ptext76:
 15567                           	opt stack 0
 15568  001B50                     _USBCtrlTrfRxService:
 15569                           	opt stack 20
 15570                           
 15571                           ;usb_device.c: 1854: uint8_t byteToRead;
 15572                           ;usb_device.c: 1855: uint8_t i;
 15573                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 15574                           
 15575                           ;incstack = 0
 15576  001B50  EE20 F001          	lfsr	2,1
 15577  001B54  5007               	movf	_pBDTEntryEP0OutCurrent,w,c
 15578  001B56  26D9               	addwf	fsr2l,f,c
 15579  001B58  5008               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 15580  001B5A  22DA               	addwfc	fsr2h,f,c
 15581  001B5C  50DF               	movf	indf2,w,c
 15582  001B5E  6E2E               	movwf	USBCtrlTrfRxService@byteToRead,c
 15583                           
 15584                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
 15585  001B60  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 15586  001B62  0100               	movlb	0	; () banked
 15587  001B64  5D6E               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 15588  001B66  0E00               	movlw	0
 15589  001B68  596F               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 15590  001B6A  A0D8               	btfss	status,0,c
 15591                           
 15592                           ; BSR set to: 0
 15593                           ;usb_device.c: 1866: {
 15594                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
 15595  001B6C  C06E  F02E         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 15596                           
 15597                           ; BSR set to: 0
 15598                           ;usb_device.c: 1868: }
 15599                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
 15600                           
 15601                           ; BSR set to: 0
 15602  001B70  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 15603  001B72  0100               	movlb	0	; () banked
 15604  001B74  5F6E               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 15605  001B76  0E00               	movlw	0
 15606  001B78  5B6F               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 15607                           
 15608                           ; BSR set to: 0
 15609                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
 15610  001B7A  0E00               	movlw	0
 15611  001B7C  6E2D               	movwf	USBCtrlTrfRxService@i,c
 15612  001B7E  D012               	goto	i2l4688
 15613  001B80                     i2l4682:
 15614                           
 15615                           ; BSR set to: 0
 15616                           ;usb_device.c: 1875: {
 15617                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 15618  001B80  502D               	movf	USBCtrlTrfRxService@i,w,c
 15619  001B82  0D01               	mullw	1
 15620  001B84  0E38               	movlw	56
 15621  001B86  24F3               	addwf	prodl,w,c
 15622  001B88  6ED9               	movwf	fsr2l,c
 15623  001B8A  0E04               	movlw	4
 15624  001B8C  20F4               	addwfc	prodh,w,c
 15625  001B8E  6EDA               	movwf	fsr2h,c
 15626  001B90  C06A  FFE1         	movff	_outPipes,fsr1l	;volatile
 15627  001B94  C06B  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 15628  001B98  CFDF FFE7          	movff	indf2,indf1
 15629                           
 15630                           ; BSR set to: 0
 15631  001B9C  0100               	movlb	0	; () banked
 15632  001B9E  4B6A               	infsnz	_outPipes& (0+255),f,b	;volatile
 15633  001BA0  2B6B               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 15634                           
 15635                           ; BSR set to: 0
 15636  001BA2  2A2D               	incf	USBCtrlTrfRxService@i,f,c
 15637  001BA4                     i2l4688:
 15638                           
 15639                           ; BSR set to: 0
 15640  001BA4  502E               	movf	USBCtrlTrfRxService@byteToRead,w,c
 15641  001BA6  5C2D               	subwf	USBCtrlTrfRxService@i,w,c
 15642  001BA8  A0D8               	btfss	status,0,c
 15643  001BAA  D7EA               	goto	i2l4682
 15644                           
 15645                           ; BSR set to: 0
 15646                           ;usb_device.c: 1877: }
 15647                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
 15648                           
 15649                           ; BSR set to: 0
 15650  001BAC  0100               	movlb	0	; () banked
 15651  001BAE  516E               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 15652  001BB0  0100               	movlb	0	; () banked
 15653  001BB2  116F               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 15654  001BB4  B4D8               	btfsc	status,2,c
 15655  001BB6  D032               	goto	i2l4704
 15656                           
 15657                           ; BSR set to: 0
 15658                           ;usb_device.c: 1882: {
 15659                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
 15660  001BB8  EE20 F001          	lfsr	2,1
 15661  001BBC  5009               	movf	_pBDTEntryEP0OutNext,w,c
 15662  001BBE  26D9               	addwf	fsr2l,f,c
 15663  001BC0  500A               	movf	_pBDTEntryEP0OutNext+1,w,c
 15664  001BC2  22DA               	addwfc	fsr2h,f,c
 15665  001BC4  0E08               	movlw	8
 15666  001BC6  6EDF               	movwf	indf2,c
 15667                           
 15668                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 15669  001BC8  EE20 F002          	lfsr	2,2
 15670  001BCC  5009               	movf	_pBDTEntryEP0OutNext,w,c
 15671  001BCE  26D9               	addwf	fsr2l,f,c
 15672  001BD0  500A               	movf	_pBDTEntryEP0OutNext+1,w,c
 15673  001BD2  22DA               	addwfc	fsr2h,f,c
 15674  001BD4  0E38               	movlw	56
 15675  001BD6  6EDE               	movwf	postinc2,c
 15676  001BD8  0E04               	movlw	4
 15677  001BDA  6EDD               	movwf	postdec2,c
 15678                           
 15679                           ; BSR set to: 0
 15680                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 15681  001BDC  C007  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15682  001BE0  C008  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15683  001BE4  BCDF               	btfsc	indf2,6,c
 15684  001BE6  D00D               	goto	i2l4700
 15685                           
 15686                           ; BSR set to: 0
 15687                           ;usb_device.c: 1886: {
 15688                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 15689  001BE8  C009  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15690  001BEC  C00A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15691  001BF0  0E48               	movlw	72
 15692  001BF2  6EDF               	movwf	indf2,c
 15693                           
 15694                           ; BSR set to: 0
 15695                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15696  001BF4  C009  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15697  001BF8  C00A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15698  001BFC  0E00               	movlw	0
 15699  001BFE  8EDB               	bsf	plusw2,7,c
 15700                           
 15701                           ;usb_device.c: 1889: }
 15702  001C00  0012               	return	
 15703  001C02                     i2l4700:
 15704                           
 15705                           ; BSR set to: 0
 15706                           ;usb_device.c: 1890: else
 15707                           ;usb_device.c: 1891: {
 15708                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 15709  001C02  C009  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15710  001C06  C00A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15711  001C0A  0E08               	movlw	8
 15712  001C0C  6EDF               	movwf	indf2,c
 15713                           
 15714                           ; BSR set to: 0
 15715                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15716  001C0E  C009  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15717  001C12  C00A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15718  001C16  0E00               	movlw	0
 15719  001C18  8EDB               	bsf	plusw2,7,c
 15720                           
 15721                           ; BSR set to: 0
 15722                           ;usb_device.c: 1894: }
 15723                           ;usb_device.c: 1895: }
 15724  001C1A  0012               	return	
 15725  001C1C                     i2l4704:
 15726                           
 15727                           ; BSR set to: 0
 15728                           ;usb_device.c: 1896: else
 15729                           ;usb_device.c: 1897: {
 15730                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 15731  001C1C  EE20 F001          	lfsr	2,1
 15732  001C20  5009               	movf	_pBDTEntryEP0OutNext,w,c
 15733  001C22  26D9               	addwf	fsr2l,f,c
 15734  001C24  500A               	movf	_pBDTEntryEP0OutNext+1,w,c
 15735  001C26  22DA               	addwfc	fsr2h,f,c
 15736  001C28  0E08               	movlw	8
 15737  001C2A  6EDF               	movwf	indf2,c
 15738                           
 15739                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 15740  001C2C  EE20 F002          	lfsr	2,2
 15741  001C30  5009               	movf	_pBDTEntryEP0OutNext,w,c
 15742  001C32  26D9               	addwf	fsr2l,f,c
 15743  001C34  500A               	movf	_pBDTEntryEP0OutNext+1,w,c
 15744  001C36  22DA               	addwfc	fsr2h,f,c
 15745  001C38  0E30               	movlw	48
 15746  001C3A  6EDE               	movwf	postinc2,c
 15747  001C3C  0E04               	movlw	4
 15748  001C3E  6EDD               	movwf	postdec2,c
 15749                           
 15750                           ; BSR set to: 0
 15751                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 15752  001C40  C009  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15753  001C44  C00A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15754  001C48  0E04               	movlw	4
 15755  001C4A  6EDF               	movwf	indf2,c
 15756                           
 15757                           ; BSR set to: 0
 15758                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 15759  001C4C  C009  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15760  001C50  C00A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15761  001C54  0E00               	movlw	0
 15762  001C56  8EDB               	bsf	plusw2,7,c
 15763                           
 15764                           ; BSR set to: 0
 15765                           ;usb_device.c: 1926: }
 15766                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
 15767                           
 15768                           ; BSR set to: 0
 15769                           ;usb_device.c: 1915: {
 15770                           ;usb_device.c: 1921: outPipes[0].pFunc();
 15771  001C58  0100               	movlb	0	; () banked
 15772  001C5A  9F6D               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 15773                           
 15774                           ; BSR set to: 0
 15775                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
 15776  001C5C  5011               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 15777  001C5E  A4D8               	btfss	status,2,c
 15778  001C60  0012               	return	
 15779                           
 15780                           ; BSR set to: 0
 15781                           ;usb_device.c: 1942: {
 15782                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
 15783  001C62  EC3B  F014         	call	_USBCtrlEPAllowStatusStage	;wreg free
 15784  001C66  0012               	return	
 15785  001C68                     __end_of_USBCtrlTrfRxService:
 15786                           	opt stack 0
 15787                           pclatu	equ	0xFFB
 15788                           pclath	equ	0xFFA
 15789                           tblptru	equ	0xFF8
 15790                           tblptrh	equ	0xFF7
 15791                           tblptrl	equ	0xFF6
 15792                           tablat	equ	0xFF5
 15793                           prodh	equ	0xFF4
 15794                           prodl	equ	0xFF3
 15795                           intcon	equ	0xFF2
 15796                           postinc0	equ	0xFEE
 15797                           fsr0h	equ	0xFEA
 15798                           fsr0l	equ	0xFE9
 15799                           wreg	equ	0xFE8
 15800                           indf1	equ	0xFE7
 15801                           postdec1	equ	0xFE5
 15802                           fsr1h	equ	0xFE2
 15803                           fsr1l	equ	0xFE1
 15804                           indf2	equ	0xFDF
 15805                           postinc2	equ	0xFDE
 15806                           postdec2	equ	0xFDD
 15807                           plusw2	equ	0xFDB
 15808                           fsr2h	equ	0xFDA
 15809                           fsr2l	equ	0xFD9
 15810                           status	equ	0xFD8
 15811                           
 15812 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 15813 ;; Defined at:
 15814 ;;		line 1416 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_d
      +evice.c"
 15815 ;; Parameters:    Size  Location     Type
 15816 ;;		None
 15817 ;; Auto vars:     Size  Location     Type
 15818 ;;		None
 15819 ;; Return value:  Size  Location     Type
 15820 ;;		None               void
 15821 ;; Registers used:
 15822 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15823 ;; Tracked objects:
 15824 ;;		On entry : 0/0
 15825 ;;		On exit  : 0/0
 15826 ;;		Unchanged: 0/0
 15827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15828 ;;      Params:         0       0       0       0       0       0       0       0       0
 15829 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15830 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15831 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15832 ;;Total ram usage:        0 bytes
 15833 ;; Hardware stack levels used:    1
 15834 ;; This function calls:
 15835 ;;		Nothing
 15836 ;; This function is called by:
 15837 ;;		_USBDeviceTasks
 15838 ;;		_USBCtrlEPServiceComplete
 15839 ;;		_USBCtrlTrfRxService
 15840 ;; This function uses a non-reentrant model
 15841 ;;
 15842                           
 15843                           	psect	text77
 15844  002876                     __ptext77:
 15845                           	opt stack 0
 15846  002876                     _USBCtrlEPAllowStatusStage:
 15847                           	opt stack 20
 15848                           
 15849                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
 15850                           
 15851                           ;incstack = 0
 15852  002876  5012               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 15853  002878  A4D8               	btfss	status,2,c
 15854  00287A  0012               	return	
 15855                           
 15856                           ;usb_device.c: 1424: {
 15857                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
 15858  00287C  0E01               	movlw	1
 15859  00287E  6E12               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 15860                           
 15861                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
 15862  002880  5013               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 15863  002882  A4D8               	btfss	status,2,c
 15864  002884  0012               	return	
 15865                           
 15866                           ;usb_device.c: 1427: {
 15867                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
 15868  002886  0E01               	movlw	1
 15869  002888  6E13               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 15870                           
 15871                           ;usb_device.c: 1432: if(controlTransferState == 2)
 15872  00288A  0E02               	movlw	2
 15873  00288C  1816               	xorwf	_controlTransferState,w,c	;volatile
 15874  00288E  A4D8               	btfss	status,2,c
 15875  002890  D016               	goto	i2l4320
 15876                           
 15877                           ;usb_device.c: 1433: {
 15878                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
 15879  002892  0100               	movlb	0	; () banked
 15880  002894  EE20 F001          	lfsr	2,1
 15881  002898  5178               	movf	_pBDTEntryIn& (0+255),w,b
 15882  00289A  26D9               	addwf	fsr2l,f,c
 15883  00289C  5179               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 15884  00289E  22DA               	addwfc	fsr2h,f,c
 15885  0028A0  0E00               	movlw	0
 15886  0028A2  6EDF               	movwf	indf2,c
 15887                           
 15888                           ; BSR set to: 0
 15889                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 15890  0028A4  C078  FFD9         	movff	_pBDTEntryIn,fsr2l
 15891  0028A8  C079  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15892  0028AC  0E48               	movlw	72
 15893  0028AE  6EDF               	movwf	indf2,c
 15894                           
 15895                           ; BSR set to: 0
 15896                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
 15897  0028B0  C078  FFD9         	movff	_pBDTEntryIn,fsr2l
 15898  0028B4  C079  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 15899  0028B8  0E00               	movlw	0
 15900  0028BA  8EDB               	bsf	plusw2,7,c
 15901                           
 15902                           ;usb_device.c: 1437: }
 15903  0028BC  0012               	return	
 15904  0028BE                     i2l4320:
 15905                           
 15906                           ;usb_device.c: 1438: else if(controlTransferState == 1)
 15907  0028BE  0416               	decf	_controlTransferState,w,c	;volatile
 15908  0028C0  A4D8               	btfss	status,2,c
 15909  0028C2  0012               	return	
 15910                           
 15911                           ;usb_device.c: 1439: {
 15912                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
 15913  0028C4  0E00               	movlw	0
 15914  0028C6  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 15915                           
 15916                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
 15917  0028C8  EE20 F001          	lfsr	2,1
 15918  0028CC  5007               	movf	_pBDTEntryEP0OutCurrent,w,c
 15919  0028CE  26D9               	addwf	fsr2l,f,c
 15920  0028D0  5008               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 15921  0028D2  22DA               	addwfc	fsr2h,f,c
 15922  0028D4  0E08               	movlw	8
 15923  0028D6  6EDF               	movwf	indf2,c
 15924                           
 15925                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 15926  0028D8  EE20 F002          	lfsr	2,2
 15927  0028DC  5007               	movf	_pBDTEntryEP0OutCurrent,w,c
 15928  0028DE  26D9               	addwf	fsr2l,f,c
 15929  0028E0  5008               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 15930  0028E2  22DA               	addwfc	fsr2h,f,c
 15931  0028E4  0E30               	movlw	48
 15932  0028E6  6EDE               	movwf	postinc2,c
 15933  0028E8  0E04               	movlw	4
 15934  0028EA  6EDD               	movwf	postdec2,c
 15935                           
 15936                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 15937  0028EC  C007  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15938  0028F0  C008  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15939  0028F4  0E04               	movlw	4
 15940  0028F6  6EDF               	movwf	indf2,c
 15941                           
 15942                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 15943  0028F8  C007  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 15944  0028FC  C008  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 15945  002900  0E00               	movlw	0
 15946  002902  8EDB               	bsf	plusw2,7,c
 15947                           
 15948                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
 15949  002904  0E01               	movlw	1
 15950  002906  6E0D               	movwf	_BothEP0OutUOWNsSet,c	;volatile
 15951                           
 15952                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
 15953  002908  EE20 F001          	lfsr	2,1
 15954  00290C  5009               	movf	_pBDTEntryEP0OutNext,w,c
 15955  00290E  26D9               	addwf	fsr2l,f,c
 15956  002910  500A               	movf	_pBDTEntryEP0OutNext+1,w,c
 15957  002912  22DA               	addwfc	fsr2h,f,c
 15958  002914  0E08               	movlw	8
 15959  002916  6EDF               	movwf	indf2,c
 15960                           
 15961                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 15962  002918  EE20 F002          	lfsr	2,2
 15963  00291C  5009               	movf	_pBDTEntryEP0OutNext,w,c
 15964  00291E  26D9               	addwf	fsr2l,f,c
 15965  002920  500A               	movf	_pBDTEntryEP0OutNext+1,w,c
 15966  002922  22DA               	addwfc	fsr2h,f,c
 15967  002924  0E30               	movlw	48
 15968  002926  6EDE               	movwf	postinc2,c
 15969  002928  0E04               	movlw	4
 15970  00292A  6EDD               	movwf	postdec2,c
 15971                           
 15972                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 15973  00292C  C009  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 15974  002930  C00A  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 15975  002934  0E80               	movlw	128
 15976  002936  6EDF               	movwf	indf2,c
 15977  002938  0012               	return	
 15978  00293A                     __end_of_USBCtrlEPAllowStatusStage:
 15979                           	opt stack 0
 15980                           pclatu	equ	0xFFB
 15981                           pclath	equ	0xFFA
 15982                           tblptru	equ	0xFF8
 15983                           tblptrh	equ	0xFF7
 15984                           tblptrl	equ	0xFF6
 15985                           tablat	equ	0xFF5
 15986                           prodh	equ	0xFF4
 15987                           prodl	equ	0xFF3
 15988                           intcon	equ	0xFF2
 15989                           postinc0	equ	0xFEE
 15990                           fsr0h	equ	0xFEA
 15991                           fsr0l	equ	0xFE9
 15992                           wreg	equ	0xFE8
 15993                           indf1	equ	0xFE7
 15994                           postdec1	equ	0xFE5
 15995                           fsr1h	equ	0xFE2
 15996                           fsr1l	equ	0xFE1
 15997                           indf2	equ	0xFDF
 15998                           postinc2	equ	0xFDE
 15999                           postdec2	equ	0xFDD
 16000                           plusw2	equ	0xFDB
 16001                           fsr2h	equ	0xFDA
 16002                           fsr2l	equ	0xFD9
 16003                           status	equ	0xFD8
 16004                           
 16005 ;; *************** function _USBCtrlTrfInHandler *****************
 16006 ;; Defined at:
 16007 ;;		line 2595 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_d
      +evice.c"
 16008 ;; Parameters:    Size  Location     Type
 16009 ;;		None
 16010 ;; Auto vars:     Size  Location     Type
 16011 ;;  lastDTS         1    1[COMRAM] unsigned char 
 16012 ;; Return value:  Size  Location     Type
 16013 ;;		None               void
 16014 ;; Registers used:
 16015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16016 ;; Tracked objects:
 16017 ;;		On entry : 0/0
 16018 ;;		On exit  : 0/0
 16019 ;;		Unchanged: 0/0
 16020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16021 ;;      Params:         0       0       0       0       0       0       0       0       0
 16022 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16023 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16024 ;;      Totals:         1       0       0       0       0       0       0       0       0
 16025 ;;Total ram usage:        1 bytes
 16026 ;; Hardware stack levels used:    1
 16027 ;; Hardware stack levels required when called:    1
 16028 ;; This function calls:
 16029 ;;		_USBCtrlTrfTxService
 16030 ;; This function is called by:
 16031 ;;		_USBCtrlEPService
 16032 ;; This function uses a non-reentrant model
 16033 ;;
 16034                           
 16035                           	psect	text78
 16036  00293A                     __ptext78:
 16037                           	opt stack 0
 16038  00293A                     _USBCtrlTrfInHandler:
 16039                           	opt stack 21
 16040                           
 16041                           ;usb_device.c: 2597: uint8_t lastDTS;
 16042                           ;usb_device.c: 2599: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 16043                           
 16044                           ;incstack = 0
 16045  00293A  C078  FFD9         	movff	_pBDTEntryIn,fsr2l
 16046  00293E  C079  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16047  002942  0E00               	movlw	0
 16048  002944  BCDF               	btfsc	indf2,6,c
 16049  002946  0E01               	movlw	1
 16050  002948  6E2E               	movwf	USBCtrlTrfInHandler@lastDTS,c
 16051                           
 16052                           ;usb_device.c: 2602: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 16053  00294A  0E04               	movlw	4
 16054  00294C  0100               	movlb	0	; () banked
 16055  00294E  1B78               	xorwf	_pBDTEntryIn& (0+255),f,b
 16056                           
 16057                           ; BSR set to: 0
 16058                           ;usb_device.c: 2607: if(USBDeviceState == ADR_PENDING_STATE)
 16059  002950  0E08               	movlw	8
 16060  002952  0100               	movlb	0	; () banked
 16061  002954  199F               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 16062  002956  A4D8               	btfss	status,2,c
 16063  002958  D00C               	goto	i2l5360
 16064                           
 16065                           ; BSR set to: 0
 16066                           ;usb_device.c: 2608: {
 16067                           ;usb_device.c: 2609: UADDR = (SetupPkt.bDevADR & 0x7F);
 16068  00295A  0104               	movlb	4	; () banked
 16069  00295C  5132               	movf	50,w,b	;volatile
 16070  00295E  0B7F               	andlw	127
 16071  002960  6E6E               	movwf	3950,c	;volatile
 16072                           
 16073                           ; BSR set to: 4
 16074                           ;usb_device.c: 2610: if(UADDR != 0u)
 16075  002962  506E               	movf	3950,w,c	;volatile
 16076  002964  B4D8               	btfsc	status,2,c
 16077  002966  D002               	goto	i2l5358
 16078                           
 16079                           ; BSR set to: 4
 16080                           ;usb_device.c: 2611: {
 16081                           ;usb_device.c: 2612: USBDeviceState=ADDRESS_STATE;
 16082  002968  0E10               	movlw	16
 16083  00296A  D001               	goto	L55
 16084  00296C                     i2l5358:
 16085                           
 16086                           ;usb_device.c: 2614: else
 16087                           ;usb_device.c: 2615: {
 16088                           ;usb_device.c: 2616: USBDeviceState=DEFAULT_STATE;
 16089  00296C  0E04               	movlw	4
 16090  00296E                     L55:
 16091  00296E  0100               	movlb	0	; () banked
 16092  002970  6F9F               	movwf	_USBDeviceState& (0+255),b	;volatile
 16093  002972                     i2l5360:
 16094                           
 16095                           ; BSR set to: 0
 16096                           ;usb_device.c: 2617: }
 16097                           ;usb_device.c: 2618: }
 16098                           ;usb_device.c: 2621: if(controlTransferState == 1)
 16099  002972  0416               	decf	_controlTransferState,w,c	;volatile
 16100  002974  A4D8               	btfss	status,2,c
 16101  002976  D03B               	goto	i2l717
 16102                           
 16103                           ; BSR set to: 0
 16104                           ;usb_device.c: 2622: {
 16105                           ;usb_device.c: 2623: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 16106  002978  0100               	movlb	0	; () banked
 16107  00297A  EE20 F002          	lfsr	2,2
 16108  00297E  5178               	movf	_pBDTEntryIn& (0+255),w,b
 16109  002980  26D9               	addwf	fsr2l,f,c
 16110  002982  5179               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 16111  002984  22DA               	addwfc	fsr2h,f,c
 16112  002986  0E38               	movlw	56
 16113  002988  6EDE               	movwf	postinc2,c
 16114  00298A  0E04               	movlw	4
 16115  00298C  6EDD               	movwf	postdec2,c
 16116                           
 16117                           ; BSR set to: 0
 16118                           ;usb_device.c: 2624: USBCtrlTrfTxService();
 16119  00298E  ECD4  F011         	call	_USBCtrlTrfTxService	;wreg free
 16120                           
 16121                           ;usb_device.c: 2630: if(shortPacketStatus == 2)
 16122  002992  0E02               	movlw	2
 16123  002994  1819               	xorwf	_shortPacketStatus,w,c	;volatile
 16124  002996  A4D8               	btfss	status,2,c
 16125  002998  D00D               	goto	i2l5372
 16126                           
 16127                           ;usb_device.c: 2631: {
 16128                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val = 0x04;
 16129  00299A  C078  FFD9         	movff	_pBDTEntryIn,fsr2l
 16130  00299E  C079  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16131  0029A2  0E04               	movlw	4
 16132  0029A4  6EDF               	movwf	indf2,c
 16133                           
 16134                           ;usb_device.c: 2635: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16135  0029A6  C078  FFD9         	movff	_pBDTEntryIn,fsr2l
 16136  0029AA  C079  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16137  0029AE  0E00               	movlw	0
 16138  0029B0  8EDB               	bsf	plusw2,7,c
 16139                           
 16140                           ;usb_device.c: 2636: }
 16141  0029B2  0012               	return	
 16142  0029B4                     i2l5372:
 16143                           
 16144                           ;usb_device.c: 2637: else
 16145                           ;usb_device.c: 2638: {
 16146                           ;usb_device.c: 2639: if(lastDTS == 0)
 16147  0029B4  502E               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 16148  0029B6  A4D8               	btfss	status,2,c
 16149  0029B8  D00D               	goto	i2l5378
 16150                           
 16151                           ;usb_device.c: 2640: {
 16152                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 16153  0029BA  C078  FFD9         	movff	_pBDTEntryIn,fsr2l
 16154  0029BE  C079  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16155  0029C2  0E48               	movlw	72
 16156  0029C4  6EDF               	movwf	indf2,c
 16157                           
 16158                           ;usb_device.c: 2642: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16159  0029C6  C078  FFD9         	movff	_pBDTEntryIn,fsr2l
 16160  0029CA  C079  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16161  0029CE  0E00               	movlw	0
 16162  0029D0  8EDB               	bsf	plusw2,7,c
 16163                           
 16164                           ;usb_device.c: 2643: }
 16165  0029D2  0012               	return	
 16166  0029D4                     i2l5378:
 16167                           
 16168                           ;usb_device.c: 2644: else
 16169                           ;usb_device.c: 2645: {
 16170                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 16171  0029D4  C078  FFD9         	movff	_pBDTEntryIn,fsr2l
 16172  0029D8  C079  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16173  0029DC  0E08               	movlw	8
 16174  0029DE  6EDF               	movwf	indf2,c
 16175                           
 16176                           ;usb_device.c: 2647: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16177  0029E0  C078  FFD9         	movff	_pBDTEntryIn,fsr2l
 16178  0029E4  C079  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16179  0029E8  0E00               	movlw	0
 16180  0029EA  8EDB               	bsf	plusw2,7,c
 16181                           
 16182                           ;usb_device.c: 2648: }
 16183                           ;usb_device.c: 2649: }
 16184                           ;usb_device.c: 2650: }
 16185  0029EC  0012               	return	
 16186  0029EE                     i2l717:
 16187                           
 16188                           ; BSR set to: 0
 16189                           ;usb_device.c: 2651: else
 16190                           ;usb_device.c: 2652: {
 16191                           ;usb_device.c: 2656: if(outPipes[0].info.bits.busy == 1)
 16192  0029EE  0100               	movlb	0	; () banked
 16193  0029F0  AF6D               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 16194  0029F2  D002               	goto	i2l5384
 16195                           
 16196                           ; BSR set to: 0
 16197                           ;usb_device.c: 2661: }
 16198                           ;usb_device.c: 2662: outPipes[0].info.bits.busy = 0;
 16199                           
 16200                           ; BSR set to: 0
 16201                           ;usb_device.c: 2659: {
 16202                           ;usb_device.c: 2660: outPipes[0].pFunc();
 16203  0029F4  0100               	movlb	0	; () banked
 16204  0029F6  9F6D               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 16205  0029F8                     i2l5384:
 16206                           
 16207                           ; BSR set to: 0
 16208                           ;usb_device.c: 2663: }
 16209                           ;usb_device.c: 2665: controlTransferState = 0;
 16210  0029F8  0E00               	movlw	0
 16211  0029FA  6E16               	movwf	_controlTransferState,c	;volatile
 16212  0029FC  0012               	return	
 16213  0029FE                     __end_of_USBCtrlTrfInHandler:
 16214                           	opt stack 0
 16215                           pclatu	equ	0xFFB
 16216                           pclath	equ	0xFFA
 16217                           tblptru	equ	0xFF8
 16218                           tblptrh	equ	0xFF7
 16219                           tblptrl	equ	0xFF6
 16220                           tablat	equ	0xFF5
 16221                           prodh	equ	0xFF4
 16222                           prodl	equ	0xFF3
 16223                           intcon	equ	0xFF2
 16224                           postinc0	equ	0xFEE
 16225                           fsr0h	equ	0xFEA
 16226                           fsr0l	equ	0xFE9
 16227                           wreg	equ	0xFE8
 16228                           indf1	equ	0xFE7
 16229                           postdec1	equ	0xFE5
 16230                           fsr1h	equ	0xFE2
 16231                           fsr1l	equ	0xFE1
 16232                           indf2	equ	0xFDF
 16233                           postinc2	equ	0xFDE
 16234                           postdec2	equ	0xFDD
 16235                           plusw2	equ	0xFDB
 16236                           fsr2h	equ	0xFDA
 16237                           fsr2l	equ	0xFD9
 16238                           status	equ	0xFD8
 16239                           
 16240 ;; *************** function _USBCtrlTrfTxService *****************
 16241 ;; Defined at:
 16242 ;;		line 1771 in file "D:/Elec/Modelisme/Chargeur/Conception/Firmware/Chargeur.X/mla/v2014_07_22/framework/usb/src/usb_d
      +evice.c"
 16243 ;; Parameters:    Size  Location     Type
 16244 ;;		None
 16245 ;; Auto vars:     Size  Location     Type
 16246 ;;  byteToSend      1    0[COMRAM] unsigned char 
 16247 ;; Return value:  Size  Location     Type
 16248 ;;		None               void
 16249 ;; Registers used:
 16250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16251 ;; Tracked objects:
 16252 ;;		On entry : 0/0
 16253 ;;		On exit  : 0/0
 16254 ;;		Unchanged: 0/0
 16255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16256 ;;      Params:         0       0       0       0       0       0       0       0       0
 16257 ;;      Locals:         1       0       0       0       0       0       0       0       0
 16258 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16259 ;;      Totals:         1       0       0       0       0       0       0       0       0
 16260 ;;Total ram usage:        1 bytes
 16261 ;; Hardware stack levels used:    1
 16262 ;; This function calls:
 16263 ;;		Nothing
 16264 ;; This function is called by:
 16265 ;;		_USBCtrlEPAllowDataStage
 16266 ;;		_USBCtrlTrfInHandler
 16267 ;; This function uses a non-reentrant model
 16268 ;;
 16269                           
 16270                           	psect	text79
 16271  0023A8                     __ptext79:
 16272                           	opt stack 0
 16273  0023A8                     _USBCtrlTrfTxService:
 16274                           	opt stack 19
 16275                           
 16276                           ;usb_device.c: 1773: uint8_t byteToSend;
 16277                           ;usb_device.c: 1777: byteToSend = 8;
 16278                           
 16279                           ;incstack = 0
 16280  0023A8  0E08               	movlw	8
 16281  0023AA  6E2D               	movwf	USBCtrlTrfTxService@byteToSend,c
 16282                           
 16283                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
 16284  0023AC  0100               	movlb	0	; () banked
 16285  0023AE  5177               	movf	(_inPipes+5)& (0+255),w,b	;volatile
 16286  0023B0  E111               	bnz	i2l4268
 16287  0023B2  0E08               	movlw	8
 16288  0023B4  0100               	movlb	0	; () banked
 16289  0023B6  5D76               	subwf	(_inPipes+4)& (0+255),w,b	;volatile
 16290  0023B8  B0D8               	btfsc	status,0,c
 16291  0023BA  D00C               	goto	i2l4268
 16292                           
 16293                           ; BSR set to: 0
 16294                           ;usb_device.c: 1779: {
 16295                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
 16296  0023BC  C076  F02D         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 16297                           
 16298                           ; BSR set to: 0
 16299                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
 16300  0023C0  5019               	movf	_shortPacketStatus,w,c	;volatile
 16301  0023C2  A4D8               	btfss	status,2,c
 16302  0023C4  D002               	goto	i2l4264
 16303                           
 16304                           ; BSR set to: 0
 16305                           ;usb_device.c: 1788: {
 16306                           ;usb_device.c: 1789: shortPacketStatus = 1;
 16307  0023C6  0E01               	movlw	1
 16308  0023C8  D004               	goto	L56
 16309  0023CA                     i2l4264:
 16310                           
 16311                           ; BSR set to: 0
 16312                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
 16313  0023CA  0419               	decf	_shortPacketStatus,w,c	;volatile
 16314  0023CC  A4D8               	btfss	status,2,c
 16315  0023CE  D002               	goto	i2l4268
 16316                           
 16317                           ; BSR set to: 0
 16318                           ;usb_device.c: 1792: {
 16319                           ;usb_device.c: 1793: shortPacketStatus = 2;
 16320  0023D0  0E02               	movlw	2
 16321  0023D2                     L56:
 16322  0023D2  6E19               	movwf	_shortPacketStatus,c	;volatile
 16323  0023D4                     i2l4268:
 16324                           
 16325                           ; BSR set to: 0
 16326                           ;usb_device.c: 1794: }
 16327                           ;usb_device.c: 1795: }
 16328                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
 16329  0023D4  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 16330  0023D6  0100               	movlb	0	; () banked
 16331  0023D8  5F76               	subwf	(_inPipes+4)& (0+255),f,b	;volatile
 16332  0023DA  0E00               	movlw	0
 16333  0023DC  5B77               	subwfb	(_inPipes+5)& (0+255),f,b	;volatile
 16334                           
 16335                           ; BSR set to: 0
 16336                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
 16337  0023DE  0100               	movlb	0	; () banked
 16338  0023E0  EE20 F001          	lfsr	2,1
 16339  0023E4  5178               	movf	_pBDTEntryIn& (0+255),w,b
 16340  0023E6  26D9               	addwf	fsr2l,f,c
 16341  0023E8  5179               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 16342  0023EA  22DA               	addwfc	fsr2h,f,c
 16343  0023EC  C02D  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 16344                           
 16345                           ; BSR set to: 0
 16346                           ;usb_device.c: 1808: pDst = (volatile uint8_t*)CtrlTrfData;
 16347  0023F0  0E38               	movlw	56
 16348  0023F2  6E0B               	movwf	_pDst,c
 16349  0023F4  0E04               	movlw	4
 16350  0023F6  6E0C               	movwf	_pDst+1,c
 16351                           
 16352                           ; BSR set to: 0
 16353                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 16354  0023F8  0100               	movlb	0	; () banked
 16355  0023FA  A175               	btfss	(_inPipes+3)& (0+255),0,b	;volatile
 16356  0023FC  D01C               	goto	i2l4286
 16357  0023FE  D03A               	goto	i2l4296
 16358  002400                     i2l4278:
 16359                           
 16360                           ; BSR set to: 0
 16361                           ;usb_device.c: 1812: {
 16362                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
 16363  002400  C072  FFF6         	movff	_inPipes,tblptrl	;volatile
 16364  002404  C073  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 16365  002408  6AF8               	clrf	tblptru,c
 16366  00240A  C00B  FFD9         	movff	_pDst,fsr2l
 16367  00240E  C00C  FFDA         	movff	_pDst+1,fsr2h
 16368  002412  0E07               	movlw	(high __ramtop+-1)
 16369  002414  64F7               	cpfsgt	tblptrh,c
 16370  002416  D003               	bra	i2u336_47
 16371  002418  0008               	tblrd		*
 16372  00241A  50F5               	movf	tablat,w,c
 16373  00241C  D005               	bra	i2u336_40
 16374  00241E                     i2u336_47:
 16375  00241E  CFF6 FFE1          	movff	tblptrl,fsr1l
 16376  002422  CFF7 FFE2          	movff	tblptrh,fsr1h
 16377  002426  50E7               	movf	indf1,w,c
 16378  002428                     i2u336_40:
 16379  002428  6EDF               	movwf	indf2,c
 16380  00242A  0100               	movlb	0	; () banked
 16381  00242C  4B72               	infsnz	_inPipes& (0+255),f,b	;volatile
 16382  00242E  2B73               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 16383                           
 16384                           ; BSR set to: 0
 16385  002430  4A0B               	infsnz	_pDst,f,c
 16386  002432  2A0C               	incf	_pDst+1,f,c
 16387                           
 16388                           ; BSR set to: 0
 16389                           ;usb_device.c: 1814: byteToSend--;
 16390  002434  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 16391  002436                     i2l4286:
 16392                           
 16393                           ; BSR set to: 0
 16394  002436  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 16395  002438  B4D8               	btfsc	status,2,c
 16396  00243A  0012               	return	
 16397  00243C  D7E1               	goto	i2l4278
 16398  00243E                     i2l4288:
 16399                           
 16400                           ; BSR set to: 0
 16401                           ;usb_device.c: 1820: {
 16402                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
 16403  00243E  C072  FFF6         	movff	_inPipes,tblptrl	;volatile
 16404  002442  C073  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 16405  002446  6AF8               	clrf	tblptru,c
 16406  002448  C00B  FFD9         	movff	_pDst,fsr2l
 16407  00244C  C00C  FFDA         	movff	_pDst+1,fsr2h
 16408  002450  0E07               	movlw	(high __ramtop+-1)
 16409  002452  64F7               	cpfsgt	tblptrh,c
 16410  002454  D003               	bra	i2u338_47
 16411  002456  0008               	tblrd		*
 16412  002458  50F5               	movf	tablat,w,c
 16413  00245A  D005               	bra	i2u338_40
 16414  00245C                     i2u338_47:
 16415  00245C  CFF6 FFE1          	movff	tblptrl,fsr1l
 16416  002460  CFF7 FFE2          	movff	tblptrh,fsr1h
 16417  002464  50E7               	movf	indf1,w,c
 16418  002466                     i2u338_40:
 16419  002466  6EDF               	movwf	indf2,c
 16420  002468  0100               	movlb	0	; () banked
 16421  00246A  4B72               	infsnz	_inPipes& (0+255),f,b	;volatile
 16422  00246C  2B73               	incf	(_inPipes+1)& (0+255),f,b	;volatile
 16423                           
 16424                           ; BSR set to: 0
 16425  00246E  4A0B               	infsnz	_pDst,f,c
 16426  002470  2A0C               	incf	_pDst+1,f,c
 16427                           
 16428                           ; BSR set to: 0
 16429                           ;usb_device.c: 1822: byteToSend--;
 16430  002472  062D               	decf	USBCtrlTrfTxService@byteToSend,f,c
 16431  002474                     i2l4296:
 16432                           
 16433                           ; BSR set to: 0
 16434  002474  502D               	movf	USBCtrlTrfTxService@byteToSend,w,c
 16435  002476  B4D8               	btfsc	status,2,c
 16436  002478  0012               	return	
 16437  00247A  D7E1               	goto	i2l4288
 16438  00247C                     __end_of_USBCtrlTrfTxService:
 16439                           	opt stack 0
 16440                           pclatu	equ	0xFFB
 16441                           pclath	equ	0xFFA
 16442                           tblptru	equ	0xFF8
 16443                           tblptrh	equ	0xFF7
 16444                           tblptrl	equ	0xFF6
 16445                           tablat	equ	0xFF5
 16446                           prodh	equ	0xFF4
 16447                           prodl	equ	0xFF3
 16448                           intcon	equ	0xFF2
 16449                           postinc0	equ	0xFEE
 16450                           fsr0h	equ	0xFEA
 16451                           fsr0l	equ	0xFE9
 16452                           wreg	equ	0xFE8
 16453                           indf1	equ	0xFE7
 16454                           postdec1	equ	0xFE5
 16455                           fsr1h	equ	0xFE2
 16456                           fsr1l	equ	0xFE1
 16457                           indf2	equ	0xFDF
 16458                           postinc2	equ	0xFDE
 16459                           postdec2	equ	0xFDD
 16460                           plusw2	equ	0xFDB
 16461                           fsr2h	equ	0xFDA
 16462                           fsr2l	equ	0xFD9
 16463                           status	equ	0xFD8
 16464                           pclatu	equ	0xFFB
 16465                           pclath	equ	0xFFA
 16466                           tblptru	equ	0xFF8
 16467                           tblptrh	equ	0xFF7
 16468                           tblptrl	equ	0xFF6
 16469                           tablat	equ	0xFF5
 16470                           prodh	equ	0xFF4
 16471                           prodl	equ	0xFF3
 16472                           intcon	equ	0xFF2
 16473                           postinc0	equ	0xFEE
 16474                           fsr0h	equ	0xFEA
 16475                           fsr0l	equ	0xFE9
 16476                           wreg	equ	0xFE8
 16477                           indf1	equ	0xFE7
 16478                           postdec1	equ	0xFE5
 16479                           fsr1h	equ	0xFE2
 16480                           fsr1l	equ	0xFE1
 16481                           indf2	equ	0xFDF
 16482                           postinc2	equ	0xFDE
 16483                           postdec2	equ	0xFDD
 16484                           plusw2	equ	0xFDB
 16485                           fsr2h	equ	0xFDA
 16486                           fsr2l	equ	0xFD9
 16487                           status	equ	0xFD8
 16488                           
 16489                           	psect	rparam
 16490  0000                     pclatu	equ	0xFFB
 16491                           pclath	equ	0xFFA
 16492                           tblptru	equ	0xFF8
 16493                           tblptrh	equ	0xFF7
 16494                           tblptrl	equ	0xFF6
 16495                           tablat	equ	0xFF5
 16496                           prodh	equ	0xFF4
 16497                           prodl	equ	0xFF3
 16498                           intcon	equ	0xFF2
 16499                           postinc0	equ	0xFEE
 16500                           fsr0h	equ	0xFEA
 16501                           fsr0l	equ	0xFE9
 16502                           wreg	equ	0xFE8
 16503                           indf1	equ	0xFE7
 16504                           postdec1	equ	0xFE5
 16505                           fsr1h	equ	0xFE2
 16506                           fsr1l	equ	0xFE1
 16507                           indf2	equ	0xFDF
 16508                           postinc2	equ	0xFDE
 16509                           postdec2	equ	0xFDD
 16510                           plusw2	equ	0xFDB
 16511                           fsr2h	equ	0xFDA
 16512                           fsr2l	equ	0xFD9
 16513                           status	equ	0xFD8
 16514                           
 16515                           	psect	temp
 16516  000059                     btemp:
 16517                           	opt stack 0
 16518  000059                     	ds	1
 16519  0000                     int$flags	set	btemp
 16520                           pclatu	equ	0xFFB
 16521                           pclath	equ	0xFFA
 16522                           tblptru	equ	0xFF8
 16523                           tblptrh	equ	0xFF7
 16524                           tblptrl	equ	0xFF6
 16525                           tablat	equ	0xFF5
 16526                           prodh	equ	0xFF4
 16527                           prodl	equ	0xFF3
 16528                           intcon	equ	0xFF2
 16529                           postinc0	equ	0xFEE
 16530                           fsr0h	equ	0xFEA
 16531                           fsr0l	equ	0xFE9
 16532                           wreg	equ	0xFE8
 16533                           indf1	equ	0xFE7
 16534                           postdec1	equ	0xFE5
 16535                           fsr1h	equ	0xFE2
 16536                           fsr1l	equ	0xFE1
 16537                           indf2	equ	0xFDF
 16538                           postinc2	equ	0xFDE
 16539                           postdec2	equ	0xFDD
 16540                           plusw2	equ	0xFDB
 16541                           fsr2h	equ	0xFDA
 16542                           fsr2l	equ	0xFD9
 16543                           status	equ	0xFD8


Data Sizes:
    Strings     438
    Constant    239
    Data        15
    BSS         290
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      88
    BANK0           160     70     160
    BANK1           256    119     227
    BANK2           256      0      64
    BANK3           256      0       0
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_37(CODE[9]), STR_36(CODE[4]), STR_35(CODE[6]), STR_34(CODE[9]), 
		 -> STR_33(CODE[4]), STR_32(CODE[6]), STR_31(CODE[9]), STR_30(CODE[4]), 
		 -> STR_29(CODE[6]), STR_27(CODE[6]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 90
		 -> main@end(BANK1[10]), battery(BANK1[90]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 90
		 -> main@end(BANK1[10]), battery(BANK1[90]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_25(CODE[9]), STR_23(CODE[6]), STR_22(CODE[4]), STR_19(CODE[9]), 
		 -> STR_17(CODE[6]), STR_16(CODE[4]), STR_13(CODE[9]), STR_11(CODE[6]), 
		 -> STR_10(CODE[4]), algo_Name(BANK1[15]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 90
		 -> main@end(BANK1[10]), battery.battery_type(BANK1[5]), battery(BANK1[90]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> usb_send@usb_msg(BANK2[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> usb_send@usb_msg(BANK2[64]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_26(CODE[19]), STR_24(CODE[22]), STR_21(CODE[24]), STR_20(CODE[20]), 
		 -> STR_18(CODE[22]), STR_15(CODE[24]), STR_14(CODE[20]), STR_12(CODE[32]), 
		 -> STR_9(CODE[34]), STR_8(CODE[20]), STR_7(CODE[30]), STR_6(CODE[27]), 
		 -> STR_5(CODE[19]), STR_4(CODE[19]), STR_3(CODE[18]), STR_2(CODE[19]), 
		 -> STR_1(CODE[14]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 100
		 -> main@msg_Error(BANK1[100]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 100
		 -> main@msg_Error(BANK1[100]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_28(CODE[33]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 64
		 -> usb_send@usb_msg(BANK2[64]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> usb_send@usb_msg(BANK2[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2154_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2154_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2154_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2154_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S804$pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> Absolute function(), 

    S794$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S794$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S770$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S770$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S770$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S770$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    usb_send@format	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_28(CODE[33]), 

    usb_send@args	PTR void [1] size(2) Largest target is 0
		 -> ?_usb_send(BANK0[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 78
		 -> sd002(CODE[78]), sd001(CODE[56]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    verifie_Ibat@end	PTR unsigned char  size(2) Largest target is 10
		 -> main@end(BANK1[10]), 

    verifie_Vbat@end	PTR unsigned char  size(2) Largest target is 10
		 -> main@end(BANK1[10]), 

    verifie_Precondition@end	PTR unsigned char  size(2) Largest target is 10
		 -> main@end(BANK1[10]), 

    check_Precondition@precondition	PTR short  size(2) Largest target is 2
		 -> main@precondition(BANK1[2]), 

    CalcPI@PIdata	PTR struct . size(2) Largest target is 23
		 -> PI(BANK0[23]), 

    V_Eval@voltage	PTR float  size(2) Largest target is 23
		 -> stop_CV@voltage(BANK0[3]), verifie_Ibat@current(BANK1[3]), verifie_Vbat@voltage(BANK1[3]), verifie_Precondition@voltage(BANK1[3]), 
		 -> check_Precondition@voltage(BANK0[3]), PI(BANK0[23]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 90
		 -> main@end(BANK1[10]), battery(BANK1[90]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 100
		 -> main@msg_Error(BANK1[100]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _main->_stop_CV
    _verifie_Vbat->_I_V_Set
    _verifie_Precondition->_I_V_Set
    _verifie_Ibat->_I_V_Set
    _calc_Time->___awdiv
    _stop_CV->_V_Eval
    _start_Precondition->_I_V_Set
    _start_CV->_I_V_Set
    _start_CC->_I_V_Set
    _I_V_Set->_V_Eval
    _CalcPI->___ftdiv
    ___ftadd->___ftmul
    _check_Precondition->_V_Eval
    _usb_send->_sprintf
    _sprintf->___lwdiv
    _putUSBUSART->_strlen
    _CDCTxService->_USBTransferOnePacket
    ___lwtoft->___ftpack
    ___ftge->___ftmul
    _V_Eval->___ftdiv
    ___ftmul->___awtoft
    ___ftdiv->___ftadd
    ___awtoft->___ftpack
    _InitApp->_USBDeviceInit
    _USBDeviceInit->_memset

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_verifie_Ibat
    _main->_verifie_Precondition
    _main->_verifie_Vbat

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               114   114      0  432157
                                              5 BANK1    114   114      0
                            _InitApp
                         _check_Lipo
                 _check_Precondition
                         _end_Charge
                         _initialize
                        _list_Action
                       _list_Battery
                       _list_Program
                      _select_Action
                     _select_Battery
                     _select_Program
                           _start_CC
                           _start_CV
                 _start_Precondition
                            _stop_CV
                             _strcpy
                            _strncmp
                       _verifie_Ibat
               _verifie_Precondition
                       _verifie_Vbat
 ---------------------------------------------------------------------------------
 (1) _verifie_Vbat                                         7     5      2   72664
                                             67 BANK0      2     0      2
                                              0 BANK1      5     5      0
                            _I_V_Set
                             _V_Eval
                             ___ftge
                            ___ftmul
                           ___lwtoft
                          _calc_Time
                            _strncpy
 ---------------------------------------------------------------------------------
 (1) _verifie_Precondition                                 7     5      2   72664
                                             67 BANK0      2     0      2
                                              0 BANK1      5     5      0
                            _I_V_Set
                             _V_Eval
                             ___ftge
                            ___ftmul
                           ___lwtoft
                          _calc_Time
                            _strncpy
 ---------------------------------------------------------------------------------
 (1) _verifie_Ibat                                         7     5      2   72664
                                             67 BANK0      2     0      2
                                              0 BANK1      5     5      0
                            _I_V_Set
                             _V_Eval
                             ___ftge
                            ___ftmul
                           ___lwtoft
                          _calc_Time
                            _strncpy
 ---------------------------------------------------------------------------------
 (2) _calc_Time                                            8     4      4    1098
                                              8 BANK0      8     4      4
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     653
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _strncmp                                              9     3      6    3936
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               6     2      4    3645
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _stop_CV                                             10     8      2   27419
                                             60 BANK0     10     8      2
                             _V_Eval
                             ___ftge
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) _start_Precondition                                   4     2      2   40724
                                             67 BANK0      2     0      2
                                              0 BANK1      2     2      0
                            _I_V_Set
 ---------------------------------------------------------------------------------
 (1) _start_CV                                             4     2      2   50569
                                             67 BANK0      2     0      2
                                              0 BANK1      2     2      0
                            _I_V_Set
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) _start_CC                                             4     2      2   40724
                                             67 BANK0      2     0      2
                                              0 BANK1      2     2      0
                            _I_V_Set
 ---------------------------------------------------------------------------------
 (2) _I_V_Set                                              7     5      2   40690
                                             60 BANK0      7     5      2
                             _CalcPI
                             _V_Eval
                             ___ftge
 ---------------------------------------------------------------------------------
 (3) _CalcPI                                               5     3      2   23218
                                             54 BANK0      5     3      2
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     127
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    5472
                                             27 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _select_Program                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _select_Battery                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _select_Action                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _list_Program                                         2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _list_Battery                                         2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _list_Action                                          2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initialize                                           2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _end_Charge                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_Precondition                                   7     5      2   40260
                                             60 BANK0      7     5      2
                             _V_Eval
                             ___ftge
                            ___ftmul
                           ___lwtoft
                           _usb_send
 ---------------------------------------------------------------------------------
 (2) _usb_send                                             9     2      7   12712
                                             32 BANK0      9     2      7
                       _CDCTxService
                        _putUSBUSART
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     234
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             29    23      6    9875
                                              7 BANK0     25    19      6
                            ___lwdiv
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    7068
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     449
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     270
                                              6 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2164
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1926
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    4070
                                              8 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6    2606
                                             27 BANK0      9     3      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _V_Eval                                               6     4      2   14764
                                             54 BANK0      6     4      2
                            _BusyADC
                            _ReadADC
                     _SelChanConvADC
                           ___awtoft
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    5775
                                             12 BANK0     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    4335
                                             39 BANK0     15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3900
                                              8 BANK0      4     1      3
                            _ReadADC (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    3415
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) _SelChanConvADC                                       2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_Lipo                                           2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0    5409
                            _OpenADC
                         _OpenTimer1
                    _USBDeviceAttach
                      _USBDeviceInit
                            _strncpy
 ---------------------------------------------------------------------------------
 (2) _strncpy                                              8     2      6    3322
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (2) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenTimer1                                           1     1      0      93
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     633
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _high_isr                                            14    14      0   28817
                                             30 COMRAM    14    14      0
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (7) _USBDeviceTasks                                       1     1      0   28817
                                             29 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (8) i2_USBDeviceInit                                      1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (8) _USBWakeFromSuspend                                   0     0      0    3835
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBSuspend                                           0     0      0    3835
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPService                                     3     3      0   16656
                                             26 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfSetupHandler                               0     0      0   16359
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (10) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (11) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (10) _USBCheckStdRequest                                  0     0      0   12432
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (11) _USBStdSetCfgHandler                                 1     1      0    4333
                                             20 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (9) i2_memset                                             8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (11) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (11) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _USBStdFeatureReqHandler                             6     6      0    4218
                                             20 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    3835
                                             12 COMRAM     8     2      6
            _APP_CustomCDCInitialize
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (9) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _APP_CustomCDCInitialize                              0     0      0    1143
                          _CDCInitEP
 ---------------------------------------------------------------------------------
 (10) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (11) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (11) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (12) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (10) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (11) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (12) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitApp
     _OpenADC
     _OpenTimer1
     _USBDeviceAttach
     _USBDeviceInit
       _memset
     _strncpy
   _check_Lipo
   _check_Precondition
     _V_Eval
       _BusyADC
       _ReadADC
       _SelChanConvADC
       ___awtoft
         _ReadADC (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
     ___ftge
       ___awtoft (ARG)
         _ReadADC (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         _ReadADC (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     _usb_send
       _CDCTxService
         _USBTransferOnePacket
       _putUSBUSART
         _strlen (ARG)
       _sprintf
         ___lwdiv
         ___wmul
         _isdigit
       _strlen
   _end_Charge
   _initialize
   _list_Action
   _list_Battery
   _list_Program
   _select_Action
   _select_Battery
   _select_Program
   _start_CC
     _I_V_Set
       _CalcPI
         ___awtoft
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftadd
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftge
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg
       _V_Eval
         _BusyADC
         _ReadADC
         _SelChanConvADC
         ___awtoft
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
       ___ftge
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
   _start_CV
     _I_V_Set
       _CalcPI
         ___awtoft
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftadd
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftge
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg
       _V_Eval
         _BusyADC
         _ReadADC
         _SelChanConvADC
         ___awtoft
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
       ___ftge
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
     ___ftmul
       ___awtoft (ARG)
         _ReadADC (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _start_Precondition
     _I_V_Set
       _CalcPI
         ___awtoft
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftadd
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftge
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg
       _V_Eval
         _BusyADC
         _ReadADC
         _SelChanConvADC
         ___awtoft
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
       ___ftge
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
   _stop_CV
     _V_Eval
       _BusyADC
       _ReadADC
       _SelChanConvADC
       ___awtoft
         _ReadADC (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
     ___ftge
       ___awtoft (ARG)
         _ReadADC (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         _ReadADC (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _strcpy
   _strncmp
   _verifie_Ibat
     _I_V_Set
       _CalcPI
         ___awtoft
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftadd
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftge
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg
       _V_Eval
         _BusyADC
         _ReadADC
         _SelChanConvADC
         ___awtoft
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
       ___ftge
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
     _V_Eval
       _BusyADC
       _ReadADC
       _SelChanConvADC
       ___awtoft
         _ReadADC (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
     ___ftge
       ___awtoft (ARG)
         _ReadADC (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         _ReadADC (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     _calc_Time
       ___awdiv
     _strncpy
   _verifie_Precondition
     _I_V_Set
       _CalcPI
         ___awtoft
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftadd
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftge
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg
       _V_Eval
         _BusyADC
         _ReadADC
         _SelChanConvADC
         ___awtoft
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
       ___ftge
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
     _V_Eval
       _BusyADC
       _ReadADC
       _SelChanConvADC
       ___awtoft
         _ReadADC (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
     ___ftge
       ___awtoft (ARG)
         _ReadADC (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         _ReadADC (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     _calc_Time
       ___awdiv
     _strncpy
   _verifie_Vbat
     _I_V_Set
       _CalcPI
         ___awtoft
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftadd
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftge
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftneg
       _V_Eval
         _BusyADC
         _ReadADC
         _SelChanConvADC
         ___awtoft
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftdiv
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftadd (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 _ReadADC (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
       ___ftge
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
     _V_Eval
       _BusyADC
       _ReadADC
       _SelChanConvADC
       ___awtoft
         _ReadADC (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftadd (ARG)
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               _ReadADC (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
     ___ftge
       ___awtoft (ARG)
         _ReadADC (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         _ReadADC (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
     _calc_Time
       ___awdiv
     _strncpy

 _high_isr (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_CustomCDCInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
               _USBCheckCDCRequest
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_CustomCDCInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
               _USBCheckCDCRequest
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_CustomCDCInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
             _USBCheckCDCRequest
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_CustomCDCInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
           _USBCheckCDCRequest
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_CustomCDCInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
         _USBCheckCDCRequest
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_CustomCDCInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
         _USBCheckCDCRequest
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_CustomCDCInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
       _USBCheckCDCRequest
     i2_USBDeviceInit
       i2_memset

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      40       9       25.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     77      E3       7       88.7%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     46      A0       5      100.0%
BITBANK5            80      0       0      14        0.0%
BANK5               80      0       0      15        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2C      58       1       93.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     21B      16        0.0%
DATA                 0      0     21B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Oct 25 02:04:37 2015

                              _USB_SD_Ptr 7D61                                V_Eval@temp 00F3  
                                      _PI 00A3                              ___awdiv@sign 00BF  
                             __CFG_BOR$ON 000000                             _USBDeviceInit 1502  
                     ___wmul@multiplicand 00BC                               __CFG_BORV$3 000000  
                      __size_of_CDCInitEP 0066                              __CFG_CP0$OFF 000000  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                            __CFG_CP3$OFF 000000                              ___ftadd@exp1 00E0  
                            ___ftadd@exp2 00DF                               __CFG_LVP$ON 000000  
    USER_USB_CALLBACK_EVENT_HANDLER@event 0039      USER_USB_CALLBACK_EVENT_HANDLER@pdata 003B  
                            ___ftadd@sign 00DE                                       l301 1034  
                                     l313 0EAC                   __size_of_select_Battery 0002  
                                     l306 33E4                                       l252 06C8  
             __end_of_USBStdGetDscHandler 18E2                                       l518 1570  
                                     l294 3390                                       l580 35CC  
                                     l579 35CE                                       _BDT 000400  
                                     l881 12D6                                       l876 127A  
                                     l984 2F96                              __CFG_CPB$OFF 000000  
                            __CFG_CPD$OFF 000000                                       _UIE 000F69  
                                     _UIR 000F68                      _verifie_Precondition 0F0C  
                              _USBSuspend 36EC                      USBStdSetCfgHandler@i 0041  
                                     prod 000FF3                                       wreg 000FE8  
                          _USBDeviceTasks 1A1C                            _USBDeviceState 009F  
                   ??_USBCtrlTrfRxService 002D                  __size_ofi2_USBDeviceInit 013A  
                USBEnableEndpoint@options 0035                             V_Eval@channel 00F2  
                            ___ftdiv@cntr 00EA                              ___ftdiv@sign 00EF  
                            __CFG_WDT$OFF 000000                                      l1014 35F0  
                                    l1016 3606                                      l1017 3608  
                                    l1301 1770                                      l1243 1D40  
                                    l1323 362E                                      l1270 0BBE  
                 __size_of_select_Program 0002                                      l1272 0BE6  
                                    l1281 0CBC                                      l1426 3008  
                                    l1290 0CE6                                      l1266 0B84  
              USBConfigureEndpoint@handle 0033                                      l7100 125A  
                                    l7020 032E                                      l7110 1286  
                                    l7006 02F2                                      l7104 126A  
                                    l7032 039E                                      l7024 034C  
                                    l7008 02F8                                      l7130 1302  
                                    l7122 12DA                                      l7034 03A8  
                                    l7210 2AB2                                      l7202 2A90  
                                    l7140 1332                                      l7116 12BE  
                                    l7044 03E2                                      l7052 0440  
                                    l7028 0366                                      l7310 15B4  
                                    l7150 1360                                      l7038 03BA  
                                    l7062 048C                                      l7070 3406  
                                    l7206 2A9E                                      l7320 1624  
                                    l7240 308E                                      l6600 224C  
                                    l7160 13A0                                      l7056 0466  
                                    l7064 04A8                                      l7072 340C  
                                    l7314 15BE                                      l7306 1594  
                                    l7138 1326                                      l7090 3738  
                                    l7234 2F14                                      l7260 35F2  
                                    l7164 357C                                      l7252 30DE  
                                    l6612 22B2                                      l7156 1376  
                                    l7148 1356                                      l7246 30BE  
                                    l6550 1CA4                                      l7158 137C  
                                    l6702 0D5E                                      l7190 2A4E  
                                    l7168 358E                                      l7248 30CC  
                                    l6560 1D32                                      l6552 1CD4  
                                    l6544 1C82                                      l6712 1694  
                                    l7360 2726                                      l7352 26F2  
                                    l7424 3548                                      l7192 2A5A  
                                    l7184 2A30                                      l7282 1546  
                                    l7098 1250                                      l6626 36B8  
                                    l6650 0BCC                                      l7370 27A2  
                                    l7426 3554                                      l7450 26B6  
                                    l7442 261C                                      l7194 2A60  
                                    l7178 2A1A                                      l6572 1D66  
                                    l6556 1CF4                                      l6548 1C96  
                                    l6820 282E                                      l6644 0B92  
                                    l6900 0838                                      l7612 31CC  
                                    l7452 26C2                                      l7286 1550  
                                    l6566 1D4A                                      l6558 1D24  
                                    l6718 16CE                                      l7446 2660  
                                    l7534 0FBC                                      l7526 0F5A  
                                    l6808 3462                                      l6816 27EE  
                                    l6592 2218                                      l6840 2FB8  
                                    l6920 0066                                      l7472 2164  
                                    l6672 0C4C                                      l6656 0BDC  
                                    l6904 087E                                      l7368 278C  
                                    l7552 1066                                      l7298 157C  
                                    l6738 172E                                      l6826 2872  
                                    l6842 2FC4                                      l6914 0046  
                                    l6674 0C5A                                      l6666 0C1E  
                                    l7634 1144                                      l7626 10E2  
                                    l6764 1418                                      l6852 2FFA  
                                    l6844 2FCA                                      l6940 0130  
                                    l6916 005C                                      l6908 0028  
                                    l7388 307E                                      l7476 21BA  
                                    l6692 0D10                                      l6684 0CA2  
                                    l6676 0C68                                      l7644 1194  
                                    l6782 1484                                      l6758 13DE  
                                    l6862 22FA                                      l6950 017A  
                                    l6926 0096                                      l6934 010C  
                                    l6686 0CB0                                      l6678 0C74  
                                    l7654 11EE                                      l6792 14C2  
                                    l6872 2328                                      l6960 01D8  
                                    l6944 0156                                      l7672 20C4  
                                    l7576 0E34                                      l7568 0DD2  
                                    l6778 1466                                      l6866 2310  
                                    l6970 01FC                                      l6962 01E2  
                                    l6946 016C                                      l7682 2114  
                                    l7594 0EDE                                      l6788 14A4  
                                    l6972 0214                                      l6956 01B2  
                                    l6948 0174                                      l6892 0640  
                                    l6884 0584                                      l6982 0252  
                                    l6966 01EA                                      l6986 0264  
                                    l6978 0234                                      l6994 0294  
                                    l6988 027C                                      l6996 02BE  
                                    STR_1 7FD7                                      STR_2 7FA1  
                                    STR_3 7FB4                                      STR_4 7F8E  
                                    STR_5 7F7B                                      STR_6 7EC9  
                                    STR_7 7EAB                                      STR_8 7F40  
                                    STR_9 7E48                                      u6510 37B8  
                                    u7400 1240                     ??_USBCtrlTrfTxService 002D  
                                    u7408 1244                                      u6801 16AA  
                                    u6571 0B32                                      u6581 0B50  
                                    u6831 13BA                                      _UCFG 000F6F  
                                    u6851 13F4                                      u7820 2658  
                                    _UEP0 000F70                                      u6781 1670  
                                    _UEP1 000F71                                      u7840 2680  
                                    u7827 264E                                      _UEIE 000F6B  
                                    u7847 2676                                      _UEIR 000F6A  
                                    _UCON 000F6D                           _CDCDataInHandle 009A  
  USBStdFeatureReqHandler@current_ep_data 0044                                      _pDst 000B  
                                    _main 37C8                              ___ftpack@arg 00BA  
                ??i2_USBTransferOnePacket 0031                              ___ftpack@exp 00BD  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    fsr0l 000FE9                                      fsr2h 000FDA  
                                    indf1 000FE7                               _BaudRateGen 0001  
                                    fsr1l 000FE1                                      indf2 000FDF  
                                    fsr2l 000FD9                           _USBDeviceAttach 35A6  
                                    btemp 0059                           __end_of_I_V_Set 27AE  
                                    pclat 000FFA               __size_of_check_Precondition 00DA  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 0016                             __CFG_IESO$OFF 000000  
              __end_of_USBCheckStdRequest 1F5C                    ??_USBCtrlTrfOutHandler 002F  
                           V_Eval@voltage 00F0                             __CFG_MCLRE$ON 000000  
                            ___ftmul@cntr 00D3                              ___param_bank 000010  
                            ___ftmul@sign 00D4                           __end_of_BusyADC 37BC  
               ??_USBStdFeatureReqHandler 0041                           __end_of_ReadADC 3770  
                         __end_of_InitApp 2CD2                           __end_of_OpenADC 2F9A  
                ??_USBStdGetStatusHandler 002D                            ?_USBDeviceInit 002D  
                          stop_CV@voltage 00FD                             __CFG_PLLDIV$5 000000  
                                   ?_main 002D                           __end_of___awdiv 2ABC  
                         __end_of___ftadd 0D84                                     STR_10 7FFA  
                                   STR_11 7FF4                                     STR_20 7F54  
                                   STR_12 7E8B                                     STR_13 7FE5  
                                   STR_21 7EFC                                     STR_30 7FFA  
                                   STR_22 7FFA                                     STR_14 7F40  
                                   STR_23 7FF4                                     STR_31 7FE5  
                                   STR_15 7EE4                                     STR_16 7FFA  
                                   STR_32 7FF4                                     STR_24 7F2A  
                                   STR_33 7FFA                                     STR_17 7FF4  
                                   STR_25 7FE5                                     STR_34 7FE5  
                                   STR_26 7F68                                     STR_18 7F14  
                                   STR_35 7FF4                                     STR_19 7FE5  
                                   STR_27 7FEE                                     STR_36 7FFA  
                                   STR_28 7E6A                                     STR_29 7FF4  
                                   STR_37 7FE5                                     STR_38 7FC6  
       __size_of_USBCtrlEPServiceComplete 00F4                           __end_of___ftdiv 17A6  
                         __end_of___ftneg 363C                     ?_verifie_Precondition 00FD  
                         __end_of___ftmul 1502                           ___awdiv@divisor 00BC  
                                   _T1CON 000FCD                    __end_of_USBDeviceTasks 1B50  
               ?_USBCtrlEPServiceComplete 002D                           __end_of___lwdiv 3012  
                                   i2l530 1A48                                     i2l604 1DEE  
                                   i2l540 1AD6                                     i2l541 1B4C  
                                   i2l518 1940                                     i2l542 1AE6  
                                   i2l731 1E78                                     i2l740 1EDE  
                                   i2l717 29EE                                     i2l822 24DA  
                                   i2l670 2B58                                     i2l671 2ADA  
                                   i2l824 251E                                     i2l672 2AE0  
                                   i2l680 34C8                                     i2l746 08C0  
                                   i2l667 2ACA                                     i2l765 0A88  
                                   _UADDR 000F6E                           ___awdiv@counter 00BE  
                                   _TMR1H 000FCF                                     _TMR1L 000FCE  
                           __CFG_USBDIV$2 000000                                     _USTAT 000F6C  
                           __CFG_PWRT$OFF 000000                             __CFG_WRT0$OFF 000000  
      __size_of_USBCtrlEPAllowStatusStage 00C4                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                             __CFG_WRT3$OFF 000000  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                            __CFG_EBTR2$OFF 000000  
                          __CFG_EBTR3$OFF 000000           __end_of_USBCtrlEPAllowDataStage 2D70  
                                   _sd000 7E44                                     _sd001 7DFA  
                                   _sd002 7D69                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                             ___awtoft@sign 00C5  
                              i2memset@p1 002D                           __end_of_isdigit 36C2  
                           ___ftpack@sign 00BE                   __size_of_SelChanConvADC 0022  
                ?_APP_CustomCDCInitialize 002D                                     tablat 000FF5  
                                   plusw2 000FDB                         __end_of_CDCInitEP 323E  
                                   status 000FD8                           __end_of_stop_CV 2120  
                         __end_of_sprintf 04B6                              ?_list_Action 00BA  
                         __end_of_strncmp 26E4                           __end_of_strncpy 30F6  
                        __end_ofi2_memset 3698                           putUSBUSART@data 00C0  
            __size_of_USBStdSetCfgHandler 00E6                           __initialization 323E  
                            CalcPI@PIdata 00F0                              __end_of_main 37D0  
                   __end_of_select_Action 37DC                     _control_signal_bitmap 0017  
               __size_of_USBCtrlEPService 00CE                                    ??_main 0100  
                           __activetblptr 000002                           ?_USBDeviceTasks 002D  
                             ?_USBSuspend 002D                __end_of_start_Precondition 33A8  
                         __CFG_CCP2MX$OFF 000000                              _cdc_mem_type 00A0  
                 __end_of_USBDeviceAttach 35DA                                    _ADCON0 000FC2  
                                  _ADCON1 000FC1                                    _ADCON2 000FC0  
                        _CDCDataOutHandle 0005                                    _ADRESH 000FC4  
                                  _ADRESL 000FC3                          ___awdiv@dividend 00BA  
                               ??_I_V_Set 00F8                          __end_of___awtoft 348A  
                        __end_of___ftpack 1D74                     __size_of_CDCTxService 0188  
                                  i2l4210 24A8                                _OpenTimer1 35DA  
                                  i2l4300 3676                                    i2l4134 2DD2  
                                  i2l4320 28BE                                    i2l4144 34DC  
                                  i2l4240 32A4                                    i2l4304 3686  
                                  i2l4226 2500                                    i2l4218 24C8  
                                  i2l4234 2528                                    i2l4148 34EA  
                                  i2l4164 2BB6                                    i2l4156 2B8C  
                                  i2l4244 32AA                                    i2l4404 17B8  
                                  i2l4238 329E                                    i2l4430 18CA  
                                  i2l4350 2D20                                    i2l6110 1ACA  
                                  i2l6102 1AA6                                    i2l4264 23CA  
                                  i2l4176 2C12                                    i2l4512 0A22  
                                  i2l4424 18BA                                    i2l4416 1860  
                                  i2l4408 17D0                                    i2l4522 0A68  
                                  i2l4506 09EC                                    i2l4426 18C2  
                                  i2l4418 1868                                    i2l4442 2B00  
                                  i2l4370 1F9E                                    i2l4354 2D3C  
                                  i2l6130 1B0C                                    i2l6050 1A34  
                                  i2l4268 23D4                                    i2l4700 1C02  
                                  i2l4540 0AF6                                    i2l4532 0AA4  
                                  i2l4524 0A74                                    i2l4508 0A08  
                                  i2l4452 2B40                                    i2l4380 1FD2  
                                  i2l6116 1ADE                                    i2l4278 2400  
                                  i2l4286 2436                                    i2l4470 08BC  
                                  i2l4374 1FA6                                    i2l4288 243E  
                                  i2l4296 2474                                    i2l5360 2972  
                                  i2l4704 1C1C                                    i2l5344 334E  
                                  i2l5336 3306                                    i2l6136 1B2C  
                                  i2l6080 1A68                                    i2l6072 1A5C  
                                  i2l4538 0AEA                                    i2l4490 097C  
                                  i2l4722 1E84                                    i2l4634 1D98  
                                  i2l6138 1B48                                    i2l6058 1A40  
                                  i2l5372 29B4                                    i2l4492 097E  
                                  i2l4484 0938                                    i2l4396 201E  
                                  i2l4724 1E8A                                    i2l5358 296C  
                                  i2l4734 1EAC                                    i2l4726 1E90  
                                  i2l4654 1E14                                    i2l5614 3664  
                                  i2l5710 194C                                    i2l6086 1A8C  
                                  i2l5384 29F8                                    i2l4496 099A  
                                  i2l4736 1EB2                                    i2l4752 1F18  
                                  i2l5616 3666                                    i2l6096 1A9C  
                                  i2l5378 29D4                                    i2l4682 1B80  
                                  i2l4738 1EB8                                    i2l5722 1982  
                                  i2l4748 1EFA                                    i2l5732 19E6  
                                  i2l5654 259C                                    i2l5670 2604  
                                  i2l5638 34C6                                    i2l5726 198A  
                                  i2l5718 1964                                    i2l4688 1BA4  
                                  i2l5672 260A                                    i2l5666 25EA  
                                  i2l5658 25A4                                    i2l5694 191C  
                                  i2l5698 1924                                    i2l7992 32C2  
                                  i2l7994 32F2                          __end_of___lwtoft 36EC  
                           CDCTxService@i 00C4                                    _CalcPI 04B6  
                               ??_BusyADC 00BA                  i2USBTransferOnePacket@ep 0031  
                       ??i2_USBDeviceInit 0035                                 ??_ReadADC 00BC  
         __size_ofi2_USBTransferOnePacket 00BA                                 ??_InitApp 00C3  
                          __CFG_VREGEN$ON 000000                              usb_send@args 00E1  
                               ??_OpenADC 00BC                                    _V_Eval 22D2  
                     verifie_Vbat@voltage 0100                              I_V_Set@count 00FB  
                       _shortPacketStatus 0019                            __CFG_XINST$OFF 000000  
                           main@msg_Error 0105                           USBDeviceTasks@i 004A  
             USBStdFeatureReqHandler@pUEP 0042                          __end_of_high_isr 3168  
                USBTransferOnePacket@data 00BB                USBCtrlTrfInHandler@lastDTS 002E  
                         ??_USBDeviceInit 00C2                                    ___ftge 27AE  
                            ?_putUSBUSART 00C0                                    ___wmul 3508  
                               ??___awdiv 00BE                                 ??___ftadd 00DB  
                          __CFG_STVREN$ON 000000                                 ??___ftdiv 00E7  
                               ??___ftneg 00BD                                 ??___ftmul 00CC  
                               ??___lwdiv 00BE                         _USBEnableEndpoint 34CC  
         __size_of_USBStdGetStatusHandler 00BA                          OpenTimer1@config 00BA  
                                  _memset 3572                                    clear_0 3244  
                                  clear_1 3250                                    clear_2 325C  
                                  clear_3 3268                          ___awdiv@quotient 00C0  
                  ??_verifie_Precondition 00FF                        ?_USBEnableEndpoint 0035  
                        calc_Time@initial 00C2                            _select_Battery 37D8  
                                  _strcpy 353E                                    _strlen 33FC  
                   ___ftmul@f3_as_product 00D0             __size_of_USBTransferOnePacket 00D8  
                               ??_isdigit 00BA                              _CDCTxService 121C  
                            __mediumconst 7D58                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
         __end_of_APP_CustomCDCInitialize 37D6                       ??_USBEnableEndpoint 0036  
                        __end_of_start_CC 33FC                          __end_of_start_CV 31D8  
                        __end_of_usb_send 3084                                 ??_stop_CV 00F8  
                          _select_Program 37D6                                 ??_sprintf 00C7  
                             _CtrlTrfData 000438                                 ??_strncmp 00C0  
                               ??_strncpy 00C0                             ?_list_Battery 00BA  
                    _controlTransferState 0016                                __accesstop 0060  
                 __end_of__initialization 328E                           __CFG_PBADEN$OFF 000000  
                              ___ftadd@f1 00D5                                ___ftadd@f2 00D8  
                              ___ftge@ff1 00D5                                ___ftge@ff2 00D8  
                           ___rparam_used 000001                                ___ftdiv@f1 00E1  
                              ___ftdiv@f2 00E4                                ___ftdiv@f3 00EB  
                __size_of_USBStallHandler 0042                                ___ftneg@f1 00BA  
                              ___awtoft@c 00C2                        __size_of_calc_Time 008C  
                     __size_of_USBSuspend 002A                             ?_list_Program 00BA  
                              ___ftmul@f1 00C6                                ___ftmul@f2 00C9  
                            stop_CV@v_bat 00FA                            __pcstackCOMRAM 002D  
               __end_of_USBEnableEndpoint 3508                             __end_of_sd000 7E48  
                           __end_of_sd001 7E32                             __end_of_sd002 7DB7  
                            __pidataBANK1 3770          __size_of_USBCtrlEPAllowDataStage 009E  
                  __end_of_select_Battery 37DA             __size_of_USBConfigureEndpoint 0094  
             __end_of_USBCtrlTrfInHandler 29FE                                ___lwtoft@c 00C2  
                  i2_USBTransferOnePacket 2B76                         _CDCTxService$2586 00C2  
                              _cdc_notice 0060                                 ?i2_memset 002D  
                              _cdc_rx_len 0015                    __end_of_select_Program 37D8  
                              _cdc_tx_len 00A2                  ??_USBCtrlTrfSetupHandler 0047  
                          _SelChanConvADC 373C                          ?_USBDeviceAttach 002D  
                          ??_list_Battery 00BC                    _USBStdGetStatusHandler 2ABC  
                            sprintf@width 00D6                                _check_Lipo 37BC  
                              __pbssBANK0 0060                                __pbssBANK1 0177  
                              __pbssBANK2 0200                               ?_OpenTimer1 002D  
                                 ?_CalcPI 00F0                 check_Precondition@voltage 00FA  
             __size_of_USBWakeFromSuspend 0030                               _pBDTEntryIn 0078  
                                 ?_V_Eval 00F0                            ??_list_Program 00BC  
        __end_of_USBCtrlEPServiceComplete 1E68                                _end_Charge 37DC  
                    __size_of_list_Action 000C               __size_of_USBCheckCDCRequest 00D0  
                    USBCtrlTrfRxService@i 002D                                   ?___ftge 00D5  
                                 ?___wmul 00BA                           ?_select_Battery 002D  
                                 ?_memset 00BA                                _device_dsc 7E32  
                               ?___awtoft 00C2                                 ?___ftpack 00BA  
                        _USBCtrlEPService 254C                                _ep_data_in 008B  
                                 ?_strcpy 00BA                                   ?_strlen 00BA  
                               ?___lwtoft 00C2               __end_of_USBCtrlTrfRxService 1C68  
                      _USBCheckStdRequest 1E68                         _configDescriptor1 7DB7  
                              ??i2_memset 0033               __end_of_USBCtrlTrfTxService 247C  
                  __end_of_SelChanConvADC 375E                       _USBStdSetCfgHandler 1F5C  
                       __end_of_calc_Time 2F1E                           ?_select_Program 002D  
                              _cur_Action 0177                       ?_USBCheckStdRequest 002D  
            __size_of_USBStdGetDscHandler 013C                                   _UIEbits 000F69  
                               ?_high_isr 002D                                   _I_V_Set 26E4  
                                 _UIRbits 000F68                __end_of_check_Precondition 21FA  
                           _cdc_trf_state 00A1                                   _BusyADC 37B0  
                                 _ReadADC 375E                           __size_of_CalcPI 03E0  
                                 _InitApp 2C30                                   _pCDCDst 0091  
                                 _pCDCSrc 0094                                   _OpenADC 2F1E  
                                 __Hparam 0000                      ?_USBStdSetCfgHandler 002D  
                               _CDCInitEP 31D8                           __size_of_V_Eval 00D6  
                                 __Lparam 0000                __size_of_USBEnableEndpoint 003C  
                    ??_USBCheckStdRequest 0047                           __size_of___ftge 00C8  
           __size_of_USBCtrlTrfOutHandler 005C                                   ___awdiv 29FE  
                                 ___ftadd 0B1C                                   ___ftdiv 165A  
        __size_of_APP_CustomCDCInitialize 0006                                   ___ftneg 360C  
                        ??_USBDeviceTasks 004A                           __size_of___wmul 0036  
                                 ___ftmul 13A4                                 ?_start_CC 00FD  
                               ?_start_CV 00FD                                   ___lwdiv 2F9A  
                       ??_USBStallHandler 002D                                 ?_usb_send 00DA  
                    __size_of_putUSBUSART 0026                                   __pcinit 323E  
                              ??___awtoft 00C5                                ??___ftpack 00BF  
                                 _battery 0179                           __size_of_memset 0034  
               __end_of_configDescriptor1 7DFA                                   __ramtop 0800  
                              _initialize 37A4                       __size_of_OpenTimer1 0032  
                                 __ptext0 37C8                                   __ptext1 0D84  
                                 __ptext2 0F0C                                   __ptext3 1094  
                                 __ptext4 2E92                                   __ptext5 29FE  
                                 __ptext6 261A                                   __ptext7 353E  
                                 __ptext8 2042                                   __ptext9 3354  
                                 _inPipes 0072               _USBDeferOUTDataStagePackets 0010  
                              ??___lwtoft 00C5                           __size_of_strcpy 0034  
                         __size_of_strlen 004A                         __end_of_hexpowers 7D61  
                               _T1CONbits 000FCD                              ??_USBSuspend 0041  
                                 _isdigit 3698                                   _seconds 0084  
                         ?_SelChanConvADC 002D                           i2_USBDeviceInit 18E2  
                        i2USBDeviceInit@i 0035                                   _timeout 009C  
                      __end_of_USB_CD_Ptr 7D69                                   _stop_CV 2042  
                                 main@end 0169                            OpenADC@config2 00BA  
                                 _sprintf 001A           __size_of_USBCtrlTrfSetupHandler 008E  
                                 main@res 0175                                ??_high_isr 004B  
                       calc_Time@interval 00C8                                   _strncmp 261A  
                          __pintcode_body 30F6                                   _strncpy 3084  
                             ?_check_Lipo 00BA                      end_of_initialization 328E  
                   start_Precondition@res 0100                     SelChanConvADC@channel 00BB  
                      __end_of_USB_SD_Ptr 7D67                         _precondition_Time 0097  
                     _pBDTEntryEP0OutNext 0009                                   memset@c 00BC  
                                 memset@n 00BE                                   memset@p 00C0  
                           __Lmediumconst 7D58                                   int_func 30F6  
         _dummy_encapsulated_cmd_response 001A                  ?_USBStdFeatureReqHandler 002D  
                      _start_Precondition 3354                     ??_USBStdSetCfgHandler 0041  
                              ?_CDCInitEP 002D                               ?_end_Charge 002D  
                      __end_of_USBSuspend 3716                   _USBCtrlEPAllowDataStage 2CD2  
                                 postdec1 000FE5                                   postdec2 000FDD  
                     ?_start_Precondition 00FD                                   postinc0 000FEE  
                                 postinc2 000FDE                                ??_start_CC 00FF  
                              ??_start_CV 00FF                                ??_usb_send 00E1  
                _USBCtrlEPServiceComplete 1D74                      __end_of_list_Battery 3798  
                                 strlen@s 00BA                _USBStatusStageEnabledFlag1 0012  
              _USBStatusStageEnabledFlag2 0013                        USBEnableEndpoint@p 0036  
                    __end_of_list_Program 378C                        _BothEP0OutUOWNsSet 000D  
                    ??_start_Precondition 00FF                             ?_verifie_Ibat 00FD  
                           ?_verifie_Vbat 00FD                 USBConfigureEndpoint@EPNum 0032  
              ?_USBCtrlEPAllowStatusStage 002D                    __size_of_select_Action 0002  
     USER_USB_CALLBACK_EVENT_HANDLER@size 003D                                 _USTATcopy 002C  
            __end_of_USBTransferOnePacket 22D2                               ___ftdiv@exp 00EE  
                          __end_of_CalcPI 0896                         putUSBUSART@length 00C2  
                             ___ftmul@exp 00CF                            __end_of_V_Eval 23A8  
                  _USBCtrlTrfSetupHandler 2E04                   ?i2_USBTransferOnePacket 002D  
                   __end_of_USBDeviceInit 165A                            __end_of___ftge 2876  
                          __end_of___wmul 353E                       __size_of_check_Lipo 000C  
                             ?_initialize 00BA                   __end_ofi2_USBDeviceInit 1A1C  
                               i2memset@c 002F                                 i2memset@n 0031  
                               i2memset@p 0033                            __end_of_memset 35A6  
                       _USBBusIsSuspended 009E                           usb_send@usb_msg 0200  
           __size_of_verifie_Precondition 0188                            __end_of_strcpy 3572  
                          __end_of_strlen 3446                       start_initialization 323E  
                 ?_USBStdGetStatusHandler 002D             USBCtrlTrfRxService@byteToRead 002E  
                     __size_of_end_Charge 0002                            ??_verifie_Ibat 00FF  
                          ??_verifie_Vbat 00FF                               _cdc_data_rx 000540  
                             _cdc_data_tx 000500                         __size_ofi2_memset 002C  
            __end_of_USBConfigureEndpoint 2E04           __end_of_USBStdFeatureReqHandler 0B1C  
                            ??_OpenTimer1 00BA         __end_of_USBCtrlEPAllowStatusStage 293A  
                             start_CC@res 0100                  __end_of_USBCtrlEPService 261A  
                             start_CV@res 0100                                  ??_CalcPI 00F2  
               ??_USBCtrlEPAllowDataStage 002E                                  ??_V_Eval 00F2  
                             ??_CDCInitEP 0039                            USBDeviceInit@i 00C2  
                        ??_select_Battery 00BA                    _pBDTEntryEP0OutCurrent 0007  
                 USBTransferOnePacket@dir 00BA                   USBTransferOnePacket@len 00BD  
          __end_ofi2_USBTransferOnePacket 2C30                   _APP_CustomCDCInitialize 37D0  
                                ??___ftge 00DB                                  ??___wmul 00BE  
                     _USBStdGetDscHandler 17A6                             _select_Action 37DA  
                             __pdataBANK1 01D3                          __CFG_LPT1OSC$OFF 000000  
                                ??_memset 00C0                          ??_select_Program 00BA  
                                ??_strcpy 00BE                                  ??_strlen 00BC  
                      __end_of_OpenTimer1 360C                    _USBActiveConfiguration 002B  
          __end_of_USBStdGetStatusHandler 2B76                         __size_of___awtoft 0044  
                       __size_of___ftpack 010C                               __pbssCOMRAM 0001  
                       __size_of___lwtoft 002A                             __pcstackBANK0 00BA  
                           __pcstackBANK1 0100              __size_of_USBCtrlTrfInHandler 00C4  
                             _charge_Time 0088                              _isdigit$3249 00BB  
                    ?_USBStdGetDscHandler 002D                                  ?_I_V_Set 00F6  
                               _calc_Time 2E92                __end_of_USBWakeFromSuspend 366C  
                       __size_of_high_isr 3160                               sprintf@flag 00D4  
                           ??_list_Action 00BC                               sprintf@prec 00D8  
                         _USBStallHandler 348A                       __size_of_initialize 000C  
                            _pBDTEntryOut 007E                                  ?_BusyADC 002D  
                                ?_ReadADC 00BA                __end_of_USBCheckCDCRequest 254C  
                                ?_InitApp 002D                                 __pnvBANK1 01E2  
                               _algo_Name 01D3                  __size_of_USBDeviceAttach 0034  
                       OpenADC@portconfig 00BB                                  ?_OpenADC 00BA  
                   __size_of_list_Battery 000C                          ___lwdiv@dividend 00BA  
                               __pintcode 0008                           verifie_Ibat@end 00FD  
                           __pmediumconst 7D58                           verifie_Ibat@res 0103  
                          ?_select_Action 002D                                  ?___awdiv 00BA  
                                ?___ftadd 00D5                        _check_Precondition 2120  
                                ?___ftdiv 00E1                                  ?___ftneg 00BA  
                                ?___ftmul 00C6                                  ?___lwdiv 00BA  
                        ??_SelChanConvADC 00BA                     __size_of_list_Program 000C  
                        ?i2_USBDeviceInit 002D                         __size_of_start_CC 0054  
                       __size_of_start_CV 0070                         __size_of_usb_send 0072  
                     ?_check_Precondition 00F6                      _USBTransferOnePacket 21FA  
                               _cur_State 01E2                                  ?_isdigit 002D  
                         verifie_Vbat@end 00FD                           verifie_Vbat@res 0103  
            __end_of_USBCtrlTrfOutHandler 3354                                 _hexpowers 7D59  
                   ??_USBStdGetDscHandler 002D                               _ep_data_out 008E  
                        ___lwdiv@quotient 00BF                                  ?_stop_CV 00F6  
                                ?_sprintf 00C1              __size_of_USBCtrlTrfRxService 0118  
           USBConfigureEndpoint@direction 002D                                  ?_strncmp 00BA  
                            ??_check_Lipo 00BC                                  ?_strncpy 00BA  
                              ?_calc_Time 00C2                              _list_Battery 378C  
            __size_of_USBCtrlTrfTxService 00D4                            ___wmul@product 00BE  
                           OpenADC@config 00BE                      ??_check_Precondition 00F8  
              ??_USBCtrlEPServiceComplete 002E                               strncpy@from 00BC  
                                _IPR2bits 000FA2                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                               strncpy@size 00BE  
               ??_APP_CustomCDCInitialize 0039                              ??_end_Charge 00BA  
                                i2u336_40 2428                                  i2u352_40 1826  
                                i2u336_47 241E                                  i2u352_47 181C  
                                i2u353_40 185A                                  _PIR1bits 000F9E  
                                i2u353_47 1850                                  i2u338_40 2466  
                                i2u338_47 245C                                  i2u355_40 18AE  
                                _PIR2bits 000FA1                                  i2u355_47 18A4  
                            _list_Program 3780                 USBCtrlEPService@setup_cnt 0049  
                                _RCONbits 000FD0                             ??_putUSBUSART 00C3  
                        __CFG_WDTPS$32768 000000                                  _UEP0bits 000F70  
                     __end_of_list_Action 37A4                _USBDeferINDataStagePackets 000F  
                    __end_of_verifie_Ibat 121C                       verifie_Ibat@current 0100  
             __size_of_USBCheckStdRequest 00F4                      __end_of_verifie_Vbat 0F0C  
                                _UCONbits 000F6D                      _USBConfigureEndpoint 2D70  
        __size_of_USBStdFeatureReqHandler 0286                        __end_of_check_Lipo 37C8  
                              _ADCON0bits 000FC2                         ___wmul@multiplier 00BA  
                   ?_USBTransferOnePacket 00BA                          main@precondition 0173  
          check_Precondition@precondition 00F6                             ?_CDCTxService 002D  
                            _RemoteWakeup 000E                                  i2_memset 366C  
                             _cur_Program 0178                   __end_of_USBStallHandler 34CC  
                      __end_of_end_Charge 37DE                            usb_send@format 00DA  
                               copy_data0 3282                            I_V_Set@channel 00F8  
             ??_USBCtrlEPAllowStatusStage 002D               __end_of_USBStdSetCfgHandler 2042  
                        __size_of_I_V_Set 00CA                        __end_of_device_dsc 7E44  
                        __size_of_BusyADC 000C                   ?_USBCtrlTrfSetupHandler 002D  
                        __size_of_ReadADC 0012                   USBStdGetStatusHandler@p 002E  
                        __size_of_InitApp 00A2                                  __Hrparam 0000  
                         ??_select_Action 00BA                          __size_of_OpenADC 007C  
                              I_V_Set@res 00F9                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 00BE                                  _SetupPkt 000430  
             verifie_Precondition@voltage 0100                     ?_USBConfigureEndpoint 002D  
                       ??_USBDeviceAttach 00BA                          __size_of___awdiv 00BE  
                        __size_of___ftadd 0268                          __size_of___ftdiv 014C  
                        __size_of___ftneg 0030                          __size_of___ftmul 015E  
                        __size_of___lwdiv 0078                              ??_initialize 00BC  
                                ___awtoft 3446                                  ___ftpack 1C68  
                              stop_CV@res 00F8                       __end_of_putUSBUSART 373C  
                             _line_coding 0022                                  ___lwtoft 36C2  
                          ??_CDCTxService 00C1                                sprintf@idx 00CB  
                              sprintf@len 00D2                                sprintf@val 00D0  
                        __size_of_isdigit 002A                   __size_of_USBDeviceTasks 0134  
                         ___lwdiv@divisor 00BC                           ___lwdiv@counter 00BE  
                                __ptext10 3168                                  __ptext11 33A8  
                                __ptext20 378C                                  __ptext12 26E4  
                                __ptext21 3798                                  __ptext13 04B6  
                                __ptext30 2F9A                                  __ptext22 37A4  
                                __ptext14 360C                                  __ptext31 3716  
                                __ptext23 37DC                                  __ptext15 0B1C  
                                __ptext40 1C68                                  __ptext32 121C  
                                __ptext24 2120                                  __ptext16 37D6  
                                __ptext41 373C                                  __ptext33 21FA  
                                __ptext25 3012                                  __ptext17 37D8  
                                __ptext50 35DA                                  __ptext42 375E  
                                __ptext34 36C2                                  __ptext26 33FC  
                                __ptext18 37DA                                  __ptext51 2F1E  
                                __ptext43 37B0                                  __ptext35 27AE  
                                __ptext27 001A                                  __ptext19 3780  
                                __ptext60 1D74                                  __ptext44 37BC  
                                __ptext36 22D2                                  __ptext28 3698  
                                __ptext61 2CD2                                  __ptext53 1A1C  
                                __ptext45 2C30                                  __ptext37 13A4  
                                __ptext29 3508                                  __ptext70 37D0  
                                __ptext62 1E68                                  __ptext54 18E2  
                                __ptext46 3084                                  __ptext38 165A  
                                __ptext71 31D8                                  __ptext63 1F5C  
                                __ptext55 363C                                  __ptext47 1502  
                                __ptext39 3446                                  __ptext72 2B76  
                                __ptext64 366C                                  __ptext56 36EC  
                                __ptext48 3572                                  __ptext73 34CC  
                                __ptext65 2ABC                                  __ptext57 348A  
                                __ptext49 35A6                                  __ptext74 2D70  
                                __ptext66 17A6                                  __ptext58 254C  
                                __ptext75 32F8                                  __ptext67 0896  
                                __ptext59 2E04                                  __ptext76 1B50  
                                __ptext68 329C                                  __ptext77 2876  
                                __ptext69 247C                                  __ptext78 293A  
                                __ptext79 23A8               __size_of_start_Precondition 0054  
                                _high_isr 0008                               ??_calc_Time 00C6  
                        __size_of_stop_CV 00DE                          __size_of_sprintf 049C  
                        __size_of_strncmp 00CA                          __size_of_strncpy 0072  
                              strcpy@from 00BC            __end_of_USBCtrlTrfSetupHandler 2E92  
                           __size_of_main 0008              __end_of_verifie_Precondition 1094  
                       ?_USBCtrlEPService 002D                               _list_Action 3798  
                              strncmp@len 00BE                        __end_of_initialize 37B0  
                      ??_USBCtrlEPService 0047                       _USBCtrlTrfInHandler 293A  
                                _outPipes 006A                      _USBCtrlTrfOutHandler 32F8  
                                int$flags 0059                 _USBCtrlEPAllowStatusStage 2876  
                                _start_CC 33A8                                  _start_CV 3168  
                                _usb_send 3012                    ??_USBTransferOnePacket 00BE  
                   __CFG_CPUDIV$OSC1_PLL2 000000                 _USBDeferStatusStagePacket 0011  
                CDCTxService@byte_to_send 00C5                                _INTCONbits 000FF2  
                    ?_USBCtrlTrfInHandler 002D             USBCtrlTrfTxService@byteToSend 002D  
                                isdigit@c 00BC                                  memset@p1 00BA  
                        ?_USBStallHandler 002D                  USBStdFeatureReqHandler@p 0045  
                                intlevel2 0000                                 sprintf@ap 00CC  
                               sprintf@cp 00CE                                 sprintf@sp 00C1  
                  __size_of_USBDeviceInit 0158   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 32F8  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C         ??_USER_USB_CALLBACK_EVENT_HANDLER 003F  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0039           _USER_USB_CALLBACK_EVENT_HANDLER 329C  
            i2USBTransferOnePacket@handle 0032                     check_Precondition@res 00F8  
                   __size_of_verifie_Ibat 0188                     __size_of_verifie_Vbat 0188  
                               strncmp@s1 00BA                                 strncmp@s2 00BC  
                               strncpy@cp 00C0                                 strncpy@to 00BA  
              i2USBTransferOnePacket@data 002E                    ??_USBConfigureEndpoint 002E  
                   ?_USBCtrlTrfOutHandler 002D                               _putUSBUSART 3716  
                     _USBCtrlTrfRxService 1B50                        _USBWakeFromSuspend 363C  
                 _USBStdFeatureReqHandler 0896                        _USBCheckCDCRequest 247C  
                     _USBCtrlTrfTxService 23A8                   verifie_Precondition@end 00FD  
                 verifie_Precondition@res 0103                                  sprintf@c 00D9  
                                sprintf@f 00C3                       ?_USBWakeFromSuspend 002D  
                   ??_USBCtrlTrfInHandler 002E                                  strcpy@cp 00BE  
                                strlen@cp 00BE                                  strcpy@to 00BA  
                   _USBAlternateInterface 0029                       ?_USBCheckCDCRequest 002D  
               i2USBTransferOnePacket@dir 002D                 i2USBTransferOnePacket@len 0030  
                     USBEnableEndpoint@ep 0038                           _endpoint_number 0018  
                    ?_USBCtrlTrfRxService 002D                              _verifie_Ibat 1094  
                            _verifie_Vbat 0D84                        __CFG_FOSC$HSPLL_HS 000000  
                ?_USBCtrlEPAllowDataStage 002D                      ?_USBCtrlTrfTxService 002D  
            _USBStatusStageTimeoutCounter 0014                      ??_USBWakeFromSuspend 0041  
              USBTransferOnePacket@handle 00BF                      __end_of_CDCTxService 13A4  
                    ??_USBCheckCDCRequest 002D                                _USB_CD_Ptr 7D67  
